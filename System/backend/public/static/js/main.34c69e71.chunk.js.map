{"version":3,"sources":["components/CompanyAgreement/Agreement.module.css","components/ReportPracticeModal/ReportPracticeModal.module.css","components/Modal/Modal.module.css","components/EditAnnouncementModal/EditAnnouncementModal.module.css","components/AddAnnouncementModal/AddAnnouncementModal.module.css","components/Navbar/Navbar.module.css","bundles/Invitation/Invitation.module.css","components/Page/Page.module.css","components/Announcement/Announcement.module.css","bundles/PracticeSuperviser/AgreementPage/AgreementPage.module.css","components/AddUserModal/AddUserModal.module.css","bundles/Company/AgreementPage/AgreementPage.module.css","components/Statement/Statement.module.css","components/Input/Input.module.css","components/Select/Select.module.css","components/LoadingSpinner/LoadingSpinner.module.css","bundles/Student/MyPractice/Journal/Journal.module.css","components/Textarea/Textarea.module.css","bundles/PracticeSuperviser/UsersPage/UsersPage.module.css","components/NotFound/NotFound.module.css","components/Tabs/Tabs.module.css","bundles/PracticeSuperviser/AnnouncementPage/AnnouncementPage.module.css","components/Student/Student.module.css","components/Company/Student.module.css","components/Container/Container.module.css","components/CompanyAvatar/CompanyAvatar.module.css","components/ConfirmModal/ConfirmModal.module.css","components/SearchInput/SearchInput.module.css","components/YearPicker/YearPicker.module.css","bundles/PracticeSuperviser/UsersPage/Students/Students.module.css","bundles/PracticeSuperviser/UsersPage/Companies/Companies.module.css","bundles/Company/AnnouncementPage/AnnouncementPage.module.css","bundles/Student/MyPractice/MyPractice.module.css","assets/Background.jpg","components/Input/index.jsx","components/Select/index.jsx","assets/Logo.jsx","bundles/Login/queries.js","hooks/useAuth.js","hooks/useSnackGraphql.js","config/userTypes.js","config/userRecoilAtoms.js","bundles/Login/index.jsx","components/Container/index.jsx","icons/Accept.jsx","icons/Decline.jsx","components/FileUploadWrapper/index.jsx","components/Practice/queries.js","components/LoadingSpinner/index.jsx","config/global.js","components/CompanyAvatar/index.jsx","components/Practice/index.jsx","components/Page/index.jsx","components/Modal/index.jsx","components/ReportPracticeModal/queries.js","components/ReportPracticeModal/index.jsx","bundles/Student/MyPractice/queries.js","bundles/Student/MyPractice/Journal/queries.js","bundles/Student/MyPractice/Journal/index.jsx","bundles/Student/MyPractice/index.jsx","components/ConfirmModal/index.jsx","components/Textarea/index.jsx","components/EditAnnouncementModal/queries.js","components/EditAnnouncementModal/index.jsx","components/Announcement/queries.js","components/Announcement/index.jsx","bundles/Student/AnnouncementPage/queries.js","bundles/Student/AnnouncementPage/index.jsx","bundles/Profile/queries.js","bundles/Profile/index.jsx","components/NotFound/index.jsx","bundles/Student/queries.js","bundles/Student/index.jsx","hooks/useLocalStorage.js","routes/PrivateRoute.jsx","routes/ProtectedRoute.jsx","bundles/PracticeSuperviser/AnnouncementPage/queries.js","components/AddAnnouncementModal/queries.js","components/AddAnnouncementModal/index.jsx","components/Tabs/index.jsx","components/SearchInput/index.jsx","utility/searchHelper.js","bundles/PracticeSuperviser/AnnouncementPage/index.jsx","bundles/PracticeSuperviser/AgreementPage/queries.js","components/Agreement/queries.js","components/Agreement/index.jsx","components/YearPicker/index.jsx","bundles/PracticeSuperviser/AgreementPage/index.jsx","components/Student/index.jsx","bundles/PracticeSuperviser/UsersPage/Students/queries.js","bundles/PracticeSuperviser/UsersPage/Students/index.jsx","components/Company/index.jsx","bundles/PracticeSuperviser/UsersPage/Companies/queries.js","bundles/PracticeSuperviser/UsersPage/Companies/index.jsx","components/AddUserModal/queries.js","components/AddUserModal/index.jsx","bundles/PracticeSuperviser/UsersPage/index.jsx","bundles/PracticeSuperviser/queries.js","bundles/PracticeSuperviser/index.jsx","bundles/Company/AnnouncementPage/queries.js","bundles/Company/AnnouncementPage/index.jsx","bundles/Company/AgreementPage/queries.js","components/CompanyAgreement/queries.js","components/CompanyAgreement/index.jsx","bundles/Company/AgreementPage/index.jsx","bundles/Company/queries.js","bundles/Company/index.jsx","components/ActionMenu/index.jsx","components/Navbar/index.jsx","components/Layout/index.jsx","bundles/Logout/index.jsx","bundles/Invitation/queries.js","components/Statement/index.jsx","bundles/Invitation/index.jsx","bundles/index.jsx","index.js","components/Practice/Practice.module.css","bundles/Profile/Profile.module.css","components/Agreement/Agreement.module.css","bundles/Login/Login.module.css"],"names":["module","exports","Input","type","id","name","onChange","inputRef","value","label","className","labelOnTop","bright","placeholder","defaultValue","clsx","css","container","ref","Select","options","map","key","Logo","xmlns","width","height","fill","viewBox","filter","d","fillRule","clipRule","x","y","maskUnits","mask","fillOpacity","colorInterpolationFilters","filterUnits","floodOpacity","result","in","values","dy","stdDeviation","in2","dx","k2","k3","operator","x1","x2","y1","y2","gradientUnits","stopColor","offset","LOGIN_STUDENT","gql","LOGIN_PRACTICE_SUPERVISER","LOGIN_COMPANY","useAuth","useState","localStorage","getItem","token","setTokenValue","userType","setUserTypeValue","setToken","setItem","setUserType","removeToken","undefined","removeItem","removeUserType","useSnackGraphql","variant","useSnackbar","enqueueSnackbar","enqueueError","errors","graphQLErrors","message","USER_TYPES","student","practiceSuperviser","company","studentAtom","atom","default","companyAtom","practiceSuperviserAtom","globalDatePickerValueAtom","Date","getFullYear","Login","useForm","register","handleSubmit","showGraphqlErrors","useRecoilState","setStudent","setCompany","setPracticeSupervisor","useMutation","loginStudent","loginPracticeSuperviser","loginCompany","to","page","content","title","form","required","validate","validator","isEmail","email","Alert","severity","minLength","password","select","preset","logIn","onClick","data","variables","then","a","catch","Container","children","IconAccept","IconDecline","FileUploadWrapper","onFileSelect","accept","fileInput","useRef","e","target","files","mergeRefs","style","display","React","cloneElement","current","click","CREATE_DOCUMENT","LoadingSpinner","props","global","ReactDOM","createPortal","CircularProgress","spinner","document","body","API_URL","CompanyAvatar","color","companyAvatar","backgroundColor","DOCUMENT_TYPE","Practice","company_name","address","city","phone","from","accepted","dictionaryUrl","DocumentFiles","refetch","Company","company_accepted","history","useHistory","filePracticeAgreement","setFilePracticeAgreement","filePersonalDataAgreement","setFilePersonalDataAgreement","isLoading","setIsLoading","createDocument","PracticeAgreement","find","PersonalDataAgreement","handleCreateDocument","file","PracticeAgreementId","console","log","err","block","charAt","first_name","last_name","dayjs","format","marginTop","push","buttons","fetch","headers","Headers","Authorization","response","blob","link","createElement","href","window","URL","createObjectURL","download","error","disabled","fileHandler","send","Page","button","header","CustomModal","open","setOpenModal","backdrop","modal","stopPropagation","footer","CREATE_PRACTICE_AGREEMENT","ReportPracticeModal","createPracticeAgreement","Modal","inputGroup","fromToWrapper","MY_PRACTICE_AGREEMENTS","CREATE_JOURNAL","GET_JOURNAL","Journal","createJournal","agreementId","useParams","useLazyQuery","getJournal","loading","setFile","useEffect","journal","getDocumentFile","status","rejectNote","wrapper","MyPractice","openModal","useQuery","match","useRouteMatch","exact","path","myPracticeAgreements","practice","ConfirmModal","onConfirm","onDecline","component","text","Textarea","EDIT_ANNOUNCEMENT","EditAnnouncementModal","editAnnouncement","useRecoilValue","announcement","fromDate","toDate","uniqueData","slots","parseInt","technologies","description","DELETE_PRACTICE_ANNOUNCEMENT","CONFIRM_PRACTICE_ANNOUNCEMENT","CREATE_APPLICATION","Announcement","CompanyId","announcements","setAnnouncements","updatedAt","openDeleteModal","setOpenDeleteModal","openEditModal","setOpenEditModal","openConfirmApplicationModal","setOpenConfirmApplicationModal","confirmPracticeAnnouncement","deletePracticeAnnouncement","createApplication","handleDelete","res","ANNOUNCEMENTS","AnnouncementPage","practiceAnnouncements","index","UPDATE_STUDENT","UPDATE_COMPANY","UPDATE_PRACTICE_SUPERVISER","Profile","setPracticeSuperviser","updateStudentProfile","updateCompanyProfile","updatePracticeSuperviserProfile","enqueueGraphqlError","formGroup","index_number","confirmPassword","length","NotFound","GET_STUDENT","Student","getStudent","meStudent","useLocalStorage","PrivateRoute","rest","userTypeStorage","render","location","ProtectedRoute","pathname","state","clearUserData","ADD_ANNOUNCEMENT","AddAnnouncementModal","addAnnouncement","CustomTabs","Tabs","tabs","Tab","tab","SearchInput","TextField","search","searchHelper","array","toLowerCase","arrayLowerCase","element","String","isArrayContain","forEach","includes","tabValue","setTabValue","setSearch","indicatorColor","textColor","event","newValue","searchInput","AGREEMENTS","DELETE_PRACTICE_AGREEMENT","CONFIRM_PRACTICE_AGREEMENT","CHANGE_DOCUMENT_STATUS","STATUS","icon","rejected","Agreement","agreements","setAgreements","confirmPracticeAgreement","deletePracticeAgreement","changeDocumentStatus","setRejectNote","openConfirmModal","setOpenConfirmModal","openConfirmAgreementModal","setOpenConfirmAgreementModal","openRejectModal","setOpenRejectModal","InternshipJournal","agreement","handleDocumentStatusChange","avatar","Avatar","url","YearPicker","year","now","years","Array","val","Number","yearPicker","AgreementPage","yearFilter","setYearFilter","getAgreements","GET_STUDENTS","Students","studentsList","students","GET_COMPANIES","Companies","companiesList","companies","CREATE_INVITE","createInvite","UsersPage","AddUserModal","GET_PRACTICE_SUPERVISER","PracticeSuperviser","getPracticeSuperviser","mePracticeSuperviser","REJECT_COMPANY_AGREEMENT","CompanyAgreement","rejectCompanyAgreement","GET_COMPANY","getCompany","meCompany","Item","forwardRef","MenuItem","ActionMenu","anchorEl","closeMenu","Menu","keepMounted","Boolean","onClose","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Navbar","setAnchorEl","currentTarget","useMenu","openMenu","logo","menu","user","Layout","withApollo","client","clearStore","CONFIRM_INVITATION_TOKEN","REGISTER_COMPANY","REGISTER_STUDENT","REGISTER_PRACTICE_SUPERVISER","Statement","outerContainer","Invitation","getInvitationConfirm","invitationError","setInvitationError","registerStudent","registerCompany","registerPracticeSuperviser","invitationData","setInvitationData","registerSuccess","setRegisterSuccess","watch","succesRegister","setTimeout","confirmInvitationToken","confirm_password","Application","errorLink","onError","networkError","locations","extensions","code","reload","process","authMiddleware","ApolloLink","operation","forward","setContext","authorization","replace","additiveLink","createUploadLink","uri","ApolloClient","cache","InMemoryCache","maxSnack","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.34c69e71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Agreement_container__H6mD8\",\"block\":\"Agreement_block__14ewg\",\"alignCenter\":\"Agreement_alignCenter___P7Nz\",\"avatar\":\"Agreement_avatar__2Xe_Y\",\"buttons\":\"Agreement_buttons__Xtafw\",\"agreements\":\"Agreement_agreements__3_JUR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ReportPracticeModal_container__6wBTc\",\"content\":\"ReportPracticeModal_content__3CQcp\",\"fromToWrapper\":\"ReportPracticeModal_fromToWrapper__2qRPw\",\"firmName\":\"ReportPracticeModal_firmName__1gkbU\",\"inputGroup\":\"ReportPracticeModal_inputGroup__13I7J\",\"errors\":\"ReportPracticeModal_errors__3PYZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__11LlO\",\"modal\":\"Modal_modal__3GwDb\",\"content\":\"Modal_content__1IJDL\",\"header\":\"Modal_header__1iwt3\",\"footer\":\"Modal_footer__jsMCp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditAnnouncementModal_container__L55AA\",\"content\":\"EditAnnouncementModal_content__16XH5\",\"fromToWrapper\":\"EditAnnouncementModal_fromToWrapper__3mnCq\",\"firmName\":\"EditAnnouncementModal_firmName__2vXx9\",\"inputGroup\":\"EditAnnouncementModal_inputGroup__1pqDC\",\"errors\":\"EditAnnouncementModal_errors__Q5fKO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddAnnouncementModal_container__1loDP\",\"content\":\"AddAnnouncementModal_content__1wLGT\",\"fromToWrapper\":\"AddAnnouncementModal_fromToWrapper__HEBO7\",\"firmName\":\"AddAnnouncementModal_firmName__1uQkd\",\"inputGroup\":\"AddAnnouncementModal_inputGroup__2VK7n\",\"errors\":\"AddAnnouncementModal_errors__YaYSS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Navbar_container__2IM_w\",\"menu\":\"Navbar_menu__GtI4D\",\"logo\":\"Navbar_logo__3gt0f\",\"user\":\"Navbar_user__2Eim7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outerContainer\":\"Invitation_outerContainer__3ACFM\",\"container\":\"Invitation_container__G4WUd\",\"content\":\"Invitation_content__4aM9F\",\"header\":\"Invitation_header__IfbCd\",\"footer\":\"Invitation_footer__2k2vs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Page_container__6IDSy\",\"title\":\"Page_title__378_l\",\"header\":\"Page_header__2eHIW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Announcement_container__1kU6B\",\"buttons\":\"Announcement_buttons__3zy-e\",\"header\":\"Announcement_header__3GMnM\",\"companyAvatar\":\"Announcement_companyAvatar__1uEe3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"AgreementPage_tabs__9mkXS\",\"yearPicker\":\"AgreementPage_yearPicker__2Xh9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddUserModal_container__2NwFs\",\"inputGroup\":\"AddUserModal_inputGroup__Gf-Ru\",\"errors\":\"AddUserModal_errors__1hhI5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"AgreementPage_tabs__2BwI2\",\"yearPicker\":\"AgreementPage_yearPicker__1WXuN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outerContainer\":\"Statement_outerContainer__3TjUM\",\"container\":\"Statement_container__13bhY\",\"content\":\"Statement_content__7kz-o\",\"header\":\"Statement_header__1jIEw\",\"spinner\":\"Statement_spinner__pne8D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Input_container__11f5q\",\"labelOnTop\":\"Input_labelOnTop__eE9qr\",\"bright\":\"Input_bright__1FIfV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Select_container__GqU-k\",\"labelOnTop\":\"Select_labelOnTop__1EdET\",\"bright\":\"Select_bright__2XTGK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoadingSpinner_container___ZcJ2\",\"spinner\":\"LoadingSpinner_spinner__3Eqmb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Journal_container__3Fatq\",\"fileHandler\":\"Journal_fileHandler__3B3O5\",\"wrapper\":\"Journal_wrapper__1whwk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Textarea_container__3Lepg\",\"labelOnTop\":\"Textarea_labelOnTop__ofXZv\",\"bright\":\"Textarea_bright__1co0w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"UsersPage_tabs__1TKsc\",\"yearPicker\":\"UsersPage_yearPicker__3jCn1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NotFound_container__1vkuv\",\"content\":\"NotFound_content__24FdK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab\":\"Tabs_tab__uaiMj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"AnnouncementPage_tabs__1z4wy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Student_container__3qHts\",\"avatar\":\"Student_avatar__268K4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Student_container__1nRE4\",\"avatar\":\"Student_avatar__2rYJy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1beqY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"companyAvatar\":\"CompanyAvatar_companyAvatar__3lKtn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ConfirmModal_text__9E1Ge\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"SearchInput_search__3BzOB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"yearPicker\":\"YearPicker_yearPicker__1oUpY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"studentsList\":\"Students_studentsList__2rumC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"companiesList\":\"Companies_companiesList__5p0Na\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"AnnouncementPage_tabs__ISK7w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPractice_content__2gVhO\",\"fromToWrapper\":\"MyPractice_fromToWrapper__1CrN4\",\"firmName\":\"MyPractice_firmName__17kgy\"};","module.exports = __webpack_public_path__ + \"static/media/Background.31625b92.jpg\";","import React from \"react\";\r\nimport css from \"./Input.module.css\";\r\nimport clsx from \"clsx\";\r\n\r\nconst Input = ({\r\n  type,\r\n  id,\r\n  name,\r\n  onChange,\r\n  inputRef,\r\n  value,\r\n  label,\r\n  className,\r\n  labelOnTop,\r\n  bright,\r\n  placeholder,\r\n  defaultValue,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={clsx(css.container, className, labelOnTop && css.labelOnTop)}\r\n    >\r\n      {label && <label className={clsx(bright && css.bright)}>{label}</label>}\r\n      <input\r\n        placeholder={placeholder}\r\n        type={type}\r\n        id={id}\r\n        name={name}\r\n        onChange={onChange}\r\n        ref={inputRef}\r\n        value={value}\r\n        defaultValue={defaultValue}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport css from \"./Select.module.css\";\r\nimport clsx from \"clsx\";\r\n\r\nconst Select = ({\r\n  id,\r\n  name,\r\n  onChange,\r\n  inputRef,\r\n  value,\r\n  label,\r\n  className,\r\n  options,\r\n  labelOnTop,\r\n  bright,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={clsx(css.container, className, labelOnTop && css.labelOnTop)}\r\n    >\r\n      {label && <label className={clsx(bright && css.bright)}>{label}</label>}\r\n      <select\r\n        id={id}\r\n        name={name}\r\n        onChange={onChange}\r\n        ref={inputRef}\r\n        value={value}\r\n      >\r\n        {options.map(({ label, value }) => {\r\n          return (\r\n            <option key={value} value={value}>\r\n              {label}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\n\r\nfunction Logo() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"145\"\r\n      height=\"47\"\r\n      fill=\"none\"\r\n      viewBox=\"0 0 145 47\"\r\n    >\r\n      <g filter=\"url(#filter0_d)\">\r\n        <path\r\n          fill=\"#F9A03F\"\r\n          d=\"M75.035 9.195l-3.603 8.807c-1.325-.633-2.59-1.113-3.797-1.441-1.196-.34-2.25-.586-3.164-.739a18.754 18.754 0 00-3.006-.263c-1.371.023-2.531.129-3.48.316-.95.176-1.712.422-2.286.738-.562.305-.955.657-1.177 1.055a1.794 1.794 0 00-.159 1.283c.117.516.393.926.827 1.23.433.294 1.013.516 1.74.669.726.14 1.588.234 2.584.28 1.008.048 2.138.077 3.392.089.657.011 1.383.035 2.18.07a17.54 17.54 0 012.443.281c.832.14 1.635.358 2.409.65a6.624 6.624 0 012.056 1.231 5.72 5.72 0 011.46 1.986c.362.797.544 1.776.544 2.936 0 1.055-.152 1.969-.457 2.742a6.187 6.187 0 01-1.23 1.987 6.572 6.572 0 01-1.829 1.336c-.691.34-1.43.609-2.214.808-.786.2-1.594.334-2.426.404a28.821 28.821 0 01-5.291-.035 27.797 27.797 0 01-2.654-.369 41.417 41.417 0 01-2.602-.58 71.194 71.194 0 01-2.62-.773l-1.036 3.093-2.479-.72 2.268-8.684c1.054.457 2.097.867 3.129 1.23 1.043.364 2.086.674 3.128.932 1.055.246 2.116.434 3.182.563 1.067.129 2.156.193 3.27.193 1.09 0 2.021-.064 2.795-.193.773-.13 1.4-.323 1.88-.58.493-.258.85-.58 1.073-.967.222-.387.334-.838.334-1.354 0-.644-.164-1.154-.492-1.529-.329-.375-.827-.662-1.495-.861-.656-.2-1.482-.334-2.478-.405a78.794 78.794 0 00-3.463-.158c-.926-.023-1.898-.058-2.918-.105a28.062 28.062 0 01-3.006-.3 17.603 17.603 0 01-2.812-.667 7.997 7.997 0 01-2.356-1.213 5.712 5.712 0 01-1.6-1.934c-.398-.773-.597-1.716-.597-2.83 0-.996.158-1.892.475-2.69a6.634 6.634 0 011.37-2.126 8.238 8.238 0 012.075-1.582 12.444 12.444 0 012.654-1.072c.973-.282 1.998-.48 3.076-.598a26.356 26.356 0 013.358-.14c1.172.058 2.332.175 3.48.35.48.071.985.165 1.512.282.527.106 1.049.24 1.564.404.516.153 1.014.334 1.495.545.48.2.925.428 1.335.686l.756-3.428 2.883 1.16zm19.283 15.47l-8.138-.651-.317 4.254H99.75l.686-3.428h2.742l-.616 9.158-25.523.967v-6.697h5.22l-.755-11.848-4.465.299v-6.627l26.139.545v10.142l-2.742.545-.545-6.082-13.096.861-.404 5.116 7.927-.475v3.92zm16.506-9.968a48.67 48.67 0 00-2.373.721c-.738.246-1.389.486-1.951.72l-.967-4.974a67.359 67.359 0 013.656-1.02 71.705 71.705 0 013.428-.755c1.09-.211 2.121-.387 3.094-.528.973-.14 1.875-.257 2.707-.351a53.202 53.202 0 015.361-.334c1.723.023 3.229.193 4.518.51 1.289.316 2.361.761 3.217 1.335.867.575 1.517 1.266 1.951 2.075.433.808.65 1.71.65 2.707 0 1.3-.304 2.46-.914 3.48-.597 1.02-1.394 1.922-2.39 2.707-.997.774-2.139 1.442-3.428 2.004a30.593 30.593 0 01-3.955 1.424c-1.36.387-2.707.697-4.043.932a63.812 63.812 0 01-3.639.51l.035 4.816 5.942.035v4.043l-14.907.931-.105-5.08 5.256.036-1.143-15.944zm11.953-2.267c-.398 0-.861.029-1.388.088-.516.046-1.078.117-1.688.21-.609.082-1.254.188-1.933.317-.68.129-1.377.27-2.092.422l.07 9.51a43.856 43.856 0 002.672-.65c.949-.27 1.881-.58 2.795-.933a24.557 24.557 0 002.637-1.177 11.814 11.814 0 002.162-1.46c.609-.527 1.078-1.089 1.406-1.687.34-.61.469-1.254.387-1.933-.059-.492-.223-.909-.493-1.248a2.86 2.86 0 00-1.072-.844c-.433-.223-.949-.38-1.547-.475a12.157 12.157 0 00-1.916-.14z\"\r\n        ></path>\r\n      </g>\r\n      <path\r\n        fill=\"url(#paint0_linear)\"\r\n        fillRule=\"evenodd\"\r\n        d=\"M30.469 0C36.25 0 40 3.75 40 9.531V30.47C40 36.25 36.25 40 30.469 40H9.53C3.75 40 0 36.25 0 30.469V9.53C0 3.75 3.75 0 9.531 0H30.47z\"\r\n        clipRule=\"evenodd\"\r\n      ></path>\r\n      <mask\r\n        id=\"mask0\"\r\n        width=\"40\"\r\n        height=\"40\"\r\n        x=\"0\"\r\n        y=\"0\"\r\n        maskUnits=\"userSpaceOnUse\"\r\n      >\r\n        <path\r\n          fill=\"#fff\"\r\n          fillRule=\"evenodd\"\r\n          d=\"M30.469 0C36.25 0 40 3.75 40 9.531V30.47C40 36.25 36.25 40 30.469 40H9.53C3.75 40 0 36.25 0 30.469V9.53C0 3.75 3.75 0 9.531 0H30.47z\"\r\n          clipRule=\"evenodd\"\r\n        ></path>\r\n      </mask>\r\n      <g mask=\"url(#mask0)\">\r\n        <g filter=\"url(#filter1_i)\">\r\n          <path\r\n            fill=\"#000\"\r\n            fillOpacity=\"0.149\"\r\n            fillRule=\"evenodd\"\r\n            d=\"M20 31.333l12.195 9.679 10.244-.036.275-42.57-16.038.056-.158 18.503L20 31.333z\"\r\n            clipRule=\"evenodd\"\r\n          ></path>\r\n        </g>\r\n        <path fill=\"#FFDB5D\" d=\"M17.667-.333h-4.334v17.106h4.334V-.333z\"></path>\r\n        <path fill=\"#FFB908\" d=\"M22.667-.333h-5.334v18h5.334v-18z\"></path>\r\n        <path\r\n          fill=\"#DC880D\"\r\n          fillRule=\"evenodd\"\r\n          d=\"M22.333-.333h4.334l-.13 17.294s-1.106.835-1.646.926c-.862.144-2.558-.22-2.558-.22v-18z\"\r\n          clipRule=\"evenodd\"\r\n        ></path>\r\n        <mask\r\n          id=\"mask1\"\r\n          width=\"17\"\r\n          height=\"18\"\r\n          x=\"12\"\r\n          y=\"15\"\r\n          maskUnits=\"userSpaceOnUse\"\r\n        >\r\n          <path\r\n            fill=\"#fff\"\r\n            fillRule=\"evenodd\"\r\n            d=\"M12.231 18.074s3.004-4.614 6.909-2.402c3.904 2.212 5.385 2.258 8.59.787 3.204-1.471-7.716 16.291-7.716 16.291L12.23 18.074z\"\r\n            clipRule=\"evenodd\"\r\n          ></path>\r\n        </mask>\r\n        <g mask=\"url(#mask1)\">\r\n          <path\r\n            fill=\"url(#paint1_linear)\"\r\n            fillRule=\"evenodd\"\r\n            d=\"M13.158 16.404l6.514-3.425 6.91 3.876-6.593 14.473-6.83-14.924z\"\r\n            clipRule=\"evenodd\"\r\n          ></path>\r\n          <mask\r\n            id=\"mask2\"\r\n            width=\"14\"\r\n            height=\"20\"\r\n            x=\"13\"\r\n            y=\"12\"\r\n            maskUnits=\"userSpaceOnUse\"\r\n          >\r\n            <path\r\n              fill=\"#fff\"\r\n              fillRule=\"evenodd\"\r\n              d=\"M13.158 16.404l6.514-3.425 6.91 3.876-6.593 14.473-6.83-14.924z\"\r\n              clipRule=\"evenodd\"\r\n            ></path>\r\n          </mask>\r\n          <g mask=\"url(#mask2)\">\r\n            <path fill=\"#343434\" d=\"M25 26h-9.333v6H25v-6z\"></path>\r\n            <path\r\n              fill=\"url(#paint2_linear)\"\r\n              fillRule=\"evenodd\"\r\n              d=\"M17.168 14.024l3.015 18.725 7.533-16.313-10.548-2.412z\"\r\n              clipRule=\"evenodd\"\r\n            ></path>\r\n            <mask\r\n              id=\"mask3\"\r\n              width=\"11\"\r\n              height=\"19\"\r\n              x=\"17\"\r\n              y=\"14\"\r\n              maskUnits=\"userSpaceOnUse\"\r\n            >\r\n              <path\r\n                fill=\"#fff\"\r\n                fillRule=\"evenodd\"\r\n                d=\"M17.168 14.024l3.015 18.725 7.533-16.313-10.548-2.412z\"\r\n                clipRule=\"evenodd\"\r\n              ></path>\r\n            </mask>\r\n            <g mask=\"url(#mask3)\">\r\n              <path fill=\"#202020\" d=\"M25 26h-9.333v6H25v-6z\"></path>\r\n            </g>\r\n          </g>\r\n        </g>\r\n      </g>\r\n      <defs>\r\n        <filter\r\n          id=\"filter0_d\"\r\n          width=\"93.113\"\r\n          height=\"36.951\"\r\n          x=\"45.002\"\r\n          y=\"8.035\"\r\n          colorInterpolationFilters=\"sRGB\"\r\n          filterUnits=\"userSpaceOnUse\"\r\n        >\r\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\"></feFlood>\r\n          <feColorMatrix\r\n            in=\"SourceAlpha\"\r\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\r\n          ></feColorMatrix>\r\n          <feOffset dy=\"4\"></feOffset>\r\n          <feGaussianBlur stdDeviation=\"2\"></feGaussianBlur>\r\n          <feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"></feColorMatrix>\r\n          <feBlend\r\n            in2=\"BackgroundImageFix\"\r\n            result=\"effect1_dropShadow\"\r\n          ></feBlend>\r\n          <feBlend\r\n            in=\"SourceGraphic\"\r\n            in2=\"effect1_dropShadow\"\r\n            result=\"shape\"\r\n          ></feBlend>\r\n        </filter>\r\n        <filter\r\n          id=\"filter1_i\"\r\n          width=\"23.214\"\r\n          height=\"43.606\"\r\n          x=\"20\"\r\n          y=\"-1.594\"\r\n          colorInterpolationFilters=\"sRGB\"\r\n          filterUnits=\"userSpaceOnUse\"\r\n        >\r\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\"></feFlood>\r\n          <feBlend\r\n            in=\"SourceGraphic\"\r\n            in2=\"BackgroundImageFix\"\r\n            result=\"shape\"\r\n          ></feBlend>\r\n          <feColorMatrix\r\n            in=\"SourceAlpha\"\r\n            result=\"hardAlpha\"\r\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\r\n          ></feColorMatrix>\r\n          <feOffset dx=\"0.5\" dy=\"1.5\"></feOffset>\r\n          <feGaussianBlur stdDeviation=\"0.5\"></feGaussianBlur>\r\n          <feComposite\r\n            in2=\"hardAlpha\"\r\n            k2=\"-1\"\r\n            k3=\"1\"\r\n            operator=\"arithmetic\"\r\n          ></feComposite>\r\n          <feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0\"></feColorMatrix>\r\n          <feBlend in2=\"shape\" result=\"effect1_innerShadow\"></feBlend>\r\n        </filter>\r\n        <linearGradient\r\n          id=\"paint0_linear\"\r\n          x1=\"0\"\r\n          x2=\"0\"\r\n          y1=\"0\"\r\n          y2=\"40\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n        >\r\n          <stop stopColor=\"#2EA3DC\"></stop>\r\n          <stop offset=\"1\" stopColor=\"#1383BB\"></stop>\r\n        </linearGradient>\r\n        <linearGradient\r\n          id=\"paint1_linear\"\r\n          x1=\"15.067\"\r\n          x2=\"19.384\"\r\n          y1=\"23.374\"\r\n          y2=\"23.374\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n        >\r\n          <stop stopColor=\"#FBDEB5\"></stop>\r\n          <stop offset=\"1\" stopColor=\"#FEE0B9\"></stop>\r\n        </linearGradient>\r\n        <linearGradient\r\n          id=\"paint2_linear\"\r\n          x1=\"18.181\"\r\n          x2=\"24.317\"\r\n          y1=\"27.039\"\r\n          y2=\"27.039\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n        >\r\n          <stop stopColor=\"#EAC99D\"></stop>\r\n          <stop offset=\"1\" stopColor=\"#D1AD7B\"></stop>\r\n        </linearGradient>\r\n      </defs>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const LOGIN_STUDENT = gql`\r\n  mutation loginStudent($email: String!, $password: String!) {\r\n    loginStudent(email: $email, password: $password) {\r\n      token\r\n      student {\r\n        id\r\n        email\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOGIN_PRACTICE_SUPERVISER = gql`\r\n  mutation loginPracticeSuperviser($email: String!, $password: String!) {\r\n    loginPracticeSuperviser(email: $email, password: $password) {\r\n      token\r\n      practiceSuperviser {\r\n        id\r\n        email\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOGIN_COMPANY = gql`\r\n  mutation loginCompany($email: String!, $password: String!) {\r\n    loginCompany(email: $email, password: $password) {\r\n      token\r\n      company {\r\n        id\r\n        email\r\n        phone\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default { LOGIN_STUDENT, LOGIN_PRACTICE_SUPERVISER, LOGIN_COMPANY };\r\n","import React, { useState } from \"react\";\r\n\r\nconst useAuth = () => {\r\n  const [token, setTokenValue] = useState(localStorage.getItem(\"token\"));\r\n  const [userType, setUserTypeValue] = useState(\r\n    localStorage.getItem(\"userType\")\r\n  );\r\n  const setToken = (value) => {\r\n    localStorage.setItem(\"token\", value);\r\n    setTokenValue(value);\r\n  };\r\n\r\n  const setUserType = (value) => {\r\n    localStorage.setItem(\"userType\", value);\r\n    setUserTypeValue(value);\r\n  };\r\n\r\n  const removeToken = () => {\r\n    setTokenValue(undefined);\r\n    localStorage.removeItem(\"token\");\r\n  };\r\n\r\n  const removeUserType = () => {\r\n    setUserTypeValue(undefined);\r\n    localStorage.removeItem(\"userType\");\r\n  };\r\n\r\n  return {\r\n    token,\r\n    setToken,\r\n    userType,\r\n    setUserType,\r\n    removeToken,\r\n    removeUserType,\r\n  };\r\n};\r\n\r\nexport default useAuth;\r\n","import { useSnackbar } from \"notistack\";\r\n\r\nconst useSnackGraphql = (variant = \"error\") => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const enqueueError = (errors) => {\r\n    if (errors.graphQLErrors)\r\n      errors.graphQLErrors.map(({ message }) => {\r\n        enqueueSnackbar(message, { variant });\r\n      });\r\n  };\r\n\r\n  return [enqueueError, enqueueSnackbar];\r\n};\r\n\r\nexport default useSnackGraphql;\r\n","const USER_TYPES = {\r\n  student: \"student\",\r\n  practiceSuperviser: \"practice-superviser\",\r\n  company: \"company\",\r\n};\r\n\r\nexport default USER_TYPES;\r\n","import { atom } from \"recoil\";\r\n\r\nexport const studentAtom = atom({\r\n  key: \"studentAtom\",\r\n  default: null,\r\n});\r\n\r\nexport const companyAtom = atom({\r\n  key: \"companyAtom\",\r\n  default: null,\r\n});\r\n\r\nexport const practiceSuperviserAtom = atom({\r\n  key: \"practiceSuperviserAtom\",\r\n  default: null,\r\n});\r\n\r\nexport const globalDatePickerValueAtom = atom({\r\n  key: \"globalDatePickerValue\",\r\n  default: new Date().getFullYear(),\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport validator from \"validator\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport css from \"./Login.module.css\";\r\nimport Input from \"@components/Input\";\r\nimport Select from \"@components/Select\";\r\nimport Logo from \"@assets/Logo\";\r\nimport {\r\n  LOGIN_STUDENT,\r\n  LOGIN_PRACTICE_SUPERVISER,\r\n  LOGIN_COMPANY,\r\n} from \"./queries.js\";\r\nimport useAuth from \"@hooks/useAuth\";\r\nimport useSnackGraphql from \"@hooks/useSnackGraphql\";\r\nimport USER_TYPES from \"@config/userTypes\";\r\nimport {\r\n  studentAtom,\r\n  companyAtom,\r\n  practiceSuperviserAtom,\r\n} from \"@config/userRecoilAtoms\";\r\n\r\nconst Login = () => {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const { token, setToken, userType, setUserType } = useAuth();\r\n  const [showGraphqlErrors] = useSnackGraphql();\r\n  const [, setStudent] = useRecoilState(studentAtom);\r\n  const [, setCompany] = useRecoilState(companyAtom);\r\n  const [, setPracticeSupervisor] = useRecoilState(practiceSuperviserAtom);\r\n\r\n  const [loginStudent] = useMutation(LOGIN_STUDENT);\r\n  const [loginPracticeSuperviser] = useMutation(LOGIN_PRACTICE_SUPERVISER);\r\n  const [loginCompany] = useMutation(LOGIN_COMPANY);\r\n\r\n  if (token && userType) return <Redirect to=\"/\" />;\r\n\r\n  const onSubmit = (data) => {\r\n    setStudent(null);\r\n    setCompany(null);\r\n    setPracticeSupervisor(null);\r\n    switch (data.type) {\r\n      case USER_TYPES.student:\r\n        loginStudent({\r\n          variables: { email: data.email, password: data.password },\r\n        })\r\n          .then(async ({ data }) => {\r\n            const { loginStudent } = data;\r\n            if (loginStudent?.token) {\r\n              await setToken(loginStudent.token);\r\n              await setUserType(USER_TYPES.student);\r\n              setStudent(loginStudent.student);\r\n            }\r\n          })\r\n          .catch(showGraphqlErrors);\r\n        break;\r\n      case USER_TYPES.practiceSuperviser:\r\n        loginPracticeSuperviser({\r\n          variables: { email: data.email, password: data.password },\r\n        })\r\n          .then(async ({ data }) => {\r\n            const { loginPracticeSuperviser } = data;\r\n            if (loginPracticeSuperviser?.token) {\r\n              await setToken(loginPracticeSuperviser.token);\r\n              await setUserType(USER_TYPES.practiceSuperviser);\r\n              setPracticeSupervisor(loginPracticeSuperviser.practiceSuperviser);\r\n            }\r\n          })\r\n          .catch(showGraphqlErrors);\r\n        break;\r\n      case USER_TYPES.company:\r\n        loginCompany({\r\n          variables: { email: data.email, password: data.password },\r\n        })\r\n          .then(async ({ data }) => {\r\n            const { loginCompany } = data;\r\n            if (loginCompany?.token) {\r\n              await setToken(loginCompany.token);\r\n              await setUserType(USER_TYPES.company);\r\n              setCompany(loginCompany.company);\r\n            }\r\n          })\r\n          .catch(showGraphqlErrors);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  return (\r\n    <div className={css.page}>\r\n      <div className={css.container}>\r\n        <Logo />\r\n\r\n        <div className={css.content}>\r\n          <h1 className={css.title}>Zaloguj</h1>\r\n          <div className={css.form}>\r\n            <Input\r\n              name=\"email\"\r\n              label=\"Email:\"\r\n              bright\r\n              inputRef={register({\r\n                required: true,\r\n                validate: validator.isEmail,\r\n              })}\r\n            />\r\n            {errors.email && (\r\n              <Alert variant=\"filled\" severity=\"error\">\r\n                Adres email jest niepoprawny.\r\n              </Alert>\r\n            )}\r\n            <Input\r\n              name=\"password\"\r\n              label=\"Hasło:\"\r\n              type=\"password\"\r\n              bright\r\n              inputRef={register({ required: true, minLength: 8 })}\r\n            />\r\n            {errors.password && (\r\n              <Alert variant=\"filled\" severity=\"error\">\r\n                Hasło musi zawierać minimum 8 znaków.\r\n              </Alert>\r\n            )}\r\n\r\n            <Select\r\n              inputRef={register}\r\n              options={[\r\n                { label: \"Student\", value: USER_TYPES.student },\r\n                {\r\n                  label: \"Opiekun praktyk\",\r\n                  value: USER_TYPES.practiceSuperviser,\r\n                },\r\n                { label: \"Firma\", value: USER_TYPES.company },\r\n              ]}\r\n              label=\"Zaloguj jako:\"\r\n              name=\"type\"\r\n              bright\r\n              className={css.select}\r\n            />\r\n            <button\r\n              preset=\"bright\"\r\n              className={css.logIn}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              Zaloguj\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport css from \"./Container.module.css\";\r\nimport clsx from \"clsx\";\r\n\r\nconst Container = ({ children, className }) => {\r\n  return <div className={clsx(css.container, className)}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\n\r\nconst IconAccept = () => {\r\n  return (\r\n    <svg\r\n      width=\"15\"\r\n      height=\"13\"\r\n      viewBox=\"0 0 15 13\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M12.553 0.239426L4.90996 7.88246L2.43115 5.40364L0 7.83478L2.47881 10.3136L4.92584 12.7607L7.357 10.3295L15 2.68648L12.553 0.239426Z\"\r\n        fill=\"#2CCF50\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default IconAccept;\r\n","import React from \"react\";\r\n\r\nconst IconDecline = () => {\r\n  return (\r\n    <svg\r\n      width=\"15\"\r\n      height=\"15\"\r\n      viewBox=\"0 0 15 15\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M14.5312 2.47758L12.5222 0.46875L7.5 5.49117L2.47758 0.46875L0.46875 2.47758L5.49094 7.5L0.46875 12.5224L2.47758 14.5312L7.5 9.50883L12.5222 14.5312L14.5312 12.5224L9.50859 7.5L14.5312 2.47758Z\"\r\n        fill=\"#FB0404\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default IconDecline;\r\n","import React, { useRef } from \"react\";\r\nimport mergeRefs from \"react-merge-refs\";\r\n\r\nexport const FileUploadWrapper = ({\r\n  onFileSelect,\r\n  children,\r\n  inputRef,\r\n  name,\r\n  accept,\r\n}) => {\r\n  const fileInput = useRef(null);\r\n\r\n  const handleFileInput = (e) => {\r\n    onFileSelect && onFileSelect(e.target.files[0]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"file\"\r\n        onChange={handleFileInput}\r\n        ref={mergeRefs([fileInput, inputRef])}\r\n        style={{ display: \"none\" }}\r\n        name={name}\r\n        accept={accept}\r\n      />\r\n      {React.cloneElement(children, {\r\n        onClick: () => fileInput.current && fileInput.current.click(),\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploadWrapper;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_DOCUMENT = gql`\r\n  mutation createDocumentFile(\r\n    $file: Upload!\r\n    $PracticeAgreementId: ID!\r\n    $type: DocumentType\r\n  ) {\r\n    createDocumentFile(\r\n      file: $file\r\n      PracticeAgreementId: $PracticeAgreementId\r\n      type: $type\r\n    ) {\r\n      status\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport css from \"./LoadingSpinner.module.css\";\r\nimport clsx from \"clsx\";\r\n\r\nconst LoadingSpinner = (props) => {\r\n  if (props.global)\r\n    return ReactDOM.createPortal(\r\n      <div className={css.container}>\r\n        <CircularProgress className={clsx(css.spinner, props.className)} />\r\n      </div>,\r\n      document.body\r\n    );\r\n  return <CircularProgress className={clsx(css.spinner, props.className)} />;\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","export const API_URL =\r\n  process.env.NODE_ENV === \"production\"\r\n    ? \"https://sep-praca-dyplomowa.herokuapp.com\"\r\n    : \"http://localhost:4001\";\r\n","import React from \"react\";\r\nimport css from \"./CompanyAvatar.module.css\";\r\nimport clsx from \"clsx\";\r\n\r\nconst CompanyAvatar = ({ children, color, className }) => {\r\n  return (\r\n    <div\r\n      className={clsx(css.companyAvatar, className)}\r\n      style={{ backgroundColor: color }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyAvatar;\r\n","import React, { useState } from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nimport Container from \"@components/Container\";\r\nimport css from \"./Practice.module.css\";\r\nimport { IconAccept, IconDecline } from \"@icons\";\r\nimport FileUploadWrapper from \"@components/FileUploadWrapper\";\r\nimport { CREATE_DOCUMENT } from \"./queries.js\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport useAuth from \"@hooks/useAuth\";\r\nimport { API_URL } from \"@config/global\";\r\nimport CompanyAvatar from \"@components/CompanyAvatar\";\r\n\r\nconst DOCUMENT_TYPE = {\r\n  journal: \"journal\",\r\n  agreement: \"agreement\",\r\n  personalData: \"personalData\",\r\n};\r\n\r\nconst Practice = ({\r\n  id,\r\n  company_name,\r\n  address,\r\n  city,\r\n  phone,\r\n  email,\r\n  from,\r\n  to,\r\n  accepted,\r\n  dictionaryUrl,\r\n  DocumentFiles,\r\n  refetch,\r\n  Company,\r\n  company_accepted,\r\n}) => {\r\n  const history = useHistory();\r\n  const [filePracticeAgreement, setFilePracticeAgreement] = useState();\r\n  const [filePersonalDataAgreement, setFilePersonalDataAgreement] = useState();\r\n  const [isLoading, setIsLoading] = useState();\r\n  const [createDocument] = useMutation(CREATE_DOCUMENT);\r\n  const { token } = useAuth();\r\n\r\n  const PracticeAgreement = DocumentFiles.find(\r\n    (document) => document.type === DOCUMENT_TYPE.agreement\r\n  );\r\n  const PersonalDataAgreement = DocumentFiles.find(\r\n    (document) => document.type === DOCUMENT_TYPE.personalData\r\n  );\r\n\r\n  const handleCreateDocument = (file, type) => {\r\n    setIsLoading(true);\r\n    createDocument({\r\n      variables: {\r\n        PracticeAgreementId: id,\r\n        file,\r\n        type,\r\n      },\r\n    })\r\n      .then((data) => {\r\n        if (data) console.log(data);\r\n        setIsLoading(false);\r\n        refetch();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LoadingSpinner global />}\r\n      <Container className={css.container}>\r\n        <div className={css.block}>\r\n          <h2>{company_name}</h2>\r\n          {Company && (\r\n            <CompanyAvatar color={Company.color} className={css.companyAvatar}>\r\n              {Company.name.charAt(0)}-{Company.first_name.charAt(0)}\r\n              {Company.last_name.charAt(0)}\r\n            </CompanyAvatar>\r\n          )}\r\n          <span>\r\n            <span>Email:</span> {email}\r\n          </span>\r\n          <span>\r\n            <span>Telefon:</span> {phone}\r\n          </span>\r\n          <span>\r\n            <span>Miejscowość:</span> {city}\r\n          </span>\r\n          <span>\r\n            <span>Adres:</span> {address}\r\n          </span>\r\n          <br />\r\n          <span>\r\n            <span>Okres wykonywania praktyki:</span> od{\" \"}\r\n            {dayjs(from).format(\"DD/MM/YYYY\")} do{\" \"}\r\n            {dayjs(to).format(\"DD/MM/YYYY\")}\r\n          </span>\r\n          <span>\r\n            <span>Zgoda opiekuna praktyk: </span>\r\n            {accepted ? <IconAccept /> : <IconDecline />}\r\n          </span>\r\n          {Company && (\r\n            <span>\r\n              <span>Zgoda firmy: </span>\r\n              {company_accepted ? (\r\n                <IconAccept />\r\n              ) : company_accepted === false ? (\r\n                <IconDecline />\r\n              ) : (\r\n                \"Brak\"\r\n              )}\r\n            </span>\r\n          )}\r\n          <div className={css.marginTop}>\r\n            {accepted && (\r\n              <button onClick={() => history.push(`${dictionaryUrl}/${id}`)}>\r\n                Dziennik\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={css.block}>\r\n          <h3>Dokumenty</h3>\r\n          {((Company && company_accepted) || !Company) && (\r\n            <>\r\n              <span>\r\n                <span>Umowa o praktykę</span>\r\n              </span>\r\n              <div className={css.buttons}>\r\n                <button\r\n                  onClick={() => {\r\n                    setIsLoading(true);\r\n                    fetch(`${API_URL}/uploads/${PracticeAgreement.id}`, {\r\n                      headers: new Headers({\r\n                        Authorization: token,\r\n                      }),\r\n                    })\r\n                      .then((response) => response.blob())\r\n                      .then((blob) => {\r\n                        var link = document.createElement(\"a\");\r\n                        link.href = window.URL.createObjectURL(blob);\r\n                        link.download = \"Umowa o praktykę.pdf\";\r\n                        link.click();\r\n                        setIsLoading(false);\r\n                      })\r\n                      .catch((error) => {\r\n                        console.error(error);\r\n                        setIsLoading(false);\r\n                      });\r\n                  }}\r\n                  disabled={!PracticeAgreement}\r\n                >\r\n                  Umowa o praktykę\r\n                </button>\r\n\r\n                {!accepted && (\r\n                  <div className={css.fileHandler}>\r\n                    <FileUploadWrapper\r\n                      onFileSelect={(file) => setFilePracticeAgreement(file)}\r\n                    >\r\n                      <button>Przeglądaj</button>\r\n                    </FileUploadWrapper>\r\n                    <span>{filePracticeAgreement?.name}</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {filePracticeAgreement && (\r\n                <button\r\n                  onClick={() =>\r\n                    handleCreateDocument(\r\n                      filePracticeAgreement,\r\n                      DOCUMENT_TYPE.agreement\r\n                    )\r\n                  }\r\n                  className={css.send}\r\n                >\r\n                  Wyślij\r\n                </button>\r\n              )}\r\n              <span>\r\n                <span>Umowa powierzenia przetwarzania danych osobowych</span>\r\n              </span>\r\n              <div className={css.buttons}>\r\n                <button\r\n                  onClick={() =>\r\n                    fetch(`${API_URL}/uploads/${PersonalDataAgreement.id}`, {\r\n                      headers: new Headers({\r\n                        Authorization: token,\r\n                      }),\r\n                    })\r\n                      .then((response) => response.blob())\r\n                      .then((blob) => {\r\n                        var link = document.createElement(\"a\");\r\n                        link.href = window.URL.createObjectURL(blob);\r\n                        link.download =\r\n                          \"Umowa powierzenia przetwarzania danych osobowych.pdf\";\r\n                        link.click();\r\n                        setIsLoading(false);\r\n                      })\r\n                      .catch((error) => {\r\n                        console.error(error);\r\n                        setIsLoading(false);\r\n                      })\r\n                  }\r\n                  disabled={!PersonalDataAgreement}\r\n                >\r\n                  Umowa przetwarzania danych\r\n                </button>\r\n\r\n                {!accepted && (\r\n                  <div className={css.fileHandler}>\r\n                    <FileUploadWrapper\r\n                      onFileSelect={(file) =>\r\n                        setFilePersonalDataAgreement(file)\r\n                      }\r\n                    >\r\n                      <button>Przeglądaj</button>\r\n                    </FileUploadWrapper>\r\n                    <span>{filePersonalDataAgreement?.name}</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {filePersonalDataAgreement && (\r\n                <button\r\n                  onClick={() =>\r\n                    handleCreateDocument(\r\n                      filePersonalDataAgreement,\r\n                      DOCUMENT_TYPE.personalData\r\n                    )\r\n                  }\r\n                  className={css.send}\r\n                >\r\n                  Wyślij\r\n                </button>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Practice;\r\n","import React from \"react\";\r\nimport css from \"./Page.module.css\";\r\n\r\nconst Page = ({ title, children, button }) => {\r\n  return (\r\n    <div className={css.container}>\r\n      <div className={css.header}>\r\n        <h1 className={css.title}>{title}</h1>\r\n        {button}\r\n      </div>\r\n      <div className={css.content}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport css from \"./Modal.module.css\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\n\r\nconst CustomModal = ({\r\n  open,\r\n  setOpenModal,\r\n  children,\r\n  header,\r\n  buttons,\r\n  isLoading,\r\n}) => {\r\n  return (\r\n    open &&\r\n    ReactDOM.createPortal(\r\n      <div className={css.backdrop} onClick={() => setOpenModal(false)}>\r\n        <div className={css.modal} onClick={(e) => e.stopPropagation()}>\r\n          {header && (\r\n            <div className={css.header}>\r\n              <h2>{header}</h2>\r\n              <CloseIcon onClick={() => setOpenModal(false)} />\r\n            </div>\r\n          )}\r\n          <div className={css.content}>{children}</div>\r\n          <div className={css.footer}>\r\n            <div>{isLoading && <LoadingSpinner />}</div>\r\n            <div>{buttons}</div>\r\n          </div>\r\n        </div>\r\n      </div>,\r\n      document.body\r\n    )\r\n  );\r\n};\r\n\r\nexport default CustomModal;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_PRACTICE_AGREEMENT = gql`\r\n  mutation createPracticeAgreement(\r\n    $city: String!\r\n    $address: String!\r\n    $from: Date!\r\n    $to: Date!\r\n    $email: String!\r\n    $phone: String!\r\n    $company_name: String!\r\n  ) {\r\n    createPracticeAgreement(\r\n      city: $city\r\n      address: $address\r\n      from: $from\r\n      to: $to\r\n      phone: $phone\r\n      email: $email\r\n      company_name: $company_name\r\n    ) {\r\n      city\r\n      address\r\n      email\r\n      company_name\r\n      from\r\n      to\r\n      accepted\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport validator from \"validator\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport css from \"./ReportPracticeModal.module.css\";\r\nimport Modal from \"@components/Modal\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Input from \"@components/Input\";\r\nimport { companyAtom } from \"@config/userRecoilAtoms\";\r\nimport { CREATE_PRACTICE_AGREEMENT } from \"./queries.js\";\r\nimport useSnackGraphql from \"@hooks/useSnackGraphql\";\r\n\r\nconst ReportPracticeModal = (props) => {\r\n  const { setOpenModal, refetch } = props;\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const [createPracticeAgreement] = useMutation(CREATE_PRACTICE_AGREEMENT);\r\n  const [showGraphqlErrors, enqueueSnackbar] = useSnackGraphql();\r\n\r\n  const onSubmit = (data) => {\r\n    setIsLoading(true);\r\n    createPracticeAgreement({\r\n      variables: {\r\n        city: data.city,\r\n        address: data.address,\r\n        from: data.from,\r\n        to: data.to,\r\n        phone: data.phone,\r\n        email: data.email,\r\n        company_name: data.company_name,\r\n      },\r\n    })\r\n      .then(() => {\r\n        setIsLoading(false);\r\n        // refetch();\r\n        enqueueSnackbar(\"Praktyka zgłoszona pomyślnie\", { variant: \"success\" });\r\n        refetch();\r\n        setOpenModal(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        showGraphqlErrors(err);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      header=\"Zgłoś praktykę\"\r\n      isLoading={isLoading}\r\n      buttons={\r\n        <>\r\n          <button preset=\"bright\" onClick={() => setOpenModal(false)}>\r\n            Zamknij\r\n          </button>\r\n          <button onClick={handleSubmit(onSubmit)}>Wyślij zgłoszenie</button>\r\n        </>\r\n      }\r\n    >\r\n      <div className={css.container}>\r\n        <div className={css.content}>\r\n          <div className={css.inputGroup}>\r\n            <Input\r\n              label=\"Nazwa firmy*\"\r\n              labelOnTop\r\n              inputRef={register({ required: true })}\r\n              name=\"company_name\"\r\n              placeholder=\"Example z.o.o\"\r\n            />\r\n\r\n            <Input\r\n              label=\"Email*\"\r\n              labelOnTop\r\n              inputRef={register({\r\n                validate: (value) => (value ? validator.isEmail(value) : true),\r\n              })}\r\n              name=\"email\"\r\n              placeholder=\"jk@example.com\"\r\n            />\r\n\r\n            <Input\r\n              label=\"Telefon*\"\r\n              labelOnTop\r\n              inputRef={register({ required: true })}\r\n              name=\"phone\"\r\n              placeholder=\"678 890 ...\"\r\n            />\r\n            <Input\r\n              label=\"Miejscowość i kod pocztowy*\"\r\n              labelOnTop\r\n              inputRef={register({ required: true })}\r\n              name=\"city\"\r\n              placeholder=\"Olsztyn, 10-089\"\r\n            />\r\n            <Input\r\n              label=\"Adres*\"\r\n              labelOnTop\r\n              inputRef={register({ required: true })}\r\n              name=\"address\"\r\n              placeholder=\"Wyspiańskiego 18\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className={css.fromToWrapper}>\r\n            <label>Przedział czasowy</label>\r\n            <Input\r\n              type=\"date\"\r\n              label=\"Od*\"\r\n              inputRef={register({ required: true })}\r\n              name=\"from\"\r\n            />\r\n            <Input\r\n              type=\"date\"\r\n              label=\"Do*\"\r\n              inputRef={register({ required: true })}\r\n              name=\"to\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={css.errors}>\r\n        {errors.city && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Miejscowość i kod pocztowy są wymagane\r\n          </Alert>\r\n        )}\r\n        {errors.company_name && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Nazwa firmy jest wymagana\r\n          </Alert>\r\n        )}\r\n        {errors.address && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Adres jest wymagany\r\n          </Alert>\r\n        )}\r\n        {errors.phone && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Telefon jest wymagany\r\n          </Alert>\r\n        )}\r\n        {(errors.from || errors.to) && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Podaj poprawny przedział czasowy\r\n          </Alert>\r\n        )}\r\n        {errors.email && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Adres email jest niepoprawny\r\n          </Alert>\r\n        )}\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ReportPracticeModal;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const MY_PRACTICE_AGREEMENTS = gql`\r\n  query myPracticeAgreements {\r\n    myPracticeAgreements {\r\n      id\r\n      address\r\n      city\r\n      email\r\n      company_name\r\n      phone\r\n      from\r\n      to\r\n      accepted\r\n      DocumentFiles {\r\n        id\r\n        status\r\n        type\r\n        rejectNote\r\n      }\r\n      Company {\r\n        id\r\n        first_name\r\n        last_name\r\n        name\r\n        color\r\n      }\r\n      company_accepted\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_JOURNAL = gql`\r\n  mutation createDocumentFile($file: Upload!, $PracticeAgreementId: ID!) {\r\n    createDocumentFile(\r\n      file: $file\r\n      PracticeAgreementId: $PracticeAgreementId\r\n      type: journal\r\n    ) {\r\n      status\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_JOURNAL = gql`\r\n  query getDocumentFile($PracticeAgreementId: ID!) {\r\n    getDocumentFile(PracticeAgreementId: $PracticeAgreementId, type: journal) {\r\n      id\r\n      status\r\n      rejectNote\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useMutation, useLazyQuery } from \"@apollo/client\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport css from \"./Journal.module.css\";\r\nimport { CREATE_JOURNAL, GET_JOURNAL } from \"./queries\";\r\nimport useAuth from \"@hooks/useAuth\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport FileUploadWrapper from \"@components/FileUploadWrapper\";\r\nimport { IconAccept, IconDecline } from \"@icons\";\r\nimport useSnackGraphql from \"@hooks/useSnackGraphql\";\r\nimport { API_URL } from \"@config/global\";\r\n\r\nconst Journal = () => {\r\n  const { token } = useAuth();\r\n  const [createJournal] = useMutation(CREATE_JOURNAL);\r\n  const { agreementId } = useParams();\r\n  const [getJournal, { data, loading, refetch }] = useLazyQuery(GET_JOURNAL);\r\n  const [file, setFile] = useState();\r\n  const [enqueueError] = useSnackGraphql();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (agreementId)\r\n      getJournal({ variables: { PracticeAgreementId: agreementId } });\r\n  }, [agreementId]);\r\n\r\n  if (loading || isLoading) return <LoadingSpinner />;\r\n  console.log(data);\r\n\r\n  const journal = data?.getDocumentFile;\r\n  return (\r\n    <div className={css.container}>\r\n      {journal?.id && (\r\n        <>\r\n          <span>\r\n            <span>Zatwierdzone przez opiekuna praktyk:</span>\r\n            {journal?.status === \"accepted\" ? (\r\n              <IconAccept />\r\n            ) : journal?.status === \"rejected\" ? (\r\n              <IconDecline />\r\n            ) : (\r\n              \" Brak\"\r\n            )}\r\n          </span>\r\n          <br />\r\n          {journal?.rejectNote && (\r\n            <span>\r\n              <span>Powód odrzucenia: </span>\r\n              {journal.rejectNote}\r\n            </span>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      <div className={css.wrapper}>\r\n        {journal?.id && (\r\n          <button\r\n            preset=\"bright\"\r\n            onClick={() =>\r\n              fetch(`${API_URL}/uploads/${journal?.id}`, {\r\n                headers: new Headers({\r\n                  Authorization: token,\r\n                }),\r\n              })\r\n                .then((response) => response.blob())\r\n                .then((blob) => {\r\n                  var link = document.createElement(\"a\");\r\n                  link.href = window.URL.createObjectURL(blob);\r\n                  link.download = \"Dziennik praktyk.pdf\";\r\n                  link.click();\r\n                  setIsLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                  console.error(error);\r\n                  setIsLoading(false);\r\n                })\r\n            }\r\n          >\r\n            Dziennik\r\n          </button>\r\n        )}\r\n        {(!journal?.id || !data?.getJournal?.status) && (\r\n          <div className={css.fileHandler}>\r\n            <FileUploadWrapper onFileSelect={(file) => setFile(file)}>\r\n              <button>Przeglądaj</button>\r\n            </FileUploadWrapper>\r\n            <span>{file?.name}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {(!journal?.id || !data?.getJournal?.status) && (\r\n        <>\r\n          <button\r\n            onClick={() => {\r\n              setIsLoading(true);\r\n              file &&\r\n                createJournal({\r\n                  variables: { file, PracticeAgreementId: agreementId },\r\n                })\r\n                  .then((result) => {\r\n                    if (result) {\r\n                      refetch();\r\n                    }\r\n                    setIsLoading(false);\r\n                  })\r\n                  .catch((err) => {\r\n                    setIsLoading(false);\r\n                    enqueueError(err);\r\n                  });\r\n            }}\r\n          >\r\n            Wyślij\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Journal;\r\n","import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { Route, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport Practice from \"@components/Practice\";\r\nimport css from \"./MyPractice.module.css\";\r\nimport Page from \"@components/Page\";\r\nimport ReportPracticeModal from \"@components/ReportPracticeModal\";\r\nimport { MY_PRACTICE_AGREEMENTS } from \"./queries\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport Journal from \"./Journal\";\r\n\r\nconst MyPractice = () => {\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const { data, loading, error, refetch } = useQuery(MY_PRACTICE_AGREEMENTS);\r\n  const match = useRouteMatch();\r\n  if (loading) return <LoadingSpinner global />;\r\n  return (\r\n    <>\r\n      <Route exact path={`${match.path}/`}>\r\n        <Page\r\n          title=\"Moja praktyka\"\r\n          button={\r\n            <>\r\n              <div>\r\n                <button onClick={() => setOpenModal(true)}>\r\n                  Zgłoś praktykę\r\n                </button>\r\n              </div>\r\n            </>\r\n          }\r\n        >\r\n          {data?.myPracticeAgreements.map((practice) => (\r\n            <Practice\r\n              refetch={refetch}\r\n              key={practice.id}\r\n              {...practice}\r\n              dictionaryUrl={`${match.path}/dictionary`}\r\n            />\r\n          ))}\r\n        </Page>\r\n        {openModal && (\r\n          <ReportPracticeModal\r\n            open={openModal}\r\n            setOpenModal={setOpenModal}\r\n            refetch={refetch}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path={`${match.path}/dictionary/:agreementId`}>\r\n        <Page title=\"Dziennik\">\r\n          <Journal />\r\n        </Page>\r\n      </Route>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPractice;\r\n","import React from \"react\";\r\nimport css from \"./ConfirmModal.module.css\";\r\nimport Modal from \"@components/Modal\";\r\n\r\nconst ConfirmModal = (props) => {\r\n  const { children, onConfirm, onDecline, component } = props;\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      buttons={\r\n        <>\r\n          <button preset=\"bright\" onClick={onDecline}>\r\n            Nie\r\n          </button>\r\n          <button onClick={onConfirm}>Tak</button>\r\n        </>\r\n      }\r\n    >\r\n      {component ? children : <p className={css.text}>{children}</p>}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ConfirmModal;\r\n","import React from \"react\";\r\nimport css from \"./Textarea.module.css\";\r\nimport clsx from \"clsx\";\r\n\r\nconst Textarea = ({\r\n  id,\r\n  name,\r\n  onChange,\r\n  inputRef,\r\n  value,\r\n  placeholder,\r\n  labelOnTop,\r\n  label,\r\n  className,\r\n  bright,\r\n  defaultValue,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={clsx(css.container, className, labelOnTop && css.labelOnTop)}\r\n    >\r\n      {label && <label className={clsx(bright && css.bright)}>{label}</label>}\r\n      <textarea\r\n        id={id}\r\n        name={name}\r\n        onChange={onChange}\r\n        ref={inputRef}\r\n        placeholder={placeholder}\r\n        defaultValue={defaultValue}\r\n      ></textarea>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Textarea;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const EDIT_ANNOUNCEMENT = gql`\r\n  mutation editPracticeAnnouncement(\r\n    $id: ID!\r\n    $header: String\r\n    $slots: Int\r\n    $technologies: String\r\n    $description: String\r\n    $from: Date\r\n    $to: Date\r\n    $email: String\r\n    $phone: String\r\n    $company_name: String\r\n  ) {\r\n    editPracticeAnnouncement(\r\n      id: $id\r\n      header: $header\r\n      slots: $slots\r\n      technologies: $technologies\r\n      description: $description\r\n      from: $from\r\n      to: $to\r\n      phone: $phone\r\n      email: $email\r\n      company_name: $company_name\r\n    ) {\r\n      id\r\n      header\r\n      slots\r\n      description\r\n      technologies\r\n      from\r\n      to\r\n      phone\r\n      email\r\n      company_name\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport validator from \"validator\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport dayjs from \"dayjs\";\r\n\r\nimport css from \"./EditAnnouncementModal.module.css\";\r\nimport Input from \"@components/Input\";\r\nimport Textarea from \"@components/Textarea\";\r\nimport Modal from \"@components/Modal\";\r\nimport { EDIT_ANNOUNCEMENT } from \"./queries.js\";\r\nimport useSnackGraphql from \"@hooks/useSnackGraphql\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport { companyAtom } from \"@config/userRecoilAtoms\";\r\n\r\nconst EditAnnouncementModal = (props) => {\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const [showGraphqlErrors, enqueueSnackbar] = useSnackGraphql();\r\n  const [editAnnouncement] = useMutation(EDIT_ANNOUNCEMENT);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const company = useRecoilValue(companyAtom);\r\n\r\n  const { setOpenModal, refetch, announcement } = props;\r\n  const fromDate = dayjs(announcement.from).format(\"YYYY-MM-DD\");\r\n  const toDate = dayjs(announcement.to).format(\"YYYY-MM-DD\");\r\n\r\n  const onSubmit = (data) => {\r\n    let uniqueData = {};\r\n    uniqueData.id = announcement.id;\r\n    if (data.header !== announcement.header) uniqueData.header = data.header;\r\n    if (data.slots !== announcement.slots)\r\n      uniqueData.slots = parseInt(data.slots);\r\n    if (data.technologies !== announcement.technologies)\r\n      uniqueData.technologies = data.technologies;\r\n    if (data.description !== announcement.description)\r\n      uniqueData.description = data.description;\r\n    if (data.from !== fromDate) uniqueData.from = data.from;\r\n    if (data.to !== toDate) uniqueData.to = data.to;\r\n    if (data.phone !== announcement.phone) uniqueData.phone = data.phone;\r\n    if (data.email !== announcement.email) uniqueData.email = data.email;\r\n    if (data.company_name !== announcement.company_name)\r\n      uniqueData.company_name = data.company_name;\r\n\r\n    setIsLoading(true);\r\n    editAnnouncement({\r\n      variables: uniqueData,\r\n    })\r\n      .then(() => {\r\n        setIsLoading(false);\r\n        refetch();\r\n        enqueueSnackbar(\"Ogłoszenie edytowano pomyślnie\", {\r\n          variant: \"success\",\r\n        });\r\n        setOpenModal(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        showGraphqlErrors(err);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      header=\"Edytuj ogłoszenie\"\r\n      isLoading={isLoading}\r\n      buttons={\r\n        <>\r\n          <button preset=\"bright\" onClick={() => setOpenModal(false)}>\r\n            Zamknij\r\n          </button>\r\n          <button onClick={handleSubmit(onSubmit)}>Zapisz ogłoszenie</button>{\" \"}\r\n        </>\r\n      }\r\n    >\r\n      <div className={css.container}>\r\n        <div className={css.content}>\r\n          <div className={css.inputGroup}>\r\n            <Input\r\n              inputRef={register({ required: true })}\r\n              label=\"Nagłówek*\"\r\n              labelOnTop\r\n              name=\"header\"\r\n              placeholder=\"Praktyki na stanowisku...\"\r\n              defaultValue={announcement.header}\r\n            />\r\n\r\n            {company ? (\r\n              <div>\r\n                <label>Nazwa firmy</label>\r\n                <br />\r\n                <span>{company.name}</span>\r\n              </div>\r\n            ) : (\r\n              <Input\r\n                label=\"Nazwa firmy*\"\r\n                labelOnTop\r\n                inputRef={register({ required: true })}\r\n                name=\"company_name\"\r\n                placeholder=\"Example z.o.o\"\r\n                defaultValue={announcement.company_name}\r\n              />\r\n            )}\r\n            <Input\r\n              label=\"Miejsca*\"\r\n              type=\"number\"\r\n              labelOnTop\r\n              inputRef={register({ required: true })}\r\n              name=\"slots\"\r\n              defaultValue={announcement.slots}\r\n            />\r\n            <Input\r\n              label=\"Technologie*\"\r\n              labelOnTop\r\n              inputRef={register({ required: true })}\r\n              name=\"technologies\"\r\n              placeholder=\"Java, C++, c#\"\r\n              defaultValue={announcement.technologies}\r\n            />\r\n            {company ? (\r\n              <div>\r\n                <label>Email</label>\r\n                <br />\r\n                <span>{company.email}</span>\r\n              </div>\r\n            ) : (\r\n              <Input\r\n                label=\"Email\"\r\n                labelOnTop\r\n                inputRef={register({\r\n                  validate: (value) =>\r\n                    value ? validator.isEmail(value) : true,\r\n                })}\r\n                name=\"email\"\r\n                placeholder=\"jk@example.com\"\r\n                defaultValue={announcement.email}\r\n              />\r\n            )}\r\n            {company?.phone ? (\r\n              <div>\r\n                <label>Phone</label>\r\n                <br />\r\n                <span>{company.phone}</span>\r\n              </div>\r\n            ) : (\r\n              <Input\r\n                label=\"Telefon\"\r\n                labelOnTop\r\n                inputRef={register}\r\n                name=\"phone\"\r\n                placeholder=\"678 890 ...\"\r\n                defaultValue={announcement.phone}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <Textarea\r\n              label=\"Opis\"\r\n              name=\"description\"\r\n              labelOnTop\r\n              inputRef={register}\r\n              defaultValue={announcement.description}\r\n            />\r\n          </div>\r\n          <div className={css.fromToWrapper}>\r\n            <label>Przedział czasowy</label>\r\n            <Input\r\n              type=\"date\"\r\n              label=\"Od*\"\r\n              inputRef={register({ required: true })}\r\n              name=\"from\"\r\n              defaultValue={fromDate}\r\n            />\r\n            <Input\r\n              type=\"date\"\r\n              label=\"Do*\"\r\n              inputRef={register({ required: true })}\r\n              name=\"to\"\r\n              defaultValue={toDate}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={css.errors}>\r\n        {errors.header && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Nagłówek jest wymagany\r\n          </Alert>\r\n        )}\r\n        {errors.company_name && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Nazwa firmy jest wymagana\r\n          </Alert>\r\n        )}\r\n        {errors.slots && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Miejsca są wymagane\r\n          </Alert>\r\n        )}\r\n        {errors.technologies && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Technologie są wymagane\r\n          </Alert>\r\n        )}\r\n        {(errors.from || errors.to) && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Podaj poprawny przedział czasowy\r\n          </Alert>\r\n        )}\r\n        {errors.email && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Adres email jest niepoprawny\r\n          </Alert>\r\n        )}\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditAnnouncementModal;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const DELETE_PRACTICE_ANNOUNCEMENT = gql`\r\n  mutation deletePracticeAnnouncement($id: ID!) {\r\n    deletePracticeAnnouncement(id: $id)\r\n  }\r\n`;\r\n\r\nexport const CONFIRM_PRACTICE_ANNOUNCEMENT = gql`\r\n  mutation confirmPracticeAnnouncement($id: ID!) {\r\n    confirmPracticeAnnouncement(id: $id) {\r\n      id\r\n      header\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_APPLICATION = gql`\r\n  mutation createApplication(\r\n    $id: ID!\r\n    $CompanyId: ID!\r\n    $from: Date!\r\n    $to: Date!\r\n  ) {\r\n    createApplication(id: $id, CompanyId: $CompanyId, from: $from, to: $to) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport css from \"./Announcement.module.css\";\r\nimport Container from \"@components/Container\";\r\nimport useAuth from \"@hooks/useAuth\";\r\nimport USER_TYPES from \"@config/userTypes\";\r\nimport ConfirmModal from \"@components/ConfirmModal\";\r\nimport EditAnnouncementModal from \"@components/EditAnnouncementModal\";\r\nimport CompanyAvatar from \"@components/CompanyAvatar\";\r\nimport useSnackGraphql from \"@hooks/useSnackGraphql\";\r\n\r\nimport {\r\n  DELETE_PRACTICE_ANNOUNCEMENT,\r\n  CONFIRM_PRACTICE_ANNOUNCEMENT,\r\n  CREATE_APPLICATION,\r\n} from \"./queries\";\r\nimport { companyAtom } from \"@config/userRecoilAtoms\";\r\nimport { IconAccept, IconDecline } from \"@icons\";\r\n\r\nconst Announcement = ({\r\n  id,\r\n  header,\r\n  slots,\r\n  from,\r\n  to,\r\n  technologies,\r\n  description,\r\n  accepted,\r\n  email,\r\n  phone,\r\n  company_name,\r\n  CompanyId,\r\n  announcements,\r\n  setAnnouncements,\r\n  refetch,\r\n  updatedAt,\r\n  Company,\r\n}) => {\r\n  const { userType } = useAuth();\r\n  const [openDeleteModal, setOpenDeleteModal] = useState(false);\r\n  const [openEditModal, setOpenEditModal] = useState(false);\r\n  const [company] = useRecoilState(companyAtom);\r\n  const [\r\n    openConfirmApplicationModal,\r\n    setOpenConfirmApplicationModal,\r\n  ] = useState(false);\r\n  const [confirmPracticeAnnouncement] = useMutation(\r\n    CONFIRM_PRACTICE_ANNOUNCEMENT\r\n  );\r\n  const [deletePracticeAnnouncement] = useMutation(\r\n    DELETE_PRACTICE_ANNOUNCEMENT\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const [createApplication] = useMutation(CREATE_APPLICATION);\r\n\r\n  const [enqueueError, enqueueSnackbar] = useSnackGraphql();\r\n\r\n  const handleDelete = async () => {\r\n    const deleted = await deletePracticeAnnouncement({ variables: { id } });\r\n    if (deleted) {\r\n      enqueueSnackbar(\"Usunięto pomyślnie\", { variant: \"success\" });\r\n      setOpenDeleteModal(false);\r\n      setAnnouncements(\r\n        announcements.filter((announcement) => announcement.id !== id)\r\n      );\r\n    } else {\r\n      enqueueSnackbar(\"Wystąpił problem\", { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    confirmPracticeAnnouncement({ variables: { id } })\r\n      .then((data) => {\r\n        if (data) {\r\n          enqueueSnackbar(\"Zatwierdzono pomyślnie\", { variant: \"success\" });\r\n          setAnnouncements(\r\n            announcements.map((announcement) => {\r\n              if (announcement.id === id)\r\n                return { ...announcement, accepted: true };\r\n              else return announcement;\r\n            })\r\n          );\r\n        }\r\n      })\r\n      .catch(enqueueError);\r\n  };\r\n\r\n  const handleApplication = () => {\r\n    createApplication({\r\n      variables: {\r\n        id,\r\n        CompanyId,\r\n        from,\r\n        to,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res) {\r\n          history.push(\"/mypractice\");\r\n        }\r\n      })\r\n      .catch(enqueueError);\r\n  };\r\n\r\n  return (\r\n    <Container className={css.container}>\r\n      <div className={css.header}>\r\n        <h2>{header}</h2> <span>{dayjs(updatedAt).format(\"DD/MM/YYYY\")}</span>\r\n      </div>\r\n      <span>\r\n        {Company && (\r\n          <CompanyAvatar color={Company.color} className={css.companyAvatar}>\r\n            {Company.name.charAt(0)}-{Company.first_name.charAt(0)}\r\n            {Company.last_name.charAt(0)}\r\n          </CompanyAvatar>\r\n        )}\r\n        <span>Nazwa firmy: </span>\r\n        {company_name}{\" \"}\r\n      </span>\r\n      {Company && (\r\n        <span>\r\n          <span>Przedstawiciel: </span>\r\n          {`${Company.first_name} ${Company.last_name}`}\r\n        </span>\r\n      )}\r\n\r\n      <span>\r\n        <span>Miejsca:</span> {slots}\r\n      </span>\r\n      <span>\r\n        <span>Od:</span> {dayjs(from).format(\"DD/MM/YYYY\")} <span>do: </span>\r\n        {dayjs(to).format(\"DD/MM/YYYY\")}\r\n      </span>\r\n      {email && (\r\n        <span>\r\n          <span>Email:</span> {email}\r\n        </span>\r\n      )}\r\n      {phone && (\r\n        <span>\r\n          <span>Telefon:</span> {phone}\r\n        </span>\r\n      )}\r\n      <span>\r\n        <span>Technologie:</span> {technologies}\r\n      </span>\r\n      {CompanyId &&\r\n        CompanyId === company?.id &&\r\n        userType === USER_TYPES.company && (\r\n          <span>\r\n            <span>Zatwierdzone:</span>{\" \"}\r\n            {accepted ? <IconAccept /> : <IconDecline />}\r\n          </span>\r\n        )}\r\n      <p>{description}</p>\r\n      <div className={css.buttons}>\r\n        {userType === USER_TYPES.student && CompanyId && (\r\n          <button onClick={() => setOpenConfirmApplicationModal(true)}>\r\n            Złóż podanie\r\n          </button>\r\n        )}\r\n        {userType === USER_TYPES.practiceSuperviser && accepted === false && (\r\n          <button onClick={handleConfirm}>Zatwierdź</button>\r\n        )}\r\n        {((userType === USER_TYPES.company &&\r\n          CompanyId &&\r\n          CompanyId === company?.id) ||\r\n          userType === USER_TYPES.practiceSuperviser) && (\r\n          <button onClick={() => setOpenEditModal(true)}>Edytuj</button>\r\n        )}\r\n        {(userType === USER_TYPES.practiceSuperviser ||\r\n          (CompanyId &&\r\n            CompanyId === company?.id &&\r\n            userType === USER_TYPES.company)) && (\r\n          <button preset=\"red\" onClick={() => setOpenDeleteModal(true)}>\r\n            Usuń\r\n          </button>\r\n        )}\r\n      </div>\r\n      {openDeleteModal && (\r\n        <ConfirmModal\r\n          open={openDeleteModal}\r\n          setOpenModal={setOpenDeleteModal}\r\n          onDecline={() => setOpenDeleteModal(false)}\r\n          onConfirm={handleDelete}\r\n        >\r\n          Czy na pewno chcesz usunąć te ogłoszenie?\r\n          <br />\r\n          Tej operacji nie da się cofnąć.\r\n        </ConfirmModal>\r\n      )}\r\n      {openConfirmApplicationModal && (\r\n        <ConfirmModal\r\n          open={openConfirmApplicationModal}\r\n          setOpenModal={setOpenConfirmApplicationModal}\r\n          onDecline={() => setOpenConfirmApplicationModal(false)}\r\n          onConfirm={handleApplication}\r\n        >\r\n          Czy na pewno chcesz złożyć podanie?\r\n          <br />\r\n          Tej operacji nie da się cofnąć.\r\n        </ConfirmModal>\r\n      )}\r\n      {openEditModal && (\r\n        <EditAnnouncementModal\r\n          open={openEditModal}\r\n          setOpenModal={setOpenEditModal}\r\n          announcement={{\r\n            id,\r\n            header,\r\n            slots,\r\n            from,\r\n            to,\r\n            technologies,\r\n            description,\r\n            accepted,\r\n            email,\r\n            phone,\r\n            company_name,\r\n            CompanyId,\r\n          }}\r\n          refetch={refetch}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Announcement;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const ANNOUNCEMENTS = gql`\r\n  query practiceAnnouncements {\r\n    practiceAnnouncements {\r\n      id\r\n      header\r\n      slots\r\n      technologies\r\n      description\r\n      to\r\n      from\r\n      accepted\r\n      phone\r\n      email\r\n      company_name\r\n      updatedAt\r\n      CompanyId\r\n      Company {\r\n        name\r\n        first_name\r\n        last_name\r\n        color\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport Announcement from \"@components/Announcement\";\r\nimport Page from \"@components/Page\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { ANNOUNCEMENTS } from \"./queries\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport Modal from \"@components/Modal\";\r\n\r\nconst AnnouncementPage = () => {\r\n  const { loading, error, data, refetch } = useQuery(ANNOUNCEMENTS);\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  if (loading) return <LoadingSpinner />;\r\n  if (error) return \"error\";\r\n  return (\r\n    <>\r\n      <Page title=\"Ogłoszenia praktyk\">\r\n        {data.practiceAnnouncements.map((announcement, index) => {\r\n          return <Announcement key={index} {...announcement} />;\r\n        })}\r\n      </Page>\r\n\r\n      {openModal && (\r\n        <Modal open={openModal} setOpenModal={setOpenModal} refetch={refetch} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnnouncementPage;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const UPDATE_STUDENT = gql`\r\n  mutation updateStudentProfile(\r\n    $first_name: String\r\n    $last_name: String\r\n    $password: String\r\n    $confirmPassword: String\r\n    $index_number: String\r\n  ) {\r\n    updateStudentProfile(\r\n      first_name: $first_name\r\n      last_name: $last_name\r\n      password: $password\r\n      confirmPassword: $confirmPassword\r\n      index_number: $index_number\r\n    ) {\r\n      id\r\n      email\r\n      first_name\r\n      last_name\r\n      index_number\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_COMPANY = gql`\r\n  mutation updateCompanyProfile(\r\n    $first_name: String\r\n    $last_name: String\r\n    $password: String\r\n    $confirmPassword: String\r\n    $name: String\r\n    $city: String\r\n    $address: String\r\n    $phone: String\r\n  ) {\r\n    updateCompanyProfile(\r\n      first_name: $first_name\r\n      last_name: $last_name\r\n      password: $password\r\n      confirmPassword: $confirmPassword\r\n      name: $name\r\n      city: $city\r\n      address: $address\r\n      phone: $phone\r\n    ) {\r\n      id\r\n      email\r\n      phone\r\n      name\r\n      first_name\r\n      last_name\r\n      color\r\n      city\r\n      address\r\n      phone\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_PRACTICE_SUPERVISER = gql`\r\n  mutation updatePracticeSuperviserProfile(\r\n    $first_name: String\r\n    $last_name: String\r\n    $password: String\r\n    $confirmPassword: String\r\n  ) {\r\n    updatePracticeSuperviserProfile(\r\n      first_name: $first_name\r\n      last_name: $last_name\r\n      password: $password\r\n      confirmPassword: $confirmPassword\r\n    ) {\r\n      id\r\n      email\r\n      first_name\r\n      last_name\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useRecoilValue, useRecoilState } from \"recoil\";\r\nimport validator from \"validator\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nimport css from \"./Profile.module.css\";\r\nimport Page from \"@components/Page\";\r\nimport Container from \"@components/Container\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport Input from \"@components/Input\";\r\nimport {\r\n  companyAtom,\r\n  studentAtom,\r\n  practiceSuperviserAtom,\r\n} from \"@config/userRecoilAtoms\";\r\nimport {\r\n  UPDATE_STUDENT,\r\n  UPDATE_COMPANY,\r\n  UPDATE_PRACTICE_SUPERVISER,\r\n} from \"./queries.js\";\r\nimport useSnackGraphql from \"@hooks/useSnackGraphql\";\r\n\r\nconst Profile = () => {\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const [company, setCompany] = useRecoilState(companyAtom);\r\n  const [student, setStudent] = useRecoilState(studentAtom);\r\n  const [practiceSuperviser, setPracticeSuperviser] = useRecoilState(\r\n    practiceSuperviserAtom\r\n  );\r\n  const [isLoading, setIsLoading] = useState();\r\n\r\n  const [updateStudentProfile] = useMutation(UPDATE_STUDENT);\r\n  const [updateCompanyProfile] = useMutation(UPDATE_COMPANY);\r\n  const [updatePracticeSuperviserProfile] = useMutation(\r\n    UPDATE_PRACTICE_SUPERVISER\r\n  );\r\n\r\n  const [enqueueGraphqlError, enqueueSnackbar] = useSnackGraphql();\r\n\r\n  const onSubmit = (data) => {\r\n    setIsLoading(true);\r\n    if (student) {\r\n      if (data.password !== data.confirmPassword) {\r\n        enqueueSnackbar(\"Hasła muszą być takie same.\", { variant: \"error\" });\r\n      } else if (data.password.length < 8 && data.password.length > 0) {\r\n        enqueueSnackbar(\"Hasło musi mieć przynajmniej 8 znaków.\", {\r\n          variant: \"error\",\r\n        });\r\n      } else if (data.first_name.length < 3 || data.last_name.length < 3) {\r\n        enqueueSnackbar(\"Imię i nazwisko, muszą mieć przynajmniej 3 znaki.\", {\r\n          variant: \"error\",\r\n        });\r\n      } else {\r\n        const variables = {};\r\n        if (student.first_name !== data.first_name)\r\n          variables.first_name = data.first_name;\r\n        if (student.last_name !== data.last_name)\r\n          variables.last_name = data.last_name;\r\n        if (data.password.length > 0) {\r\n          variables.password = data.password;\r\n          variables.confirmPassword = data.confirmPassword;\r\n        }\r\n        if (student.index_number !== data.index_number)\r\n          variables.index_number = data.index_number;\r\n\r\n        if (\r\n          !variables.first_name &&\r\n          !variables.last_name &&\r\n          !variables.password &&\r\n          !variables.index_number\r\n        ) {\r\n          enqueueSnackbar(\"Nie dokonano żadnych zmian\", {\r\n            variant: \"warning\",\r\n          });\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n        updateStudentProfile({ variables: variables })\r\n          .then((res) => {\r\n            if (res?.data?.updateStudentProfile) {\r\n              console.log(res);\r\n              enqueueSnackbar(\"Zauktualizowano pomyślnie.\", {\r\n                variant: \"success\",\r\n              });\r\n              setStudent(res?.data?.updateStudentProfile);\r\n            }\r\n            setIsLoading(false);\r\n          })\r\n          .catch((err) => {\r\n            setIsLoading(false);\r\n            enqueueGraphqlError(err);\r\n          });\r\n      }\r\n    }\r\n    if (company) {\r\n      console.log(data);\r\n      if (data.password !== data.confirmPassword) {\r\n        enqueueSnackbar(\"Hasła muszą być takie same.\", { variant: \"error\" });\r\n      } else if (data.password.length < 8 && data.password.length > 0) {\r\n        enqueueSnackbar(\"Hasło musi mieć przynajmniej 8 znaków.\", {\r\n          variant: \"error\",\r\n        });\r\n      } else if (data.first_name.length < 3 || data.last_name.length < 3) {\r\n        enqueueSnackbar(\"Imię i nazwisko, muszą mieć przynajmniej 3 znaki.\", {\r\n          variant: \"error\",\r\n        });\r\n      } else {\r\n        const variables = {};\r\n        if (company.first_name !== data.first_name)\r\n          variables.first_name = data.first_name;\r\n        if (company.last_name !== data.last_name)\r\n          variables.last_name = data.last_name;\r\n        if (data.password.length > 0) {\r\n          variables.password = data.password;\r\n          variables.confirmPassword = data.confirmPassword;\r\n        }\r\n        if (company.name !== data.name) variables.name = data.name;\r\n        if (company.phone !== data.phone) variables.phone = data.phone;\r\n        if (company.city !== data.city) variables.city = data.city;\r\n        if (company.address !== data.address) variables.address = data.address;\r\n\r\n        console.log(variables);\r\n        if (\r\n          !variables.first_name &&\r\n          !variables.last_name &&\r\n          !variables.password &&\r\n          !variables.phone &&\r\n          !variables.name &&\r\n          !variables.city &&\r\n          !variables.address\r\n        ) {\r\n          enqueueSnackbar(\"Nie dokonano żadnych zmian\", {\r\n            variant: \"warning\",\r\n          });\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n        updateCompanyProfile({ variables: variables })\r\n          .then((res) => {\r\n            if (res?.data?.updateCompanyProfile) {\r\n              console.log(res);\r\n              enqueueSnackbar(\"Zauktualizowano pomyślnie.\", {\r\n                variant: \"success\",\r\n              });\r\n              setCompany(res?.data?.updateCompanyProfile);\r\n            }\r\n            setIsLoading(false);\r\n          })\r\n          .catch((err) => {\r\n            setIsLoading(false);\r\n            enqueueGraphqlError(err);\r\n          });\r\n      }\r\n    }\r\n    if (practiceSuperviser) {\r\n      if (data.password !== data.confirmPassword) {\r\n        enqueueSnackbar(\"Hasła muszą być takie same.\", { variant: \"error\" });\r\n      } else if (data.password.length < 8 && data.password.length > 0) {\r\n        enqueueSnackbar(\"Hasło musi mieć przynajmniej 8 znaków.\", {\r\n          variant: \"error\",\r\n        });\r\n      } else if (data.first_name.length < 3 || data.last_name.length < 3) {\r\n        enqueueSnackbar(\"Imię i nazwisko, muszą mieć przynajmniej 3 znaki.\", {\r\n          variant: \"error\",\r\n        });\r\n      } else {\r\n        const variables = {};\r\n        if (practiceSuperviser.first_name !== data.first_name)\r\n          variables.first_name = data.first_name;\r\n        if (practiceSuperviser.last_name !== data.last_name)\r\n          variables.last_name = data.last_name;\r\n        if (data.password.length > 0) {\r\n          variables.password = data.password;\r\n          variables.confirmPassword = data.confirmPassword;\r\n        }\r\n\r\n        if (\r\n          !variables.first_name &&\r\n          !variables.last_name &&\r\n          !variables.password\r\n        ) {\r\n          enqueueSnackbar(\"Nie dokonano żadnych zmian\", {\r\n            variant: \"warning\",\r\n          });\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n        updatePracticeSuperviserProfile({ variables: variables })\r\n          .then((res) => {\r\n            if (res?.data?.updatePracticeSuperviserProfile) {\r\n              console.log(res);\r\n              enqueueSnackbar(\"Zauktualizowano pomyślnie.\", {\r\n                variant: \"success\",\r\n              });\r\n              setPracticeSuperviser(res?.data?.updatePracticeSuperviserProfile);\r\n            }\r\n            setIsLoading(false);\r\n          })\r\n          .catch((err) => {\r\n            setIsLoading(false);\r\n            enqueueGraphqlError(err);\r\n          });\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Page title=\"Profil\">\r\n      {isLoading && <LoadingSpinner global />}\r\n      <Container>\r\n        {\" \"}\r\n        <div className={css.container}>\r\n          <div className={css.content}>\r\n            {student && (\r\n              <>\r\n                <div className={css.formGroup}>\r\n                  <Input\r\n                    inputRef={register()}\r\n                    label=\"Imię\"\r\n                    labelOnTop\r\n                    name=\"first_name\"\r\n                    defaultValue={student.first_name}\r\n                  />\r\n\r\n                  <Input\r\n                    label=\"Nazwisko\"\r\n                    labelOnTop\r\n                    inputRef={register()}\r\n                    name=\"last_name\"\r\n                    defaultValue={student.last_name}\r\n                  />\r\n                  <Input\r\n                    label=\"Numer indeksu\"\r\n                    labelOnTop\r\n                    inputRef={register()}\r\n                    name=\"index_number\"\r\n                    defaultValue={student.index_number}\r\n                  />\r\n                </div>\r\n                <div className={css.formGroup}>\r\n                  <Input\r\n                    label=\"Hasło\"\r\n                    type=\"password\"\r\n                    labelOnTop\r\n                    inputRef={register()}\r\n                    name=\"password\"\r\n                  />\r\n                  <Input\r\n                    label=\"Powtórz hasło\"\r\n                    type=\"password\"\r\n                    labelOnTop\r\n                    inputRef={register()}\r\n                    name=\"confirmPassword\"\r\n                  />\r\n                </div>\r\n              </>\r\n            )}\r\n            {company && (\r\n              <>\r\n                <div className={css.formGroup}>\r\n                  <Input\r\n                    inputRef={register()}\r\n                    label=\"Imię\"\r\n                    labelOnTop\r\n                    name=\"first_name\"\r\n                    defaultValue={company.first_name}\r\n                  />\r\n\r\n                  <Input\r\n                    label=\"Nazwisko\"\r\n                    labelOnTop\r\n                    inputRef={register()}\r\n                    name=\"last_name\"\r\n                    defaultValue={company.last_name}\r\n                  />\r\n                  <Input\r\n                    label=\"Telefon\"\r\n                    labelOnTop\r\n                    inputRef={register()}\r\n                    name=\"phone\"\r\n                    defaultValue={company.phone}\r\n                  />\r\n                </div>\r\n                <div className={css.formGroup}>\r\n                  <Input\r\n                    label=\"Nazwa firmy\"\r\n                    labelOnTop\r\n                    inputRef={register()}\r\n                    name=\"name\"\r\n                    defaultValue={company.name}\r\n                  />\r\n                  <Input\r\n                    label=\"Miasto i kod pocztowy\"\r\n                    labelOnTop\r\n                    inputRef={register()}\r\n                    name=\"city\"\r\n                    defaultValue={company.city}\r\n                  />\r\n                  <Input\r\n                    label=\"Ulica\"\r\n                    labelOnTop\r\n                    inputRef={register()}\r\n                    name=\"address\"\r\n                    defaultValue={company.address}\r\n                  />\r\n                </div>\r\n                <div className={css.formGroup}>\r\n                  <Input\r\n                    label=\"Hasło\"\r\n                    type=\"password\"\r\n                    labelOnTop\r\n                    inputRef={register()}\r\n                    name=\"password\"\r\n                  />\r\n                  <Input\r\n                    label=\"Powtórz hasło\"\r\n                    type=\"password\"\r\n                    labelOnTop\r\n                    inputRef={register()}\r\n                    name=\"confirmPassword\"\r\n                  />\r\n                </div>\r\n              </>\r\n            )}\r\n            {practiceSuperviser && (\r\n              <>\r\n                <div className={css.formGroup}>\r\n                  <Input\r\n                    inputRef={register()}\r\n                    label=\"Imię\"\r\n                    labelOnTop\r\n                    name=\"first_name\"\r\n                    defaultValue={practiceSuperviser.first_name}\r\n                  />\r\n\r\n                  <Input\r\n                    label=\"Nazwisko\"\r\n                    labelOnTop\r\n                    inputRef={register()}\r\n                    name=\"last_name\"\r\n                    defaultValue={practiceSuperviser.last_name}\r\n                  />\r\n                </div>\r\n                <div className={css.formGroup}>\r\n                  <Input\r\n                    label=\"Hasło\"\r\n                    type=\"password\"\r\n                    labelOnTop\r\n                    inputRef={register()}\r\n                    name=\"password\"\r\n                  />\r\n                  <Input\r\n                    label=\"Powtórz hasło\"\r\n                    type=\"password\"\r\n                    labelOnTop\r\n                    inputRef={register()}\r\n                    name=\"confirmPassword\"\r\n                  />\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          <div className={css.buttons}>\r\n            <button onClick={handleSubmit(onSubmit)}>Zapisz</button>\r\n          </div>\r\n        </div>\r\n        <div className={css.errors}>\r\n          {errors.header && (\r\n            <Alert variant=\"filled\" severity=\"error\">\r\n              Nagłówek jest wymagany\r\n            </Alert>\r\n          )}\r\n          {errors.company_name && (\r\n            <Alert variant=\"filled\" severity=\"error\">\r\n              Nazwa firmy jest wymagana\r\n            </Alert>\r\n          )}\r\n          {errors.slots && (\r\n            <Alert variant=\"filled\" severity=\"error\">\r\n              Miejsca są wymagane\r\n            </Alert>\r\n          )}\r\n          {errors.technologies && (\r\n            <Alert variant=\"filled\" severity=\"error\">\r\n              Technologie są wymagane\r\n            </Alert>\r\n          )}\r\n          {(errors.from || errors.to) && (\r\n            <Alert variant=\"filled\" severity=\"error\">\r\n              Podaj poprawny przedział czasowy\r\n            </Alert>\r\n          )}\r\n          {errors.email && (\r\n            <Alert variant=\"filled\" severity=\"error\">\r\n              Adres email jest niepoprawny\r\n            </Alert>\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport css from \"./NotFound.module.css\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className={css.container}>\r\n      <div className={css.content}>\r\n        <h2>Błędny adres url</h2>\r\n        <span>404</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_STUDENT = gql`\r\n  query meStudent {\r\n    meStudent {\r\n      email\r\n      first_name\r\n      last_name\r\n      index_number\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { Switch, Route, useHistory } from \"react-router-dom\";\r\n\r\nimport MyPractice from \"./MyPractice\";\r\nimport AnnouncementPage from \"./AnnouncementPage\";\r\nimport Profile from \"../Profile\";\r\nimport NotFound from \"@components/NotFound\";\r\nimport { studentAtom } from \"@config/userRecoilAtoms\";\r\nimport { GET_STUDENT } from \"./queries.js\";\r\n\r\nconst Student = () => {\r\n  const [student, setStudent] = useRecoilState(studentAtom);\r\n  const [getStudent, { data, loading, error }] = useLazyQuery(GET_STUDENT);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!student) {\r\n      getStudent();\r\n    }\r\n  }, [student, getStudent]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      if (!data.meStudent) history.push(\"/logout\");\r\n      setStudent(data.meStudent);\r\n    }\r\n  }, [data, setStudent]);\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <AnnouncementPage />\r\n        </Route>\r\n        <Route path=\"/mypractice\">\r\n          <MyPractice />\r\n        </Route>\r\n        <Route exact path=\"/profile\">\r\n          <Profile />\r\n        </Route>\r\n        <Route>\r\n          <NotFound />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Student;\r\n","import { useState } from \"react\";\r\n\r\nfunction useLocalStorage(key, initialValue = \"\") {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = (value) => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport useAuth from \"@hooks/useAuth\";\r\n\r\nconst PrivateRoute = ({ children, userType, ...rest }) => {\r\n  const { userType: userTypeStorage } = useAuth();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        userTypeStorage === userType ? children : null\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport useAuth from \"@hooks/useAuth\";\r\n\r\nconst clearUserData = (location, removeToken, removeUserType) => {\r\n  removeToken();\r\n  removeUserType();\r\n  return (\r\n    <Redirect\r\n      to={{\r\n        pathname: \"/login\",\r\n        state: { from: location },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst ProtectedRoute = ({ children, ...rest }) => {\r\n  const { userType, removeToken, removeUserType } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        userType\r\n          ? children\r\n          : clearUserData(location, removeToken, removeUserType)\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const ANNOUNCEMENTS = gql`\r\n  query practiceAnnouncements {\r\n    practiceAnnouncements {\r\n      id\r\n      header\r\n      slots\r\n      technologies\r\n      description\r\n      to\r\n      from\r\n      accepted\r\n      email\r\n      phone\r\n      company_name\r\n      updatedAt\r\n      Company {\r\n        name\r\n        first_name\r\n        last_name\r\n        color\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const ADD_ANNOUNCEMENT = gql`\r\n  mutation createPracticeAnnouncement(\r\n    $header: String!\r\n    $slots: Int!\r\n    $technologies: String!\r\n    $description: String\r\n    $from: Date!\r\n    $to: Date!\r\n    $email: String\r\n    $phone: String\r\n    $company_name: String\r\n  ) {\r\n    createPracticeAnnouncement(\r\n      header: $header\r\n      slots: $slots\r\n      technologies: $technologies\r\n      description: $description\r\n      from: $from\r\n      to: $to\r\n      phone: $phone\r\n      email: $email\r\n      company_name: $company_name\r\n    ) {\r\n      header\r\n      slots\r\n      description\r\n      technologies\r\n      from\r\n      to\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport validator from \"validator\";\r\nimport { useRecoilValue } from \"recoil\";\r\n\r\nimport css from \"./AddAnnouncementModal.module.css\";\r\nimport Input from \"@components/Input\";\r\nimport Textarea from \"@components/Textarea\";\r\nimport Modal from \"@components/Modal\";\r\nimport { ADD_ANNOUNCEMENT } from \"./queries.js\";\r\nimport useSnackGraphql from \"@hooks/useSnackGraphql\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport { companyAtom } from \"@config/userRecoilAtoms\";\r\n\r\nconst AddAnnouncementModal = (props) => {\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const [showGraphqlErrors, enqueueSnackbar] = useSnackGraphql();\r\n  const [addAnnouncement] = useMutation(ADD_ANNOUNCEMENT);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const company = useRecoilValue(companyAtom);\r\n\r\n  const { setOpenModal, refetch } = props;\r\n\r\n  const onSubmit = (data) => {\r\n    setIsLoading(true);\r\n    addAnnouncement({\r\n      variables: {\r\n        header: data.header,\r\n        slots: data.slots ? parseInt(data.slots) : 0,\r\n        technologies: data.technologies,\r\n        description: data.description,\r\n        from: data.from,\r\n        to: data.to,\r\n        phone: company?.phone ?? data.phone,\r\n        email: company ? company.email : data.email,\r\n        company_name: company ? company.name : data.company_name,\r\n      },\r\n    })\r\n      .then(() => {\r\n        setIsLoading(false);\r\n        refetch();\r\n        enqueueSnackbar(\"Ogłoszenie dodano pomyślnie\", { variant: \"success\" });\r\n        setOpenModal(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        showGraphqlErrors(err);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      header=\"Dodaj ogłoszenie\"\r\n      isLoading={isLoading}\r\n      buttons={\r\n        <>\r\n          <button preset=\"bright\" onClick={() => setOpenModal(false)}>\r\n            Zamknij\r\n          </button>\r\n          <button onClick={handleSubmit(onSubmit)}>Dodaj ogłoszenie</button>{\" \"}\r\n        </>\r\n      }\r\n    >\r\n      <div className={css.container}>\r\n        <div className={css.content}>\r\n          <div className={css.inputGroup}>\r\n            <Input\r\n              inputRef={register({ required: true })}\r\n              label=\"Nagłówek*\"\r\n              labelOnTop\r\n              name=\"header\"\r\n              placeholder=\"Praktyki na stanowisku...\"\r\n            />\r\n\r\n            {company ? (\r\n              <div>\r\n                <label>Nazwa firmy</label>\r\n                <br />\r\n                <span>{company.name}</span>\r\n              </div>\r\n            ) : (\r\n              <Input\r\n                label=\"Nazwa firmy*\"\r\n                labelOnTop\r\n                inputRef={register({ required: true })}\r\n                name=\"company_name\"\r\n                placeholder=\"Example z.o.o\"\r\n              />\r\n            )}\r\n            <Input\r\n              label=\"Miejsca*\"\r\n              type=\"number\"\r\n              labelOnTop\r\n              inputRef={register({ required: true })}\r\n              name=\"slots\"\r\n              defaultValue={1}\r\n            />\r\n            <Input\r\n              label=\"Technologie*\"\r\n              labelOnTop\r\n              inputRef={register({ required: true })}\r\n              name=\"technologies\"\r\n              placeholder=\"Java, C++, c#\"\r\n            />\r\n            {company ? (\r\n              <div>\r\n                <label>Email</label>\r\n                <br />\r\n                <span>{company.email}</span>\r\n              </div>\r\n            ) : (\r\n              <Input\r\n                label=\"Email\"\r\n                labelOnTop\r\n                inputRef={register({\r\n                  validate: (value) =>\r\n                    value ? validator.isEmail(value) : true,\r\n                })}\r\n                name=\"email\"\r\n                placeholder=\"jk@example.com\"\r\n              />\r\n            )}\r\n            {company?.phone ? (\r\n              <div>\r\n                <label>Phone</label>\r\n                <br />\r\n                <span>{company.phone}</span>\r\n              </div>\r\n            ) : (\r\n              <Input\r\n                label=\"Telefon\"\r\n                labelOnTop\r\n                inputRef={register}\r\n                name=\"phone\"\r\n                placeholder=\"678 890 ...\"\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <Textarea\r\n              label=\"Opis\"\r\n              name=\"description\"\r\n              labelOnTop\r\n              inputRef={register}\r\n            />\r\n          </div>\r\n          <div className={css.fromToWrapper}>\r\n            <label>Przedział czasowy</label>\r\n            <Input\r\n              type=\"date\"\r\n              label=\"Od*\"\r\n              inputRef={register({ required: true })}\r\n              name=\"from\"\r\n            />\r\n            <Input\r\n              type=\"date\"\r\n              label=\"Do*\"\r\n              inputRef={register({ required: true })}\r\n              name=\"to\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={css.errors}>\r\n        {errors.header && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Nagłówek jest wymagany\r\n          </Alert>\r\n        )}\r\n        {errors.company_name && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Nazwa firmy jest wymagana\r\n          </Alert>\r\n        )}\r\n        {errors.slots && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Miejsca są wymagane\r\n          </Alert>\r\n        )}\r\n        {errors.technologies && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Technologie są wymagane\r\n          </Alert>\r\n        )}\r\n        {(errors.from || errors.to) && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Podaj poprawny przedział czasowy\r\n          </Alert>\r\n        )}\r\n        {errors.email && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Adres email jest niepoprawny\r\n          </Alert>\r\n        )}\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddAnnouncementModal;\r\n","import React from \"react\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nimport css from \"./Tabs.module.css\";\r\n\r\nexport const CustomTab = (props) => {\r\n  return (\r\n    <Tab {...props} className={css.tab}>\r\n      {props.children}\r\n    </Tab>\r\n  );\r\n};\r\n\r\nexport const CustomTabs = (props) => {\r\n  return (\r\n    <Tabs {...props} className={css.tabs}>\r\n      {props.children}\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nCustomTabs.Tab = CustomTab;\r\n\r\nexport default CustomTabs;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport css from \"./SearchInput.module.css\";\r\nimport clsx from \"clsx\";\r\n\r\nexport const SearchInput = (props) => {\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      variant=\"outlined\"\r\n      className={clsx(css.search, props?.className)}\r\n      label=\"Szukaj\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","const searchHelper = (array, search) => {\r\n  search = search.toLowerCase();\r\n  const arrayLowerCase = array.map((element) => String(element).toLowerCase());\r\n  let isArrayContain = false;\r\n  arrayLowerCase.forEach((element) => {\r\n    if (element.includes(search)) isArrayContain = true;\r\n  });\r\n\r\n  return isArrayContain;\r\n};\r\n\r\nexport default searchHelper;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\nimport { ANNOUNCEMENTS } from \"./queries\";\r\nimport Page from \"@components/Page\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport Announcement from \"@components/Announcement\";\r\nimport AddAnnouncementModal from \"@components/AddAnnouncementModal\";\r\nimport Tabs from \"@components/Tabs\";\r\nimport css from \"./AnnouncementPage.module.css\";\r\nimport SearchInput from \"@components/SearchInput\";\r\nimport searchHelper from \"@utility/searchHelper\";\r\n\r\nconst AnnouncementPage = () => {\r\n  const { loading, error, data, refetch } = useQuery(ANNOUNCEMENTS);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [announcements, setAnnouncements] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (data) setAnnouncements(data.practiceAnnouncements);\r\n  }, [data]);\r\n\r\n  if (loading) return <LoadingSpinner />;\r\n  if (error) return \"error\";\r\n  return (\r\n    <>\r\n      <Page\r\n        title=\"Ogłoszenia praktyk\"\r\n        button={\r\n          <button onClick={() => setOpenModal(true)}>Dodaj ogłoszenie</button>\r\n        }\r\n      >\r\n        <div className={css.tabs}>\r\n          <Tabs\r\n            value={tabValue}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            onChange={(event, newValue) => setTabValue(newValue)}\r\n          >\r\n            <Tabs.Tab label=\"Zatwierdzone\" />\r\n            <Tabs.Tab label=\"Oczekujące\" />\r\n          </Tabs>\r\n          <SearchInput\r\n            className={css.searchInput}\r\n            value={search}\r\n            onChange={(event) => setSearch(event.target.value)}\r\n          />\r\n        </div>\r\n        {announcements.map((announcement, index) => {\r\n          if (\r\n            (tabValue === 0 && announcement.accepted) ||\r\n            (tabValue === 1 && !announcement.accepted)\r\n          ) {\r\n            if (\r\n              !searchHelper(\r\n                [\r\n                  announcement.email,\r\n                  announcement.company_name,\r\n                  announcement.header,\r\n                  announcement.phone,\r\n                  announcement.technologies,\r\n                ],\r\n                search\r\n              )\r\n            )\r\n              return null;\r\n            return (\r\n              <Announcement\r\n                key={index}\r\n                {...announcement}\r\n                announcements={announcements}\r\n                setAnnouncements={setAnnouncements}\r\n                refetch={refetch}\r\n              />\r\n            );\r\n          } else return null;\r\n        })}\r\n      </Page>\r\n      {openModal && (\r\n        <AddAnnouncementModal\r\n          open={openModal}\r\n          setOpenModal={setOpenModal}\r\n          refetch={refetch}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnnouncementPage;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const AGREEMENTS = gql`\r\n  query agreements($year: Date) {\r\n    agreements(year: $year) {\r\n      id\r\n      address\r\n      city\r\n      email\r\n      company_name\r\n      phone\r\n      from\r\n      to\r\n      accepted\r\n      Student {\r\n        id\r\n        index_number\r\n        first_name\r\n        last_name\r\n        email\r\n        color\r\n      }\r\n      DocumentFiles {\r\n        id\r\n        status\r\n        type\r\n      }\r\n      Company {\r\n        id\r\n        name\r\n        first_name\r\n        last_name\r\n        color\r\n      }\r\n      company_accepted\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const DELETE_PRACTICE_AGREEMENT = gql`\r\n  mutation deletePracticeAgreement($id: ID!) {\r\n    deletePracticeAgreement(id: $id)\r\n  }\r\n`;\r\n\r\nexport const CONFIRM_PRACTICE_AGREEMENT = gql`\r\n  mutation confirmPracticeAgreement($id: ID!) {\r\n    confirmPracticeAgreement(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CHANGE_DOCUMENT_STATUS = gql`\r\n  mutation changeDocumentFileStatus(\r\n    $id: ID!\r\n    $status: Status!\r\n    $rejectNote: String\r\n  ) {\r\n    changeDocumentFileStatus(\r\n      id: $id\r\n      status: $status\r\n      rejectNote: $rejectNote\r\n    ) {\r\n      id\r\n      status\r\n      type\r\n      rejectNote\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport clsx from \"clsx\";\r\n\r\nimport css from \"./Agreement.module.css\";\r\nimport Container from \"@components/Container\";\r\nimport CompanyAvatar from \"@components/CompanyAvatar\";\r\nimport ConfirmModal from \"@components/ConfirmModal\";\r\nimport {\r\n  CONFIRM_PRACTICE_AGREEMENT,\r\n  DELETE_PRACTICE_AGREEMENT,\r\n  CHANGE_DOCUMENT_STATUS,\r\n} from \"./queries\";\r\nimport useAuth from \"@hooks/useAuth\";\r\nimport { IconAccept, IconDecline } from \"@icons\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport Textarea from \"@components/Textarea\";\r\nimport { API_URL } from \"@config/global\";\r\n\r\nconst STATUS = {\r\n  accepted: { value: \"accepted\", label: \"Zatwierdzono\", icon: <IconAccept /> },\r\n  rejected: { value: \"rejected\", label: \"Odrzucono\", icon: <IconDecline /> },\r\n};\r\n\r\nconst Agreement = ({\r\n  id,\r\n  company_name,\r\n  city,\r\n  address,\r\n  email,\r\n  phone,\r\n  Student,\r\n  from,\r\n  to,\r\n  color,\r\n  accepted,\r\n  agreements,\r\n  setAgreements,\r\n  DocumentFiles,\r\n  refetch,\r\n  company_accepted,\r\n  Company,\r\n  className,\r\n}) => {\r\n  const [confirmPracticeAgreement] = useMutation(CONFIRM_PRACTICE_AGREEMENT);\r\n  const [deletePracticeAgreement] = useMutation(DELETE_PRACTICE_AGREEMENT);\r\n  const [changeDocumentStatus] = useMutation(CHANGE_DOCUMENT_STATUS);\r\n  const { token } = useAuth();\r\n\r\n  const [rejectNote, setRejectNote] = useState(\"\");\r\n  const [openDeleteModal, setOpenDeleteModal] = useState(false);\r\n  const [openConfirmModal, setOpenConfirmModal] = useState(false);\r\n  const [openConfirmAgreementModal, setOpenConfirmAgreementModal] = useState(\r\n    false\r\n  );\r\n  const [openRejectModal, setOpenRejectModal] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const InternshipJournal = DocumentFiles.find(\r\n    (document) => document.type === \"journal\"\r\n  );\r\n  const PracticeAgreement = DocumentFiles.find(\r\n    (document) => document.type === \"agreement\"\r\n  );\r\n  const PersonalDataAgreement = DocumentFiles.find(\r\n    (document) => document.type === \"personalData\"\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    confirmPracticeAgreement({ variables: { id } }).then((data) => {\r\n      if (data) {\r\n        enqueueSnackbar(\"Zatwierdzono pomyślnie\", { variant: \"success\" });\r\n        setAgreements(\r\n          agreements.map((agreement) => {\r\n            if (agreement.id === id) return { ...agreement, accepted: true };\r\n            else return agreement;\r\n          })\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    const deleted = await deletePracticeAgreement({ variables: { id } });\r\n    if (deleted) {\r\n      enqueueSnackbar(\"Usunięto pomyślnie\", { variant: \"success\" });\r\n      setOpenDeleteModal(false);\r\n      setAgreements(agreements.filter((agreement) => agreement.id !== id));\r\n    } else {\r\n      enqueueSnackbar(\"Wystąpił problem\", { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  const handleDocumentStatusChange = (status, rejectNote) => {\r\n    setIsLoading(true);\r\n    changeDocumentStatus({\r\n      variables: {\r\n        id: InternshipJournal.id,\r\n        status: status ? STATUS.accepted.value : STATUS.rejected.value,\r\n        rejectNote: rejectNote,\r\n      },\r\n    })\r\n      .then((data) => {\r\n        if (data) {\r\n          openConfirmModal && setOpenConfirmModal(false);\r\n          openRejectModal && setOpenRejectModal(false);\r\n\r\n          refetch();\r\n        }\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        enqueueSnackbar(\"Wystąpił problem\", { variant: \"error\" });\r\n        setIsLoading(false);\r\n        openConfirmModal && setOpenConfirmModal(false);\r\n        openRejectModal && setOpenRejectModal(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LoadingSpinner global />}\r\n      <Container className={css.container}>\r\n        <div className={css.block}>\r\n          <div className={css.avatar}>\r\n            {\" \"}\r\n            <Avatar style={{ backgroundColor: Student.color }}>\r\n              {Student.first_name.charAt(0)}\r\n              {Student.last_name.charAt(0)}\r\n            </Avatar>\r\n            <h2>{`${Student.first_name} ${Student.last_name}`}</h2>\r\n          </div>\r\n\r\n          <span>\r\n            <span>Okres wykonywania praktyki:</span> Od{\" \"}\r\n            {dayjs(from).format(\"DD/MM/YYYY\")} do{\" \"}\r\n            {dayjs(to).format(\"DD/MM/YYYY\")}\r\n          </span>\r\n          <span>\r\n            <span>Numer indeksu: </span> {Student.index_number}\r\n          </span>\r\n          <span>\r\n            <span>Email:</span> {Student.email}\r\n          </span>\r\n          {Company && (\r\n            <span>\r\n              <span>Zgoda firmy: </span>\r\n              {company_accepted ? (\r\n                <IconAccept />\r\n              ) : company_accepted === false ? (\r\n                <IconDecline />\r\n              ) : (\r\n                \"Brak\"\r\n              )}\r\n            </span>\r\n          )}\r\n          <span>\r\n            <span>Status dziennika: </span>\r\n            {STATUS[InternshipJournal?.status]?.icon ?? \"Brak\"}\r\n          </span>\r\n\r\n          <div className={css.buttons}>\r\n            {!accepted && (\r\n              <button\r\n                onClick={() => {\r\n                  if (!PracticeAgreement || !PersonalDataAgreement) {\r\n                    enqueueSnackbar(\r\n                      \"Nie możesz zatwierdzić umowy, brak dokumentów.\",\r\n                      { variant: \"warning\" }\r\n                    );\r\n                  } else if (Company && !company_accepted) {\r\n                    enqueueSnackbar(\r\n                      \"Umowa musi być najpierw zatwierdzona przez firmę.\",\r\n                      { variant: \"warning\" }\r\n                    );\r\n                  } else setOpenConfirmAgreementModal(true);\r\n                }}\r\n              >\r\n                Zatwierdź\r\n              </button>\r\n            )}\r\n            <button preset=\"red\" onClick={() => setOpenDeleteModal(true)}>\r\n              Usuń\r\n            </button>\r\n\r\n            {InternshipJournal && (\r\n              <>\r\n                <button\r\n                  preset=\"bright\"\r\n                  onClick={() => {\r\n                    setIsLoading(true);\r\n                    return fetch(`${API_URL}/uploads/${InternshipJournal.id}`, {\r\n                      headers: new Headers({\r\n                        Authorization: token,\r\n                      }),\r\n                    })\r\n                      .then((response) => response.blob())\r\n                      .then((blob) => {\r\n                        const url = window.URL.createObjectURL(blob);\r\n                        window.open(url);\r\n                        setIsLoading(false);\r\n                      })\r\n                      .catch((error) => {\r\n                        console.error(error);\r\n                        setIsLoading(false);\r\n                      });\r\n                  }}\r\n                >\r\n                  Dziennik\r\n                </button>\r\n\r\n                {InternshipJournal && (\r\n                  <>\r\n                    <button onClick={() => setOpenConfirmModal(true)}>\r\n                      Zatwierdź dziennik\r\n                    </button>\r\n\r\n                    <button\r\n                      preset=\"bright\"\r\n                      onClick={() => setOpenRejectModal(true)}\r\n                    >\r\n                      Odrzuć dziennik\r\n                    </button>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className={css.block}>\r\n          <h3>Dane firmy</h3>\r\n          {Company && (\r\n            <CompanyAvatar color={Company.color} className={css.companyAvatar}>\r\n              {Company.name.charAt(0)}-{Company.first_name.charAt(0)}\r\n              {Company.last_name.charAt(0)}\r\n            </CompanyAvatar>\r\n          )}\r\n          <span>\r\n            <span>Nazwa firmy: </span>\r\n            {company_name}\r\n          </span>\r\n          <span>\r\n            <span>Email: </span>\r\n            {email}\r\n          </span>\r\n          <span>\r\n            <span>Telefon: </span>\r\n            {phone}\r\n          </span>\r\n          <span>\r\n            <span>Miejscowość: </span>\r\n            {city}\r\n          </span>\r\n          <span>\r\n            <span>Adres: </span>\r\n            {address}\r\n          </span>\r\n          <br />\r\n          {InternshipJournal?.accepted && (\r\n            <span>\r\n              Dziennik zatwierdzony <IconAccept />\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className={css.block}>\r\n          <h3>Dokumenty</h3>\r\n          <div className={css.agreements}>\r\n            {PracticeAgreement && (\r\n              <button\r\n                onClick={() => {\r\n                  setIsLoading(true);\r\n                  return fetch(`${API_URL}/uploads/${PracticeAgreement.id}`, {\r\n                    headers: new Headers({\r\n                      Authorization: token,\r\n                    }),\r\n                  })\r\n                    .then((response) => response.blob())\r\n                    .then((blob) => {\r\n                      const url = window.URL.createObjectURL(blob);\r\n                      window.open(url);\r\n                      setIsLoading(false);\r\n                    })\r\n                    .catch((error) => {\r\n                      console.error(error);\r\n                      setIsLoading(false);\r\n                    });\r\n                }}\r\n              >\r\n                Umowa o praktyki\r\n              </button>\r\n            )}\r\n            {PersonalDataAgreement && (\r\n              <button\r\n                onClick={() => {\r\n                  setIsLoading(true);\r\n                  return fetch(\r\n                    `${API_URL}/uploads/${PersonalDataAgreement.id}`,\r\n                    {\r\n                      headers: new Headers({\r\n                        Authorization: token,\r\n                      }),\r\n                    }\r\n                  )\r\n                    .then((response) => response.blob())\r\n                    .then((blob) => {\r\n                      const url = window.URL.createObjectURL(blob);\r\n                      window.open(url);\r\n                      setIsLoading(false);\r\n                    })\r\n                    .catch((error) => {\r\n                      console.error(error);\r\n                      setIsLoading(false);\r\n                    });\r\n                }}\r\n              >\r\n                Umowa o danych osobowych\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Container>\r\n      {openDeleteModal && (\r\n        <ConfirmModal\r\n          open={openDeleteModal}\r\n          setOpenModal={setOpenDeleteModal}\r\n          onDecline={() => setOpenDeleteModal(false)}\r\n          onConfirm={handleDelete}\r\n        >\r\n          Czy na pewno chcesz usunąć tą umowe?\r\n          <br />\r\n          Tej operacji nie da się cofnąć.\r\n        </ConfirmModal>\r\n      )}\r\n      {openConfirmAgreementModal && (\r\n        <ConfirmModal\r\n          open={openConfirmAgreementModal}\r\n          setOpenModal={setOpenConfirmAgreementModal}\r\n          onDecline={() => setOpenConfirmAgreementModal(false)}\r\n          onConfirm={handleConfirm}\r\n        >\r\n          Czy na pewno chcesz zatwierdzić tę umowę?\r\n          <br />\r\n          Tej operacji nie da się cofnąć.\r\n        </ConfirmModal>\r\n      )}\r\n      {openConfirmModal && (\r\n        <ConfirmModal\r\n          open={openConfirmModal}\r\n          setOpenModal={setOpenConfirmModal}\r\n          onDecline={() => setOpenConfirmModal(false)}\r\n          onConfirm={() => handleDocumentStatusChange(true)}\r\n        >\r\n          Czy na pewno chcesz zatwierdzić dziennik?\r\n          <br />\r\n          Tej operacji nie da się cofnąć.\r\n        </ConfirmModal>\r\n      )}\r\n      {openRejectModal && (\r\n        <ConfirmModal\r\n          open={openRejectModal}\r\n          setOpenModal={setOpenConfirmModal}\r\n          onDecline={() => setOpenRejectModal(false)}\r\n          onConfirm={() => handleDocumentStatusChange(false, rejectNote)}\r\n          component\r\n        >\r\n          <Textarea\r\n            label=\"Podaj powód odrzucenia\"\r\n            name=\"description\"\r\n            onChange={(e) => setRejectNote(e.target.value)}\r\n            labelOnTop\r\n          />\r\n        </ConfirmModal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Agreement;\r\n","import React, { useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport css from \"./YearPicker.module.css\";\r\n\r\nconst YearPicker = ({ className, onChange, year }) => {\r\n  const now = new Date().getFullYear();\r\n  const years = Array.from(\r\n    new Array(16),\r\n    (val, index) => index - 8 + Number(now)\r\n  );\r\n  return (\r\n    <>\r\n      <select\r\n        className={clsx(css.yearPicker, className)}\r\n        onChange={(e) => onChange && onChange(e.target.value)}\r\n        value={year}\r\n      >\r\n        {years.map((year, index) => {\r\n          return (\r\n            <option key={`year${index}`} value={year}>\r\n              {year}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default YearPicker;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport Tabs from \"@components/Tabs\";\r\nimport useAuth from \"@hooks/useAuth\";\r\nimport USER_TYPES from \"@config/userTypes\";\r\nimport Page from \"@components/Page\";\r\nimport { AGREEMENTS } from \"./queries\";\r\nimport css from \"./AgreementPage.module.css\";\r\nimport Agreement from \"@components/Agreement\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport SearchInput from \"@components/SearchInput\";\r\nimport searchHelper from \"@utility/searchHelper\";\r\nimport YearPicker from \"@components/YearPicker\";\r\nimport { globalDatePickerValueAtom } from \"@config/userRecoilAtoms\";\r\n\r\nconst AgreementPage = () => {\r\n  const { userType } = useAuth();\r\n  const [yearFilter, setYearFilter] = useRecoilState(globalDatePickerValueAtom);\r\n  const { loading, error, data, refetch } = useQuery(AGREEMENTS, {\r\n    variables: { year: yearFilter },\r\n  });\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [agreements, setAgreements] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (data) setAgreements(data.agreements);\r\n  }, [data]);\r\n\r\n  const getAgreements = (accepted) => {\r\n    return (\r\n      <>\r\n        {agreements.map((agreement) => {\r\n          if (\r\n            !searchHelper(\r\n              [\r\n                agreement.Student.index_number,\r\n                agreement.Student.first_name,\r\n                agreement.Student.last_name,\r\n                agreement.company_name,\r\n                agreement.email,\r\n                agreement.Student.email,\r\n              ],\r\n              search\r\n            )\r\n          )\r\n            return null;\r\n          return (\r\n            (accepted ? agreement.accepted : !agreement.accepted) && (\r\n              <Agreement\r\n                key={agreement.id}\r\n                {...agreement}\r\n                agreements={agreements}\r\n                setAgreements={setAgreements}\r\n                refetch={refetch}\r\n              />\r\n            )\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  };\r\n\r\n  if (userType !== USER_TYPES.practiceSuperviser) return <Redirect to=\"/\" />;\r\n  if (loading) return <LoadingSpinner global />;\r\n  return (\r\n    <>\r\n      {loading && <LoadingSpinner global />}\r\n      <Page title=\"Umowy\">\r\n        <div className={css.tabs}>\r\n          <Tabs\r\n            value={tabValue}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            onChange={(event, newValue) => setTabValue(newValue)}\r\n          >\r\n            <Tabs.Tab label=\"Zatwierdzone\" />\r\n            <Tabs.Tab label=\"Oczekujące\" />\r\n          </Tabs>\r\n          <div>\r\n            <YearPicker\r\n              className={css.yearPicker}\r\n              onChange={setYearFilter}\r\n              year={yearFilter}\r\n            />\r\n            <SearchInput\r\n              className={css.searchInput}\r\n              value={search}\r\n              onChange={(event) => setSearch(event.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={css.agreements}>\r\n          {tabValue === 0 && getAgreements(true)}\r\n          {tabValue === 1 && getAgreements(false)}\r\n        </div>\r\n        {/*}\r\n        {tabValue === 1 && <Companies />} */}\r\n      </Page>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AgreementPage;\r\n","import React from \"react\";\r\n\r\nimport css from \"./Student.module.css\";\r\nimport Container from \"@components/Container\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst Student = ({ first_name, last_name, index_number, email, color }) => {\r\n  return (\r\n    <Container className={css.container}>\r\n      <div className={css.avatar}>\r\n        <Avatar style={{ backgroundColor: color }}>\r\n          {first_name.charAt(0)}\r\n          {last_name.charAt(0)}\r\n        </Avatar>\r\n        <h3>{`${first_name} ${last_name}`}</h3>\r\n      </div>\r\n      <span>\r\n        <span>Email:</span> {email}\r\n      </span>\r\n      <span>\r\n        <span>Numer indeksu:</span> {index_number}\r\n      </span>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Student;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_STUDENTS = gql`\r\n  query students($year: Date) {\r\n    students(year: $year) {\r\n      id\r\n      index_number\r\n      email\r\n      first_name\r\n      last_name\r\n      color\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nimport Student from \"@components/Student\";\r\nimport css from \"./Students.module.css\";\r\nimport { GET_STUDENTS } from \"./queries\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport searchHelper from \"@utility/searchHelper\";\r\n\r\nconst Students = ({ search, yearFilter }) => {\r\n  const { loading, error, data } = useQuery(GET_STUDENTS, {\r\n    variables: { year: yearFilter },\r\n  });\r\n\r\n  if (loading) return <LoadingSpinner />;\r\n  if (error) return \"error\";\r\n  return (\r\n    <div className={css.studentsList}>\r\n      {data.students.map(\r\n        ({ first_name, last_name, email, index_number, color, id }) => {\r\n          if (\r\n            !searchHelper([first_name, last_name, email, index_number], search)\r\n          )\r\n            return null;\r\n          return (\r\n            <Student\r\n              key={id}\r\n              first_name={first_name}\r\n              last_name={last_name}\r\n              email={email}\r\n              index_number={index_number}\r\n              color={color}\r\n            />\r\n          );\r\n        }\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Students;\r\n","import React from \"react\";\r\n\r\nimport css from \"./Student.module.css\";\r\nimport Container from \"@components/Container\";\r\nimport CompanyAvatar from \"@components/CompanyAvatar\";\r\n\r\nconst Student = ({\r\n  id,\r\n  name,\r\n  city,\r\n  address,\r\n  email,\r\n  first_name,\r\n  last_name,\r\n  color,\r\n}) => {\r\n  return (\r\n    <Container className={css.container}>\r\n      <div className={css.avatar}>\r\n        <CompanyAvatar color={color}>\r\n          {name.charAt(0)}-{first_name.charAt(0)}\r\n          {last_name.charAt(0)}\r\n        </CompanyAvatar>\r\n        <h3>{name}</h3>\r\n      </div>\r\n      <span>\r\n        <span>Przedstawiciel:</span> {`${first_name} ${last_name}`}\r\n      </span>\r\n      <span>\r\n        <span>Email:</span> {email}\r\n      </span>\r\n      <span>\r\n        <span>Miejscowość:</span> {city}\r\n      </span>\r\n      <span>\r\n        <span>Adres:</span> {address}\r\n      </span>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Student;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_COMPANIES = gql`\r\n  query companies($year: Date) {\r\n    companies(year: $year) {\r\n      id\r\n      name\r\n      city\r\n      address\r\n      email\r\n      first_name\r\n      last_name\r\n      color\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nimport Company from \"@components/Company\";\r\nimport css from \"./Companies.module.css\";\r\nimport { GET_COMPANIES } from \"./queries\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport searchHelper from \"@utility/searchHelper\";\r\n\r\nconst Companies = ({ search, yearFilter }) => {\r\n  const { loading, error, data } = useQuery(GET_COMPANIES, {\r\n    variables: { year: yearFilter },\r\n  });\r\n\r\n  if (loading) return <LoadingSpinner />;\r\n  if (error) return \"error\";\r\n  return (\r\n    <div className={css.companiesList}>\r\n      {data.companies.map(\r\n        ({ id, name, city, address, email, first_name, last_name, color }) => {\r\n          if (!searchHelper([name, email, first_name, last_name], search))\r\n            return null;\r\n          return (\r\n            <Company\r\n              key={id}\r\n              first_name={first_name}\r\n              last_name={last_name}\r\n              email={email}\r\n              address={address}\r\n              city={city}\r\n              name={name}\r\n              color={color}\r\n            />\r\n          );\r\n        }\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Companies;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_INVITE = gql`\r\n  mutation createInvite($email: String!, $userType: String!) {\r\n    createInvite(email: $email, userType: $userType) {\r\n      email\r\n      userType\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport validator from \"validator\";\r\n\r\nimport css from \"./AddUserModal.module.css\";\r\nimport Input from \"@components/Input\";\r\nimport Textarea from \"@components/Textarea\";\r\nimport Modal from \"@components/Modal\";\r\n// import { ADD_STUDENT } from \"./queries.js\";\r\nimport useSnackGraphql from \"@hooks/useSnackGraphql\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport Select from \"@components/Select\";\r\nimport { CREATE_INVITE } from \"./queries\";\r\nimport USER_TYPES from \"@config/userTypes\";\r\n\r\nconst AddAnnouncementModal = (props) => {\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const [showGraphqlErrors, enqueueSnackbar] = useSnackGraphql();\r\n  const [createInvite] = useMutation(CREATE_INVITE);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { setOpenModal } = props;\r\n\r\n  const onSubmit = (data) => {\r\n    setIsLoading(true);\r\n    createInvite({\r\n      variables: {\r\n        email: data.email,\r\n        userType: data.userType,\r\n      },\r\n    })\r\n      .then((data) => {\r\n        if (data)\r\n          enqueueSnackbar(\"Zaproszenie wysłano pomyślnie\", {\r\n            variant: \"success\",\r\n          });\r\n        setIsLoading(false);\r\n        setOpenModal(false);\r\n      })\r\n      .catch((err) => {\r\n        showGraphqlErrors(err);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      header=\"Dodaj użytkownika\"\r\n      isLoading={isLoading}\r\n      buttons={\r\n        <>\r\n          <button preset=\"bright\" onClick={() => setOpenModal(false)}>\r\n            Zamknij\r\n          </button>\r\n\r\n          <button onClick={handleSubmit(onSubmit)}>Wyślij zaproszenie</button>\r\n        </>\r\n      }\r\n    >\r\n      <div className={css.container}>\r\n        <div className={css.content}>\r\n          <div className={css.inputGroup}>\r\n            <Select\r\n              inputRef={register}\r\n              options={[\r\n                { label: \"Student\", value: USER_TYPES.student },\r\n                {\r\n                  label: \"Opiekun praktyk\",\r\n                  value: USER_TYPES.practiceSuperviser,\r\n                },\r\n                { label: \"Firma\", value: USER_TYPES.company },\r\n              ]}\r\n              label=\"Typ użytkownika*\"\r\n              name=\"userType\"\r\n              labelOnTop\r\n            />\r\n            <Input\r\n              inputRef={register({\r\n                required: true,\r\n                validate: validator.isEmail,\r\n              })}\r\n              label=\"Adres email*\"\r\n              labelOnTop\r\n              name=\"email\"\r\n              placeholder=\"jk@example.com\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={css.errors}>\r\n        {errors.email && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Adres email jest niepoprawny\r\n          </Alert>\r\n        )}\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddAnnouncementModal;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport Tabs from \"@components/Tabs\";\r\nimport useAuth from \"@hooks/useAuth\";\r\nimport USER_TYPES from \"@config/userTypes\";\r\nimport Page from \"@components/Page\";\r\nimport Students from \"./Students\";\r\nimport Companies from \"./Companies\";\r\nimport css from \"./UsersPage.module.css\";\r\nimport AddUserModal from \"@components/AddUserModal\";\r\nimport SearchInput from \"@components/SearchInput\";\r\nimport { globalDatePickerValueAtom } from \"@config/userRecoilAtoms\";\r\nimport YearPicker from \"@components/YearPicker\";\r\n\r\nconst UsersPage = () => {\r\n  const { userType } = useAuth();\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [yearFilter, setYearFilter] = useRecoilState(globalDatePickerValueAtom);\r\n\r\n  if (userType !== USER_TYPES.practiceSuperviser) return <Redirect to=\"/\" />;\r\n  return (\r\n    <>\r\n      <Page\r\n        title=\"Użytkownicy\"\r\n        button={\r\n          <button onClick={() => setOpenModal(true)}>Dodaj użytkownika</button>\r\n        }\r\n      >\r\n        <div className={css.tabs}>\r\n          <Tabs\r\n            value={tabValue}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            onChange={(event, newValue) => setTabValue(newValue)}\r\n          >\r\n            <Tabs.Tab label=\"Studenci\" />\r\n            <Tabs.Tab label=\"Firmy\" />\r\n          </Tabs>\r\n          <div>\r\n            <YearPicker\r\n              className={css.yearPicker}\r\n              onChange={setYearFilter}\r\n              year={yearFilter}\r\n            />\r\n            <SearchInput\r\n              className={css.searchInput}\r\n              value={search}\r\n              onChange={(event) => setSearch(event.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        {tabValue === 0 && <Students search={search} yearFilter={yearFilter} />}\r\n        {tabValue === 1 && (\r\n          <Companies search={search} yearFilter={yearFilter} />\r\n        )}\r\n      </Page>\r\n      {openModal && (\r\n        <AddUserModal open={openModal} setOpenModal={setOpenModal} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UsersPage;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_PRACTICE_SUPERVISER = gql`\r\n  query mePracticeSuperviser {\r\n    mePracticeSuperviser {\r\n      email\r\n      first_name\r\n      last_name\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Switch, Route, useHistory } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport AnnouncementPage from \"./AnnouncementPage\";\r\nimport AgreementPage from \"./AgreementPage\";\r\nimport UsersPage from \"./UsersPage\";\r\nimport NotFound from \"@components/NotFound\";\r\nimport Profile from \"../Profile\";\r\n\r\nimport { practiceSuperviserAtom } from \"@config/userRecoilAtoms\";\r\nimport { GET_PRACTICE_SUPERVISER } from \"./queries.js\";\r\n\r\nconst PracticeSuperviser = () => {\r\n  const history = useHistory();\r\n  const [practiceSuperviser, setPracticeSuperviser] = useRecoilState(\r\n    practiceSuperviserAtom\r\n  );\r\n  const [getPracticeSuperviser, { data }] = useLazyQuery(\r\n    GET_PRACTICE_SUPERVISER\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!practiceSuperviser) {\r\n      getPracticeSuperviser();\r\n    }\r\n  }, [practiceSuperviser, getPracticeSuperviser]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      if (!data.mePracticeSuperviser) history.push(\"/logout\");\r\n      setPracticeSuperviser(data.mePracticeSuperviser);\r\n    }\r\n  }, [data, setPracticeSuperviser]);\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <AnnouncementPage />\r\n        </Route>\r\n        <Route exact path=\"/users\">\r\n          <UsersPage />\r\n        </Route>\r\n        <Route exact path=\"/agreements\">\r\n          <AgreementPage />\r\n        </Route>\r\n        <Route exact path=\"/profile\">\r\n          <Profile />\r\n        </Route>\r\n        <Route>\r\n          <NotFound />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PracticeSuperviser;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const ANNOUNCEMENTS = gql`\r\n  query practiceAnnouncements {\r\n    practiceAnnouncements {\r\n      id\r\n      header\r\n      slots\r\n      technologies\r\n      description\r\n      to\r\n      from\r\n      accepted\r\n      phone\r\n      email\r\n      company_name\r\n      CompanyId\r\n      updatedAt\r\n      Company {\r\n        name\r\n        first_name\r\n        last_name\r\n        color\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport { ANNOUNCEMENTS } from \"./queries\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport AddAnnouncementModal from \"@components/AddAnnouncementModal\";\r\nimport Tabs from \"@components/Tabs\";\r\nimport css from \"./AnnouncementPage.module.css\";\r\nimport Announcement from \"@components/Announcement\";\r\nimport Page from \"@components/Page\";\r\nimport { companyAtom } from \"@config/userRecoilAtoms\";\r\n\r\nconst AnnouncementPage = () => {\r\n  const { loading, error, data, refetch } = useQuery(ANNOUNCEMENTS);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [announcements, setAnnouncements] = useState([]);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [company] = useRecoilState(companyAtom);\r\n\r\n  useEffect(() => {\r\n    if (data) setAnnouncements(data.practiceAnnouncements);\r\n  }, [data]);\r\n\r\n  if (loading) return <LoadingSpinner />;\r\n  if (error) return \"error\";\r\n  return (\r\n    <>\r\n      <Page\r\n        title=\"Ogłoszenia praktyk\"\r\n        button={\r\n          <button onClick={() => setOpenModal(true)}>Dodaj ogłoszenie</button>\r\n        }\r\n      >\r\n        <div className={css.tabs}>\r\n          <Tabs\r\n            value={tabValue}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            onChange={(event, newValue) => setTabValue(newValue)}\r\n          >\r\n            <Tabs.Tab label=\"Wszystkie ogłoszenia\" />\r\n            <Tabs.Tab label=\"Moje ogłoszenia\" />\r\n          </Tabs>\r\n        </div>\r\n        {announcements.map((announcement, index) => {\r\n          if (tabValue === 0)\r\n            return (\r\n              <Announcement\r\n                refetch={refetch}\r\n                key={index}\r\n                {...announcement}\r\n                announcements={announcements}\r\n                setAnnouncements={setAnnouncements}\r\n              />\r\n            );\r\n          if (tabValue === 1 && company?.id === announcement.CompanyId)\r\n            return (\r\n              <Announcement\r\n                refetch={refetch}\r\n                key={index}\r\n                {...announcement}\r\n                announcements={announcements}\r\n                setAnnouncements={setAnnouncements}\r\n              />\r\n            );\r\n          else return null;\r\n        })}\r\n      </Page>\r\n      {openModal && (\r\n        <AddAnnouncementModal\r\n          open={openModal}\r\n          setOpenModal={setOpenModal}\r\n          refetch={refetch}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnnouncementPage;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const AGREEMENTS = gql`\r\n  query agreements($year: Date) {\r\n    agreements(year: $year) {\r\n      id\r\n      address\r\n      city\r\n      email\r\n      company_name\r\n      phone\r\n      from\r\n      to\r\n      accepted\r\n      Student {\r\n        id\r\n        index_number\r\n        first_name\r\n        last_name\r\n        email\r\n        color\r\n      }\r\n      DocumentFiles {\r\n        id\r\n        status\r\n        type\r\n      }\r\n      Company {\r\n        id\r\n      }\r\n      company_accepted\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const REJECT_COMPANY_AGREEMENT = gql`\r\n  mutation rejectCompanyAgreement($id: ID!) {\r\n    rejectCompanyAgreement(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CONFIRM_PRACTICE_AGREEMENT = gql`\r\n  mutation confirmPracticeAgreement($id: ID!) {\r\n    confirmPracticeAgreement(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport clsx from \"clsx\";\r\n\r\nimport css from \"./Agreement.module.css\";\r\nimport Container from \"@components/Container\";\r\nimport ConfirmModal from \"@components/ConfirmModal\";\r\nimport {\r\n  CONFIRM_PRACTICE_AGREEMENT,\r\n  REJECT_COMPANY_AGREEMENT,\r\n} from \"./queries\";\r\nimport useAuth from \"@hooks/useAuth\";\r\nimport { IconAccept, IconDecline } from \"@icons\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport Textarea from \"@components/Textarea\";\r\nimport { API_URL } from \"@config/global\";\r\n\r\nconst STATUS = {\r\n  accepted: { value: \"accepted\", label: \"Zatwierdzono\", icon: <IconAccept /> },\r\n  rejected: { value: \"rejected\", label: \"Odrzucono\", icon: <IconDecline /> },\r\n};\r\n\r\nconst CompanyAgreement = ({\r\n  id,\r\n  company_name,\r\n  city,\r\n  address,\r\n  email,\r\n  phone,\r\n  Student,\r\n  from,\r\n  to,\r\n  color,\r\n  accepted,\r\n  agreements,\r\n  setAgreements,\r\n  DocumentFiles,\r\n  refetch,\r\n  company_accepted,\r\n  Company,\r\n  className,\r\n}) => {\r\n  const [confirmPracticeAgreement] = useMutation(CONFIRM_PRACTICE_AGREEMENT);\r\n  const [rejectCompanyAgreement] = useMutation(REJECT_COMPANY_AGREEMENT);\r\n  const { token } = useAuth();\r\n\r\n  const [openConfirmAgreementModal, setOpenConfirmAgreementModal] = useState(\r\n    false\r\n  );\r\n  const [openRejectModal, setOpenRejectModal] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const InternshipJournal = DocumentFiles.find(\r\n    (document) => document.type === \"journal\"\r\n  );\r\n  const PracticeAgreement = DocumentFiles.find(\r\n    (document) => document.type === \"agreement\"\r\n  );\r\n  const PersonalDataAgreement = DocumentFiles.find(\r\n    (document) => document.type === \"personalData\"\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    confirmPracticeAgreement({ variables: { id } }).then((data) => {\r\n      if (data) {\r\n        enqueueSnackbar(\"Zatwierdzono pomyślnie\", { variant: \"success\" });\r\n        setAgreements(\r\n          agreements.map((agreement) => {\r\n            if (agreement.id === id) return { ...agreement, accepted: true };\r\n            else return agreement;\r\n          })\r\n        );\r\n        setOpenConfirmAgreementModal(false);\r\n        refetch();\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleReject = () => {\r\n    rejectCompanyAgreement({ variables: { id } }).then((data) => {\r\n      if (data) {\r\n        enqueueSnackbar(\"Odrzucono pomyślnie\", { variant: \"success\" });\r\n        setAgreements(\r\n          agreements.map((agreement) => {\r\n            if (agreement.id === id) return { ...agreement, accepted: false };\r\n            else return agreement;\r\n          })\r\n        );\r\n        setOpenRejectModal(false);\r\n        refetch();\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LoadingSpinner global />}\r\n      <Container className={css.container}>\r\n        <div className={css.block}>\r\n          <div className={css.avatar}>\r\n            {\" \"}\r\n            <Avatar style={{ backgroundColor: Student.color }}>\r\n              {Student.first_name.charAt(0)}\r\n              {Student.last_name.charAt(0)}\r\n            </Avatar>\r\n            <h2>{`${Student.first_name} ${Student.last_name}`}</h2>\r\n          </div>\r\n\r\n          <span>\r\n            <span>Okres wykonywania praktyki:</span> Od{\" \"}\r\n            {dayjs(from).format(\"DD/MM/YYYY\")} do{\" \"}\r\n            {dayjs(to).format(\"DD/MM/YYYY\")}\r\n          </span>\r\n          <span>\r\n            <span>Numer indeksu: </span> {Student.index_number}\r\n          </span>\r\n          <span>\r\n            <span>Email:</span> {Student.email}\r\n          </span>\r\n          <div className={css.buttons}>\r\n            {!company_accepted && (\r\n              <button\r\n                onClick={() => {\r\n                  setOpenConfirmAgreementModal(true);\r\n                }}\r\n              >\r\n                Zatwierdź\r\n              </button>\r\n            )}\r\n            {company_accepted === null && (\r\n              <button preset=\"red\" onClick={() => setOpenRejectModal(true)}>\r\n                Odrzuć\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className={css.block}>\r\n          <h3>Dokumenty</h3>\r\n          <div className={css.agreements}>\r\n            {PracticeAgreement && (\r\n              <button\r\n                onClick={() => {\r\n                  setIsLoading(true);\r\n                  return fetch(`${API_URL}/uploads/${PracticeAgreement.id}`, {\r\n                    headers: new Headers({\r\n                      Authorization: token,\r\n                    }),\r\n                  })\r\n                    .then((response) => response.blob())\r\n                    .then((blob) => {\r\n                      const url = window.URL.createObjectURL(blob);\r\n                      window.open(url);\r\n                      setIsLoading(false);\r\n                    })\r\n                    .catch((error) => {\r\n                      console.error(error);\r\n                      setIsLoading(false);\r\n                    });\r\n                }}\r\n              >\r\n                Umowa o praktyki\r\n              </button>\r\n            )}\r\n            {PersonalDataAgreement && (\r\n              <button\r\n                onClick={() => {\r\n                  setIsLoading(true);\r\n                  return fetch(\r\n                    `${API_URL}/uploads/${PersonalDataAgreement.id}`,\r\n                    {\r\n                      headers: new Headers({\r\n                        Authorization: token,\r\n                      }),\r\n                    }\r\n                  )\r\n                    .then((response) => response.blob())\r\n                    .then((blob) => {\r\n                      const url = window.URL.createObjectURL(blob);\r\n                      window.open(url);\r\n                      setIsLoading(false);\r\n                    })\r\n                    .catch((error) => {\r\n                      console.error(error);\r\n                      setIsLoading(false);\r\n                    });\r\n                }}\r\n              >\r\n                Umowa o danych osobowych\r\n              </button>\r\n            )}\r\n            {InternshipJournal && (\r\n              <button\r\n                onClick={() => {\r\n                  setIsLoading(true);\r\n                  return fetch(`${API_URL}/uploads/${InternshipJournal.id}`, {\r\n                    headers: new Headers({\r\n                      Authorization: token,\r\n                    }),\r\n                  })\r\n                    .then((response) => response.blob())\r\n                    .then((blob) => {\r\n                      const url = window.URL.createObjectURL(blob);\r\n                      window.open(url);\r\n                      setIsLoading(false);\r\n                    })\r\n                    .catch((error) => {\r\n                      console.error(error);\r\n                      setIsLoading(false);\r\n                    });\r\n                }}\r\n              >\r\n                Dziennik\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Container>\r\n      {openRejectModal && (\r\n        <ConfirmModal\r\n          open={openRejectModal}\r\n          setOpenModal={setOpenRejectModal}\r\n          onDecline={() => setOpenRejectModal(false)}\r\n          onConfirm={handleReject}\r\n        >\r\n          Czy na pewno chcesz odrzucić tą umowe?\r\n          <br />\r\n          Tej operacji nie da się cofnąć.\r\n        </ConfirmModal>\r\n      )}\r\n      {openConfirmAgreementModal && (\r\n        <ConfirmModal\r\n          open={openConfirmAgreementModal}\r\n          setOpenModal={setOpenConfirmAgreementModal}\r\n          onDecline={() => setOpenConfirmAgreementModal(false)}\r\n          onConfirm={handleConfirm}\r\n        >\r\n          Czy na pewno chcesz zatwierdzić tę umowę?\r\n          <br />\r\n          Tej operacji nie da się cofnąć.\r\n        </ConfirmModal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CompanyAgreement;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport Tabs from \"@components/Tabs\";\r\nimport useAuth from \"@hooks/useAuth\";\r\nimport USER_TYPES from \"@config/userTypes\";\r\nimport Page from \"@components/Page\";\r\nimport { AGREEMENTS } from \"./queries\";\r\nimport css from \"./AgreementPage.module.css\";\r\nimport CompanyAgreement from \"@components/CompanyAgreement\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport SearchInput from \"@components/SearchInput\";\r\nimport searchHelper from \"@utility/searchHelper\";\r\nimport YearPicker from \"@components/YearPicker\";\r\nimport { globalDatePickerValueAtom } from \"@config/userRecoilAtoms\";\r\n\r\nconst AgreementPage = () => {\r\n  const { userType } = useAuth();\r\n  const [yearFilter, setYearFilter] = useRecoilState(globalDatePickerValueAtom);\r\n  const { loading, error, data, refetch } = useQuery(AGREEMENTS, {\r\n    variables: { year: yearFilter },\r\n  });\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [agreements, setAgreements] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (data) setAgreements(data.agreements);\r\n  }, [data]);\r\n\r\n  const getAgreements = (accepted) => {\r\n    return (\r\n      <>\r\n        {agreements.map((agreement) => {\r\n          if (\r\n            !searchHelper(\r\n              [\r\n                agreement.Student.index_number,\r\n                agreement.Student.first_name,\r\n                agreement.Student.last_name,\r\n                agreement.company_name,\r\n                agreement.email,\r\n                agreement.Student.email,\r\n              ],\r\n              search\r\n            )\r\n          )\r\n            return null;\r\n          return (\r\n            (accepted\r\n              ? agreement.company_accepted\r\n              : agreement.company_accepted === null) && (\r\n              <CompanyAgreement\r\n                key={agreement.id}\r\n                {...agreement}\r\n                agreements={agreements}\r\n                setAgreements={setAgreements}\r\n                refetch={refetch}\r\n              />\r\n            )\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  };\r\n\r\n  if (userType !== USER_TYPES.company) return <Redirect to=\"/\" />;\r\n  if (loading) return <LoadingSpinner global />;\r\n  return (\r\n    <>\r\n      {loading && <LoadingSpinner global />}\r\n      <Page title=\"Umowy\">\r\n        <div className={css.tabs}>\r\n          <Tabs\r\n            value={tabValue}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            onChange={(event, newValue) => setTabValue(newValue)}\r\n          >\r\n            <Tabs.Tab label=\"Zatwierdzone\" />\r\n            <Tabs.Tab label=\"Oczekujące\" />\r\n          </Tabs>\r\n          <div>\r\n            <YearPicker\r\n              className={css.yearPicker}\r\n              onChange={setYearFilter}\r\n              year={yearFilter}\r\n            />\r\n            <SearchInput\r\n              className={css.searchInput}\r\n              value={search}\r\n              onChange={(event) => setSearch(event.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={css.agreements}>\r\n          {tabValue === 0 && getAgreements(true)}\r\n          {tabValue === 1 && getAgreements(false)}\r\n        </div>\r\n        {/*}\r\n        {tabValue === 1 && <Companies />} */}\r\n      </Page>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AgreementPage;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_COMPANY = gql`\r\n  query meCompany {\r\n    meCompany {\r\n      id\r\n      email\r\n      phone\r\n      name\r\n      first_name\r\n      last_name\r\n      color\r\n      city\r\n      address\r\n      phone\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { Switch, Route, useHistory } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\n\r\nimport css from \"./Company.module.css\";\r\nimport AnnouncementPage from \"./AnnouncementPage\";\r\nimport AgreementPage from \"./AgreementPage\";\r\nimport NotFound from \"@components/NotFound\";\r\nimport Profile from \"../Profile\";\r\nimport { companyAtom } from \"@config/userRecoilAtoms\";\r\nimport { GET_COMPANY } from \"./queries.js\";\r\n\r\nconst Company = () => {\r\n  const [company, setCompany] = useRecoilState(companyAtom);\r\n  const [getCompany, { data }] = useLazyQuery(GET_COMPANY);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!company) {\r\n      getCompany();\r\n    }\r\n  }, [company, getCompany]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      if (!data.meCompany) history.push(\"/logout\");\r\n      setCompany(data.meCompany);\r\n    }\r\n  }, [data, setCompany]);\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <AnnouncementPage />\r\n        </Route>\r\n        {/* <Route exact path=\"/reportpractice\">\r\n              <ReportPractice />\r\n            </Route>*/}\r\n        <Route exact path=\"/agreements\">\r\n          <AgreementPage />\r\n        </Route>\r\n        <Route exact path=\"/profile\">\r\n          <Profile />\r\n        </Route>\r\n        <Route>\r\n          <NotFound />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Company;\r\n","import React, { useState } from \"react\";\r\nimport css from \"./ActionMenu.module.css\";\r\n\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport const Item = React.forwardRef(({ onClick, children }, ref) => {\r\n  return <MenuItem onClick={onClick}>{children}</MenuItem>;\r\n});\r\n\r\nexport const ActionMenu = React.forwardRef(\r\n  ({ children, closeMenu }, anchorEl) => {\r\n    return (\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={closeMenu}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n        transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n      >\r\n        {children}\r\n      </Menu>\r\n    );\r\n  }\r\n);\r\n\r\nexport const useMenu = () => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const openMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const closeMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return [anchorEl, openMenu, closeMenu];\r\n};\r\n\r\nActionMenu.Item = Item;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport css from \"./Navbar.module.css\";\r\nimport Logo from \"@assets/Logo.jsx\";\r\nimport { ActionMenu, useMenu } from \"@components/ActionMenu\";\r\nimport {\r\n  practiceSuperviserAtom,\r\n  companyAtom,\r\n  studentAtom,\r\n} from \"../../config/userRecoilAtoms\";\r\n\r\nconst Navbar = () => {\r\n  const [anchorEl, openMenu, closeMenu] = useMenu();\r\n  const [practiceSuperviser] = useRecoilState(practiceSuperviserAtom);\r\n  const [company] = useRecoilState(companyAtom);\r\n  const [student] = useRecoilState(studentAtom);\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <div>\r\n        <Link to=\"/\" className={css.logo}>\r\n          <Logo />\r\n        </Link>\r\n\r\n        <div className={css.menu}>\r\n          <Link to=\"/\">Ogłoszenia praktyk</Link>\r\n          {practiceSuperviser && <Link to=\"/users\">Użytkownicy</Link>}\r\n          {(practiceSuperviser || company) && (\r\n            <Link to=\"/agreements\">Umowy</Link>\r\n          )}\r\n          {student && <Link to=\"/mypractice\">Moja praktyka</Link>}\r\n          {/* <Link to=\"/agreement\">Umowy</Link> */}\r\n        </div>\r\n      </div>\r\n      <div className={css.menu}>\r\n        <a onClick={openMenu} className={css.user}>\r\n          {practiceSuperviser && practiceSuperviser.email}\r\n          {company && company.email}\r\n          {student && student.email}\r\n        </a>\r\n        <ActionMenu ref={anchorEl} closeMenu={closeMenu}>\r\n          <ActionMenu.Item\r\n            onClick={() => {\r\n              closeMenu();\r\n              history.push(\"/profile\");\r\n            }}\r\n          >\r\n            Profil\r\n          </ActionMenu.Item>\r\n          <ActionMenu.Item\r\n            onClick={() => {\r\n              closeMenu();\r\n              history.push(\"/logout\");\r\n            }}\r\n          >\r\n            Wyloguj\r\n          </ActionMenu.Item>\r\n        </ActionMenu>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nimport Navbar from \"@components/Navbar\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport useAuth from \"@hooks/useAuth\";\r\nimport { withApollo } from \"@apollo/client/react/hoc\";\r\n\r\nconst Logout = ({ client }) => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"userType\");\r\n  client.clearStore();\r\n  return <Redirect to=\"/login\" push={true} />;\r\n};\r\n\r\nexport default withApollo(Logout);\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const CONFIRM_INVITATION_TOKEN = gql`\r\n  mutation confirmInvitationToken($token: String!) {\r\n    confirmInvitationToken(token: $token) {\r\n      email\r\n      userType\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REGISTER_COMPANY = gql`\r\n  mutation registerCompany(\r\n    $token: String!\r\n    $first_name: String!\r\n    $last_name: String!\r\n    $password: String!\r\n    $name: String!\r\n    $city: String!\r\n    $address: String!\r\n    $phone: String\r\n    $confirm_password: String!\r\n  ) {\r\n    registerCompany(\r\n      token: $token\r\n      first_name: $first_name\r\n      last_name: $last_name\r\n      password: $password\r\n      name: $name\r\n      city: $city\r\n      phone: $phone\r\n      confirm_password: $confirm_password\r\n      address: $address\r\n    ) {\r\n      token\r\n      company {\r\n        id\r\n        email\r\n        first_name\r\n        last_name\r\n        color\r\n        name\r\n        city\r\n        address\r\n        phone\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REGISTER_STUDENT = gql`\r\n  mutation registerStudent(\r\n    $token: String!\r\n    $first_name: String!\r\n    $last_name: String!\r\n    $password: String!\r\n    $confirm_password: String!\r\n    $index_number: Int!\r\n  ) {\r\n    registerStudent(\r\n      token: $token\r\n      first_name: $first_name\r\n      last_name: $last_name\r\n      password: $password\r\n      confirm_password: $confirm_password\r\n      index_number: $index_number\r\n    ) {\r\n      token\r\n      student {\r\n        id\r\n        email\r\n        first_name\r\n        last_name\r\n        color\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REGISTER_PRACTICE_SUPERVISER = gql`\r\n  mutation registerPracticeSuperviser(\r\n    $token: String!\r\n    $first_name: String!\r\n    $last_name: String!\r\n    $password: String!\r\n    $confirm_password: String!\r\n  ) {\r\n    registerPracticeSuperviser(\r\n      token: $token\r\n      first_name: $first_name\r\n      last_name: $last_name\r\n      password: $password\r\n      confirm_password: $confirm_password\r\n    ) {\r\n      token\r\n      practiceSuperviser {\r\n        id\r\n        email\r\n        first_name\r\n        last_name\r\n        color\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Logo from \"@assets/Logo\";\r\nimport css from \"./Statement.module.css\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\n\r\nconst Statement = ({ children, title, isLoading }) => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className={css.outerContainer}>\r\n      <div className={css.container}>\r\n        <div className={css.header}>\r\n          <h2>{title}</h2>\r\n          <Logo onClick={() => history.push(\"/\")} />\r\n        </div>\r\n        <div className={css.content}>\r\n          <p>{children}</p>\r\n          {isLoading && <LoadingSpinner />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statement;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, Redirect, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport css from \"./Invitation.module.css\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport {\r\n  CONFIRM_INVITATION_TOKEN,\r\n  REGISTER_COMPANY,\r\n  REGISTER_PRACTICE_SUPERVISER,\r\n  REGISTER_STUDENT,\r\n} from \"./queries\";\r\nimport useSnackGraphql from \"@hooks/useSnackGraphql\";\r\nimport Input from \"@components/Input\";\r\nimport USER_TYPES from \"@config/userTypes\";\r\nimport Logo from \"@assets/Logo\";\r\nimport Statement from \"@components/Statement\";\r\nimport useAuth from \"@hooks/useAuth\";\r\n\r\nconst Invitation = () => {\r\n  const { token } = useParams();\r\n  const history = useHistory();\r\n  const [getInvitationConfirm, { loading }] = useMutation(\r\n    CONFIRM_INVITATION_TOKEN\r\n  );\r\n  const [invitationError, setInvitationError] = useState(false);\r\n  const [registerStudent] = useMutation(REGISTER_STUDENT);\r\n  const [registerCompany] = useMutation(REGISTER_COMPANY);\r\n  const [registerPracticeSuperviser] = useMutation(\r\n    REGISTER_PRACTICE_SUPERVISER\r\n  );\r\n  const [invitationData, setInvitationData] = useState(null);\r\n  const [registerSuccess, setRegisterSuccess] = useState(false);\r\n  const [enqueueError, enqueueSnackbar] = useSnackGraphql();\r\n  const { register, handleSubmit, watch, errors } = useForm();\r\n  const { removeToken, removeUserType } = useAuth();\r\n\r\n  const succesRegister = () => {\r\n    enqueueSnackbar(\"Zarejestrowano pomyślnie\", {\r\n      variant: \"success\",\r\n    });\r\n\r\n    setRegisterSuccess(true);\r\n\r\n    setTimeout(() => {\r\n      removeToken();\r\n      removeUserType();\r\n      history.push(\"/login\");\r\n    }, 5000);\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    if (invitationData) {\r\n      const { userType } = invitationData;\r\n      switch (userType) {\r\n        case USER_TYPES.student:\r\n          registerStudent({\r\n            variables: {\r\n              ...data,\r\n              index_number: parseInt(data.index_number),\r\n              token,\r\n            },\r\n          })\r\n            .then((data) => {\r\n              data && succesRegister();\r\n            })\r\n            .catch((error) => {\r\n              enqueueError(error);\r\n            });\r\n          break;\r\n        case USER_TYPES.company:\r\n          registerCompany({ variables: { ...data, token } })\r\n            .then((data) => {\r\n              data && succesRegister();\r\n            })\r\n            .catch((error) => {\r\n              enqueueError(error);\r\n            });\r\n          break;\r\n        case USER_TYPES.practiceSuperviser:\r\n          registerPracticeSuperviser({ variables: { ...data, token } })\r\n            .then((data) => {\r\n              data && succesRegister();\r\n            })\r\n            .catch((error) => {\r\n              enqueueError(error);\r\n            });\r\n          break;\r\n        default:\r\n          console.log(\"UserType error\");\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      getInvitationConfirm({ variables: { token } })\r\n        .then(({ data }) => {\r\n          console.log(data);\r\n          if (data.confirmInvitationToken) {\r\n            setInvitationData(data.confirmInvitationToken);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setInvitationError(true);\r\n          enqueueError(err);\r\n        });\r\n    }\r\n  }, [token]);\r\n\r\n  if (loading) return <LoadingSpinner />;\r\n  if (registerSuccess) {\r\n    return (\r\n      <>\r\n        <Statement title=\"Zarejestrowano pomyślnie\" isLoading={true}>\r\n          Zarejestrowano pomyślnie. <br />\r\n          za chwilę nastąpi przekierowanie do strony logowania.\r\n        </Statement>\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (invitationError) {\r\n    return (\r\n      <Statement title=\"Wystąpił błąd\">\r\n        Link z zaproszeniem wygasł, lub został wykorzystany, skontaktuj się z\r\n        opiekunem praktyk.\r\n      </Statement>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={css.outerContainer}>\r\n      <div className={css.container}>\r\n        <div className={css.header}>\r\n          <h2>Stwórz konto</h2>\r\n          <Logo />\r\n        </div>\r\n        <div className={css.content}>\r\n          <div>\r\n            <label>Adres email</label>\r\n            <br />\r\n            <span>{invitationData?.email}</span>\r\n            <Input\r\n              name=\"first_name\"\r\n              inputRef={register({ required: \"Musisz podać imię\" })}\r\n              labelOnTop\r\n              label=\"Imię\"\r\n            />\r\n            {errors.first_name && (\r\n              <Alert variant=\"filled\" severity=\"error\">\r\n                {errors.first_name.message}\r\n              </Alert>\r\n            )}\r\n            <Input\r\n              name=\"last_name\"\r\n              inputRef={register({ required: \"Musisz podać nazwisko\" })}\r\n              labelOnTop\r\n              label=\"Nazwisko\"\r\n            />\r\n            {errors.last_name && (\r\n              <Alert variant=\"filled\" severity=\"error\">\r\n                {errors.last_name.message}\r\n              </Alert>\r\n            )}\r\n            <Input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              inputRef={register({\r\n                required: \"Musisz podać hasło\",\r\n                minLength: {\r\n                  value: 8,\r\n                  message: \"Hasło musi mieć przynajmniej 8 znaków\",\r\n                },\r\n              })}\r\n              labelOnTop\r\n              label=\"Hasło\"\r\n            />\r\n            {errors.password && (\r\n              <Alert variant=\"filled\" severity=\"error\">\r\n                {errors.password.message}\r\n              </Alert>\r\n            )}\r\n            <Input\r\n              name=\"confirm_password\"\r\n              type=\"password\"\r\n              inputRef={register({\r\n                validate: (value) =>\r\n                  value === watch(\"password\") || \"Hasła się nie zgadzają\",\r\n              })}\r\n              labelOnTop\r\n              label=\"Powtórz hasło\"\r\n            />\r\n            {errors.confirm_password && (\r\n              <Alert variant=\"filled\" severity=\"error\">\r\n                {errors.confirm_password.message}\r\n              </Alert>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <label>Typ konta</label>\r\n            <br />\r\n            {invitationData?.userType === USER_TYPES.student && (\r\n              <>\r\n                <span>Student</span>\r\n                <Input\r\n                  name=\"index_number\"\r\n                  inputRef={register({\r\n                    required: \"Musisz podać numer indeksu\",\r\n                  })}\r\n                  labelOnTop\r\n                  label=\"Numer indeksu*\"\r\n                />\r\n                {errors.index_number && (\r\n                  <Alert variant=\"filled\" severity=\"error\">\r\n                    {errors.index_number.message}\r\n                  </Alert>\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            {invitationData?.userType === USER_TYPES.company && (\r\n              <>\r\n                <span>Firma</span>\r\n                <Input\r\n                  name=\"name\"\r\n                  inputRef={register({\r\n                    required: \"Musisz podać nazwę firmy\",\r\n                  })}\r\n                  labelOnTop\r\n                  label=\"Nazwa firmy*\"\r\n                />\r\n                {errors.name && (\r\n                  <Alert variant=\"filled\" severity=\"error\">\r\n                    {errors.name.message}\r\n                  </Alert>\r\n                )}\r\n                <Input\r\n                  name=\"city\"\r\n                  inputRef={register({\r\n                    required: \"Musisz podać miejscowość i kod pocztowy\",\r\n                  })}\r\n                  labelOnTop\r\n                  label=\"Miejscowość i kod pocztowy*\"\r\n                />\r\n                {errors.city && (\r\n                  <Alert variant=\"filled\" severity=\"error\">\r\n                    {errors.city.message}\r\n                  </Alert>\r\n                )}\r\n                <Input\r\n                  name=\"address\"\r\n                  inputRef={register({\r\n                    required: \"Musisz podać adres\",\r\n                  })}\r\n                  labelOnTop\r\n                  label=\"Adres*\"\r\n                />\r\n                {errors.address && (\r\n                  <Alert variant=\"filled\" severity=\"error\">\r\n                    {errors.address.message}\r\n                  </Alert>\r\n                )}\r\n                <Input\r\n                  name=\"phone\"\r\n                  inputRef={register}\r\n                  labelOnTop\r\n                  label=\"Telefon\"\r\n                />\r\n              </>\r\n            )}\r\n            {invitationData?.userType === USER_TYPES.practiceSuperviser && (\r\n              <>\r\n                <span>Opiekun praktyk</span>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className={css.footer}>\r\n          <button onClick={handleSubmit(onSubmit)}>Stwórz konto</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Invitation;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Login from \"@bundles/Login\";\r\nimport Student from \"@bundles/Student\";\r\nimport \"../styles/globals.css\";\r\nimport useLocalStorage from \"@hooks/useLocalStorage\";\r\nimport PrivateRoute from \"../routes/PrivateRoute\";\r\nimport ProtectedRoute from \"../routes/ProtectedRoute\";\r\nimport PracticeSuperviser from \"./PracticeSuperviser\";\r\nimport Company from \"./Company\";\r\nimport Layout from \"@components/Layout\";\r\nimport Logout from \"./Logout\";\r\nimport USER_TYPES from \"@config/userTypes\";\r\nimport Invitation from \"@bundles/Invitation\";\r\nimport Background from \"@assets/Background.jpg\";\r\n\r\nconst Application = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n\r\n        <Route path=\"/logout\">\r\n          <Logout />\r\n        </Route>\r\n        <Route path=\"/invitation/:token\">\r\n          <Invitation />\r\n        </Route>\r\n\r\n        <ProtectedRoute path=\"/\">\r\n          <Layout>\r\n            <PrivateRoute userType={USER_TYPES.student}>\r\n              <Student />\r\n            </PrivateRoute>\r\n            <PrivateRoute userType={USER_TYPES.practiceSuperviser}>\r\n              <PracticeSuperviser />\r\n            </PrivateRoute>\r\n            <PrivateRoute userType={USER_TYPES.company}>\r\n              <Company />\r\n            </PrivateRoute>\r\n          </Layout>\r\n        </ProtectedRoute>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Application;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n  ApolloProvider,\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  HttpLink,\r\n  from,\r\n  ApolloLink,\r\n} from \"@apollo/client\";\r\nimport { onError } from \"@apollo/client/link/error\";\r\nimport { SnackbarProvider } from \"notistack\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nimport Application from \"@bundles\";\r\n\r\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\r\n  if (graphQLErrors)\r\n    graphQLErrors.map(({ message, locations, path, extensions }) => {\r\n      console.log(\r\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\r\n      );\r\n      if (extensions.code === \"UNAUTHENTICATED\") {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"userType\");\r\n        window.location.reload();\r\n      }\r\n    });\r\n  if (networkError) console.log(`[Network error]: ${networkError}`);\r\n});\r\n\r\nconsole.log(process.env.NODE_ENV);\r\n\r\nconst authMiddleware = new ApolloLink((operation, forward) => {\r\n  // add the authorization to the headers\r\n  const token = localStorage.getItem(\"token\");\r\n  operation.setContext({\r\n    headers: {\r\n      authorization: token?.replace(/['\"]+/g, \"\") || \"\",\r\n    },\r\n  });\r\n\r\n  return forward(operation);\r\n});\r\n\r\nconst additiveLink = from([\r\n  errorLink,\r\n  authMiddleware,\r\n  // new HttpLink({\r\n  //   uri:\r\n  // process.env.NODE_ENV === \"development\"\r\n  //   ? \"http://localhost:4001/graphql\"\r\n  //   : \"https://sep-praca-dyplomowa.herokuapp.com/graphql\",\r\n  // }),\r\n  createUploadLink({\r\n    uri:\r\n      process.env.NODE_ENV === \"development\"\r\n        ? \"http://localhost:4001/graphql\"\r\n        : \"https://sep-praca-dyplomowa.herokuapp.com/graphql\",\r\n  }),\r\n]);\r\n\r\nconst client = new ApolloClient({\r\n  link: additiveLink,\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <RecoilRoot>\r\n    <SnackbarProvider maxSnack={3}>\r\n      <React.StrictMode>\r\n        <ApolloProvider client={client}>\r\n          <Application />\r\n        </ApolloProvider>\r\n      </React.StrictMode>\r\n    </SnackbarProvider>\r\n  </RecoilRoot>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Practice_container__3ikl3\",\"block\":\"Practice_block__19GLE\",\"marginTop\":\"Practice_marginTop__S0mAm\",\"buttons\":\"Practice_buttons__1iU_u\",\"send\":\"Practice_send__2yKwX\",\"companyAvatar\":\"Practice_companyAvatar__3ADOQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__zWpwB\",\"formGroup\":\"Profile_formGroup__2J9_s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Agreement_container__GpBhM\",\"block\":\"Agreement_block__X0ViP\",\"alignCenter\":\"Agreement_alignCenter__11x-9\",\"avatar\":\"Agreement_avatar__1EFAV\",\"buttons\":\"Agreement_buttons__14f8i\",\"agreements\":\"Agreement_agreements__3IZuz\",\"companyAvatar\":\"Agreement_companyAvatar__UskE2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__1nz1X\",\"content\":\"Login_content__2clW6\",\"form\":\"Login_form__1zFVh\",\"title\":\"Login_title__19yIg\",\"logIn\":\"Login_logIn__1fntK\",\"page\":\"Login_page__ZL9j9\"};"],"sourceRoot":""}