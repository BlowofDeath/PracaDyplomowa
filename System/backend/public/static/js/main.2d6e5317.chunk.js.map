{"version":3,"sources":["components/ReportPracticeModal/ReportPracticeModal.module.css","components/Modal/Modal.module.css","components/EditAnnouncementModal/EditAnnouncementModal.module.css","components/AddAnnouncementModal/AddAnnouncementModal.module.css","components/Navbar/Navbar.module.css","bundles/Invitation/Invitation.module.css","components/Page/Page.module.css","components/AddUserModal/AddUserModal.module.css","components/Statement/Statement.module.css","components/Input/Input.module.css","components/Select/Select.module.css","bundles/Student/MyPractice/Journal/Journal.module.css","components/Textarea/Textarea.module.css","components/Agreement/Agreement.module.css","components/Practice/Practice.module.css","components/Announcement/Announcement.module.css","components/Tabs/Tabs.module.css","bundles/PracticeSuperviser/AgreementPage/AgreementPage.module.css","components/Student/Student.module.css","components/Company/Student.module.css","components/Container/Container.module.css","components/ConfirmModal/ConfirmModal.module.css","bundles/PracticeSuperviser/AnnouncementPage/AnnouncementPage.module.css","bundles/PracticeSuperviser/UsersPage/Students/Students.module.css","components/CompanyAvatar/CompanyAvatar.module.css","bundles/PracticeSuperviser/UsersPage/Companies/Companies.module.css","bundles/PracticeSuperviser/UsersPage/UsersPage.module.css","bundles/Company/AnnouncementPage/AnnouncementPage.module.css","bundles/Student/MyPractice/MyPractice.module.css","assets/Background.jpg","components/Input/index.jsx","components/Select/index.jsx","assets/Logo.jsx","bundles/Login/queries.js","hooks/useAuth.js","hooks/useSnackGraphql.js","config/userTypes.js","config/userRecoilAtoms.js","bundles/Login/index.jsx","components/Container/index.jsx","icons/Accept.jsx","icons/Decline.jsx","components/Practice/index.jsx","components/Page/index.jsx","components/LoadingSpinner/index.jsx","components/Modal/index.jsx","components/ReportPracticeModal/queries.js","components/ReportPracticeModal/index.jsx","bundles/Student/MyPractice/queries.js","bundles/Student/MyPractice/Journal/queries.js","components/FileUploadWrapper/index.jsx","bundles/Student/MyPractice/Journal/index.jsx","bundles/Student/MyPractice/index.jsx","components/ConfirmModal/index.jsx","components/Textarea/index.jsx","components/EditAnnouncementModal/queries.js","components/EditAnnouncementModal/index.jsx","components/Announcement/queries.js","components/Announcement/index.jsx","bundles/Student/AnnouncementPage/queries.js","bundles/Student/AnnouncementPage/index.jsx","bundles/Student/queries.js","bundles/Student/index.jsx","hooks/useLocalStorage.js","routes/PrivateRoute.jsx","routes/ProtectedRoute.jsx","bundles/PracticeSuperviser/AnnouncementPage/queries.js","components/AddAnnouncementModal/queries.js","components/AddAnnouncementModal/index.jsx","components/Tabs/index.jsx","bundles/PracticeSuperviser/AnnouncementPage/index.jsx","bundles/PracticeSuperviser/AgreementPage/queries.js","components/Agreement/queries.js","components/Agreement/index.jsx","bundles/PracticeSuperviser/AgreementPage/index.jsx","components/Student/index.jsx","bundles/PracticeSuperviser/UsersPage/Students/queries.js","bundles/PracticeSuperviser/UsersPage/Students/index.jsx","components/CompanyAvatar/index.jsx","components/Company/index.jsx","bundles/PracticeSuperviser/UsersPage/Companies/queries.js","bundles/PracticeSuperviser/UsersPage/Companies/index.jsx","components/AddUserModal/queries.js","components/AddUserModal/index.jsx","bundles/PracticeSuperviser/UsersPage/index.jsx","bundles/PracticeSuperviser/queries.js","bundles/PracticeSuperviser/index.jsx","bundles/Company/AnnouncementPage/queries.js","bundles/Company/AnnouncementPage/index.jsx","bundles/Company/queries.js","bundles/Company/index.jsx","components/ActionMenu/index.jsx","components/Navbar/index.jsx","components/Layout/index.jsx","bundles/Logout/index.jsx","bundles/Invitation/queries.js","components/Statement/index.jsx","bundles/Invitation/index.jsx","bundles/index.jsx","index.js","bundles/Login/Login.module.css"],"names":["module","exports","Input","type","id","name","onChange","inputRef","value","label","className","labelOnTop","bright","placeholder","defaultValue","clsx","css","container","ref","Select","options","map","key","Logo","xmlns","width","height","fill","viewBox","filter","d","fillRule","clipRule","x","y","maskUnits","mask","fillOpacity","colorInterpolationFilters","filterUnits","floodOpacity","result","in","values","dy","stdDeviation","in2","dx","k2","k3","operator","x1","x2","y1","y2","gradientUnits","stopColor","offset","LOGIN_STUDENT","gql","LOGIN_PRACTICE_SUPERVISER","LOGIN_COMPANY","useAuth","useState","localStorage","getItem","token","setTokenValue","userType","setUserTypeValue","setToken","setItem","setUserType","removeToken","undefined","removeItem","removeUserType","useSnackGraphql","variant","useSnackbar","enqueueSnackbar","enqueueError","errors","graphQLErrors","message","USER_TYPES","student","practiceSuperviser","company","studentAtom","atom","default","companyAtom","practiceSuperviserAtom","Login","useForm","register","handleSubmit","showGraphqlErrors","useRecoilState","setStudent","setCompany","setPracticeSupervisor","useMutation","loginStudent","loginPracticeSuperviser","loginCompany","to","page","content","title","form","required","validate","validator","isEmail","email","Alert","severity","minLength","password","select","preset","logIn","onClick","data","variables","then","a","catch","Container","children","IconAccept","IconDecline","Practice","company_name","address","city","phone","from","accepted","dictionaryUrl","history","useHistory","dayjs","format","buttons","push","Page","button","header","LoadingSpinner","props","CircularProgress","CustomModal","open","setOpenModal","isLoading","ReactDOM","createPortal","backdrop","modal","e","stopPropagation","footer","document","body","CREATE_PRACTICE_AGREEMENT","ReportPracticeModal","refetch","setIsLoading","createPracticeAgreement","Modal","err","console","log","inputGroup","fromToWrapper","MY_PRACTICE_AGREEMENTS","CREATE_JOURNAL","GET_JOURNAL","FileUploadWrapper","onFileSelect","accept","fileInput","useRef","target","files","mergeRefs","style","display","React","cloneElement","current","click","Journal","createJournal","agreementId","useParams","useLazyQuery","getJournal","loading","file","setFile","useEffect","PracticeAgreementId","journalId","wrapper","href","fileHandler","MyPractice","openModal","useQuery","error","match","useRouteMatch","exact","path","myPracticeAgreements","practice","ConfirmModal","onConfirm","onDecline","text","Textarea","EDIT_ANNOUNCEMENT","EditAnnouncementModal","editAnnouncement","useRecoilValue","announcement","fromDate","toDate","uniqueData","slots","parseInt","technologies","description","DELETE_PRACTICE_ANNOUNCEMENT","CONFIRM_PRACTICE_ANNOUNCEMENT","Announcement","CompanyId","announcements","setAnnouncements","openDeleteModal","setOpenDeleteModal","openEditModal","setOpenEditModal","confirmPracticeAnnouncement","deletePracticeAnnouncement","handleDelete","ANNOUNCEMENTS","AnnouncementPage","practiceAnnouncements","index","GET_STUDENT","Student","getStudent","meStudent","useLocalStorage","PrivateRoute","rest","userTypeStorage","render","location","ProtectedRoute","pathname","state","clearUserData","ADD_ANNOUNCEMENT","AddAnnouncementModal","addAnnouncement","CustomTabs","Tabs","tabs","Tab","tab","tabValue","setTabValue","indicatorColor","textColor","event","newValue","AGREEMENTS","DELETE_PRACTICE_AGREEMENT","CONFIRM_PRACTICE_AGREEMENT","CONFIRM_JOURNAL","Agreement","color","agreements","setAgreements","InternshipJournal","confirmPracticeAgreement","deletePracticeAgreement","confirmJournal","openConfirmModal","setOpenConfirmModal","agreement","avatar","Avatar","backgroundColor","first_name","charAt","last_name","index_number","AgreementPage","GET_STUDENTS","Students","studentsList","students","CompanyAvatar","companyAvatar","GET_COMPANIES","Companies","companiesList","companies","CREATE_INVITE","createInvite","UsersPage","AddUserModal","GET_PRACTICE_SUPERVISER","PracticeSuperviser","setPracticeSuperviser","getPracticeSuperviser","mePracticeSuperviser","GET_COMPANY","Company","getCompany","meCompany","Item","forwardRef","MenuItem","ActionMenu","anchorEl","closeMenu","Menu","keepMounted","Boolean","onClose","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Navbar","setAnchorEl","currentTarget","useMenu","openMenu","logo","menu","user","Layout","withApollo","client","clearStore","CONFIRM_INVITATION_TOKEN","REGISTER_COMPANY","REGISTER_STUDENT","REGISTER_PRACTICE_SUPERVISER","Statement","outerContainer","Invitation","getInvitationConfirm","invitationError","setInvitationError","registerStudent","registerCompany","registerPracticeSuperviser","invitationData","setInvitationData","registerSuccess","setRegisterSuccess","watch","succesRegister","setTimeout","confirmInvitationToken","confirm_password","Application","errorLink","onError","networkError","locations","extensions","code","window","reload","process","authMiddleware","ApolloLink","operation","forward","setContext","headers","authorization","replace","additiveLink","createUploadLink","uri","ApolloClient","link","cache","InMemoryCache","maxSnack","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2d6e5317.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ReportPracticeModal_container__6wBTc\",\"content\":\"ReportPracticeModal_content__3CQcp\",\"fromToWrapper\":\"ReportPracticeModal_fromToWrapper__2qRPw\",\"firmName\":\"ReportPracticeModal_firmName__1gkbU\",\"inputGroup\":\"ReportPracticeModal_inputGroup__13I7J\",\"errors\":\"ReportPracticeModal_errors__3PYZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__11LlO\",\"modal\":\"Modal_modal__3GwDb\",\"content\":\"Modal_content__1IJDL\",\"header\":\"Modal_header__1iwt3\",\"footer\":\"Modal_footer__jsMCp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditAnnouncementModal_container__L55AA\",\"content\":\"EditAnnouncementModal_content__16XH5\",\"fromToWrapper\":\"EditAnnouncementModal_fromToWrapper__3mnCq\",\"firmName\":\"EditAnnouncementModal_firmName__2vXx9\",\"inputGroup\":\"EditAnnouncementModal_inputGroup__1pqDC\",\"errors\":\"EditAnnouncementModal_errors__Q5fKO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddAnnouncementModal_container__1loDP\",\"content\":\"AddAnnouncementModal_content__1wLGT\",\"fromToWrapper\":\"AddAnnouncementModal_fromToWrapper__HEBO7\",\"firmName\":\"AddAnnouncementModal_firmName__1uQkd\",\"inputGroup\":\"AddAnnouncementModal_inputGroup__2VK7n\",\"errors\":\"AddAnnouncementModal_errors__YaYSS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Navbar_container__2IM_w\",\"menu\":\"Navbar_menu__GtI4D\",\"logo\":\"Navbar_logo__3gt0f\",\"user\":\"Navbar_user__2Eim7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outerContainer\":\"Invitation_outerContainer__3ACFM\",\"container\":\"Invitation_container__G4WUd\",\"content\":\"Invitation_content__4aM9F\",\"header\":\"Invitation_header__IfbCd\",\"footer\":\"Invitation_footer__2k2vs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Page_container__6IDSy\",\"title\":\"Page_title__378_l\",\"header\":\"Page_header__2eHIW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddUserModal_container__2NwFs\",\"inputGroup\":\"AddUserModal_inputGroup__Gf-Ru\",\"errors\":\"AddUserModal_errors__1hhI5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outerContainer\":\"Statement_outerContainer__3TjUM\",\"container\":\"Statement_container__13bhY\",\"content\":\"Statement_content__7kz-o\",\"header\":\"Statement_header__1jIEw\",\"spinner\":\"Statement_spinner__pne8D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Input_container__11f5q\",\"labelOnTop\":\"Input_labelOnTop__eE9qr\",\"bright\":\"Input_bright__1FIfV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Select_container__GqU-k\",\"labelOnTop\":\"Select_labelOnTop__1EdET\",\"bright\":\"Select_bright__2XTGK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Journal_container__3Fatq\",\"fileHandler\":\"Journal_fileHandler__3B3O5\",\"wrapper\":\"Journal_wrapper__1whwk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Textarea_container__3Lepg\",\"labelOnTop\":\"Textarea_labelOnTop__ofXZv\",\"bright\":\"Textarea_bright__1co0w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Agreement_container__GpBhM\",\"alignCenter\":\"Agreement_alignCenter__11x-9\",\"avatar\":\"Agreement_avatar__1EFAV\",\"buttons\":\"Agreement_buttons__14f8i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Practice_container__3ikl3\",\"buttons\":\"Practice_buttons__1iU_u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Announcement_container__1kU6B\",\"buttons\":\"Announcement_buttons__3zy-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab\":\"Tabs_tab__uaiMj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"AgreementPage_tabs__9mkXS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Student_container__3qHts\",\"avatar\":\"Student_avatar__268K4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Student_container__1nRE4\",\"avatar\":\"Student_avatar__2rYJy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1beqY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ConfirmModal_text__9E1Ge\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"AnnouncementPage_tabs__1z4wy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"studentsList\":\"Students_studentsList__2rumC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"companyAvatar\":\"CompanyAvatar_companyAvatar__3lKtn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"companiesList\":\"Companies_companiesList__5p0Na\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"UsersPage_tabs__1TKsc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"AnnouncementPage_tabs__ISK7w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPractice_content__2gVhO\",\"fromToWrapper\":\"MyPractice_fromToWrapper__1CrN4\",\"firmName\":\"MyPractice_firmName__17kgy\"};","module.exports = __webpack_public_path__ + \"static/media/Background.31625b92.jpg\";","import React from \"react\";\r\nimport css from \"./Input.module.css\";\r\nimport clsx from \"clsx\";\r\n\r\nconst Input = ({\r\n  type,\r\n  id,\r\n  name,\r\n  onChange,\r\n  inputRef,\r\n  value,\r\n  label,\r\n  className,\r\n  labelOnTop,\r\n  bright,\r\n  placeholder,\r\n  defaultValue,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={clsx(css.container, className, labelOnTop && css.labelOnTop)}\r\n    >\r\n      {label && <label className={clsx(bright && css.bright)}>{label}</label>}\r\n      <input\r\n        placeholder={placeholder}\r\n        type={type}\r\n        id={id}\r\n        name={name}\r\n        onChange={onChange}\r\n        ref={inputRef}\r\n        value={value}\r\n        defaultValue={defaultValue}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport css from \"./Select.module.css\";\r\nimport clsx from \"clsx\";\r\n\r\nconst Select = ({\r\n  id,\r\n  name,\r\n  onChange,\r\n  inputRef,\r\n  value,\r\n  label,\r\n  className,\r\n  options,\r\n  labelOnTop,\r\n  bright,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={clsx(css.container, className, labelOnTop && css.labelOnTop)}\r\n    >\r\n      {label && <label className={clsx(bright && css.bright)}>{label}</label>}\r\n      <select\r\n        id={id}\r\n        name={name}\r\n        onChange={onChange}\r\n        ref={inputRef}\r\n        value={value}\r\n      >\r\n        {options.map(({ label, value }) => {\r\n          return (\r\n            <option key={value} value={value}>\r\n              {label}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\n\r\nfunction Logo() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"145\"\r\n      height=\"47\"\r\n      fill=\"none\"\r\n      viewBox=\"0 0 145 47\"\r\n    >\r\n      <g filter=\"url(#filter0_d)\">\r\n        <path\r\n          fill=\"#F9A03F\"\r\n          d=\"M75.035 9.195l-3.603 8.807c-1.325-.633-2.59-1.113-3.797-1.441-1.196-.34-2.25-.586-3.164-.739a18.754 18.754 0 00-3.006-.263c-1.371.023-2.531.129-3.48.316-.95.176-1.712.422-2.286.738-.562.305-.955.657-1.177 1.055a1.794 1.794 0 00-.159 1.283c.117.516.393.926.827 1.23.433.294 1.013.516 1.74.669.726.14 1.588.234 2.584.28 1.008.048 2.138.077 3.392.089.657.011 1.383.035 2.18.07a17.54 17.54 0 012.443.281c.832.14 1.635.358 2.409.65a6.624 6.624 0 012.056 1.231 5.72 5.72 0 011.46 1.986c.362.797.544 1.776.544 2.936 0 1.055-.152 1.969-.457 2.742a6.187 6.187 0 01-1.23 1.987 6.572 6.572 0 01-1.829 1.336c-.691.34-1.43.609-2.214.808-.786.2-1.594.334-2.426.404a28.821 28.821 0 01-5.291-.035 27.797 27.797 0 01-2.654-.369 41.417 41.417 0 01-2.602-.58 71.194 71.194 0 01-2.62-.773l-1.036 3.093-2.479-.72 2.268-8.684c1.054.457 2.097.867 3.129 1.23 1.043.364 2.086.674 3.128.932 1.055.246 2.116.434 3.182.563 1.067.129 2.156.193 3.27.193 1.09 0 2.021-.064 2.795-.193.773-.13 1.4-.323 1.88-.58.493-.258.85-.58 1.073-.967.222-.387.334-.838.334-1.354 0-.644-.164-1.154-.492-1.529-.329-.375-.827-.662-1.495-.861-.656-.2-1.482-.334-2.478-.405a78.794 78.794 0 00-3.463-.158c-.926-.023-1.898-.058-2.918-.105a28.062 28.062 0 01-3.006-.3 17.603 17.603 0 01-2.812-.667 7.997 7.997 0 01-2.356-1.213 5.712 5.712 0 01-1.6-1.934c-.398-.773-.597-1.716-.597-2.83 0-.996.158-1.892.475-2.69a6.634 6.634 0 011.37-2.126 8.238 8.238 0 012.075-1.582 12.444 12.444 0 012.654-1.072c.973-.282 1.998-.48 3.076-.598a26.356 26.356 0 013.358-.14c1.172.058 2.332.175 3.48.35.48.071.985.165 1.512.282.527.106 1.049.24 1.564.404.516.153 1.014.334 1.495.545.48.2.925.428 1.335.686l.756-3.428 2.883 1.16zm19.283 15.47l-8.138-.651-.317 4.254H99.75l.686-3.428h2.742l-.616 9.158-25.523.967v-6.697h5.22l-.755-11.848-4.465.299v-6.627l26.139.545v10.142l-2.742.545-.545-6.082-13.096.861-.404 5.116 7.927-.475v3.92zm16.506-9.968a48.67 48.67 0 00-2.373.721c-.738.246-1.389.486-1.951.72l-.967-4.974a67.359 67.359 0 013.656-1.02 71.705 71.705 0 013.428-.755c1.09-.211 2.121-.387 3.094-.528.973-.14 1.875-.257 2.707-.351a53.202 53.202 0 015.361-.334c1.723.023 3.229.193 4.518.51 1.289.316 2.361.761 3.217 1.335.867.575 1.517 1.266 1.951 2.075.433.808.65 1.71.65 2.707 0 1.3-.304 2.46-.914 3.48-.597 1.02-1.394 1.922-2.39 2.707-.997.774-2.139 1.442-3.428 2.004a30.593 30.593 0 01-3.955 1.424c-1.36.387-2.707.697-4.043.932a63.812 63.812 0 01-3.639.51l.035 4.816 5.942.035v4.043l-14.907.931-.105-5.08 5.256.036-1.143-15.944zm11.953-2.267c-.398 0-.861.029-1.388.088-.516.046-1.078.117-1.688.21-.609.082-1.254.188-1.933.317-.68.129-1.377.27-2.092.422l.07 9.51a43.856 43.856 0 002.672-.65c.949-.27 1.881-.58 2.795-.933a24.557 24.557 0 002.637-1.177 11.814 11.814 0 002.162-1.46c.609-.527 1.078-1.089 1.406-1.687.34-.61.469-1.254.387-1.933-.059-.492-.223-.909-.493-1.248a2.86 2.86 0 00-1.072-.844c-.433-.223-.949-.38-1.547-.475a12.157 12.157 0 00-1.916-.14z\"\r\n        ></path>\r\n      </g>\r\n      <path\r\n        fill=\"url(#paint0_linear)\"\r\n        fillRule=\"evenodd\"\r\n        d=\"M30.469 0C36.25 0 40 3.75 40 9.531V30.47C40 36.25 36.25 40 30.469 40H9.53C3.75 40 0 36.25 0 30.469V9.53C0 3.75 3.75 0 9.531 0H30.47z\"\r\n        clipRule=\"evenodd\"\r\n      ></path>\r\n      <mask\r\n        id=\"mask0\"\r\n        width=\"40\"\r\n        height=\"40\"\r\n        x=\"0\"\r\n        y=\"0\"\r\n        maskUnits=\"userSpaceOnUse\"\r\n      >\r\n        <path\r\n          fill=\"#fff\"\r\n          fillRule=\"evenodd\"\r\n          d=\"M30.469 0C36.25 0 40 3.75 40 9.531V30.47C40 36.25 36.25 40 30.469 40H9.53C3.75 40 0 36.25 0 30.469V9.53C0 3.75 3.75 0 9.531 0H30.47z\"\r\n          clipRule=\"evenodd\"\r\n        ></path>\r\n      </mask>\r\n      <g mask=\"url(#mask0)\">\r\n        <g filter=\"url(#filter1_i)\">\r\n          <path\r\n            fill=\"#000\"\r\n            fillOpacity=\"0.149\"\r\n            fillRule=\"evenodd\"\r\n            d=\"M20 31.333l12.195 9.679 10.244-.036.275-42.57-16.038.056-.158 18.503L20 31.333z\"\r\n            clipRule=\"evenodd\"\r\n          ></path>\r\n        </g>\r\n        <path fill=\"#FFDB5D\" d=\"M17.667-.333h-4.334v17.106h4.334V-.333z\"></path>\r\n        <path fill=\"#FFB908\" d=\"M22.667-.333h-5.334v18h5.334v-18z\"></path>\r\n        <path\r\n          fill=\"#DC880D\"\r\n          fillRule=\"evenodd\"\r\n          d=\"M22.333-.333h4.334l-.13 17.294s-1.106.835-1.646.926c-.862.144-2.558-.22-2.558-.22v-18z\"\r\n          clipRule=\"evenodd\"\r\n        ></path>\r\n        <mask\r\n          id=\"mask1\"\r\n          width=\"17\"\r\n          height=\"18\"\r\n          x=\"12\"\r\n          y=\"15\"\r\n          maskUnits=\"userSpaceOnUse\"\r\n        >\r\n          <path\r\n            fill=\"#fff\"\r\n            fillRule=\"evenodd\"\r\n            d=\"M12.231 18.074s3.004-4.614 6.909-2.402c3.904 2.212 5.385 2.258 8.59.787 3.204-1.471-7.716 16.291-7.716 16.291L12.23 18.074z\"\r\n            clipRule=\"evenodd\"\r\n          ></path>\r\n        </mask>\r\n        <g mask=\"url(#mask1)\">\r\n          <path\r\n            fill=\"url(#paint1_linear)\"\r\n            fillRule=\"evenodd\"\r\n            d=\"M13.158 16.404l6.514-3.425 6.91 3.876-6.593 14.473-6.83-14.924z\"\r\n            clipRule=\"evenodd\"\r\n          ></path>\r\n          <mask\r\n            id=\"mask2\"\r\n            width=\"14\"\r\n            height=\"20\"\r\n            x=\"13\"\r\n            y=\"12\"\r\n            maskUnits=\"userSpaceOnUse\"\r\n          >\r\n            <path\r\n              fill=\"#fff\"\r\n              fillRule=\"evenodd\"\r\n              d=\"M13.158 16.404l6.514-3.425 6.91 3.876-6.593 14.473-6.83-14.924z\"\r\n              clipRule=\"evenodd\"\r\n            ></path>\r\n          </mask>\r\n          <g mask=\"url(#mask2)\">\r\n            <path fill=\"#343434\" d=\"M25 26h-9.333v6H25v-6z\"></path>\r\n            <path\r\n              fill=\"url(#paint2_linear)\"\r\n              fillRule=\"evenodd\"\r\n              d=\"M17.168 14.024l3.015 18.725 7.533-16.313-10.548-2.412z\"\r\n              clipRule=\"evenodd\"\r\n            ></path>\r\n            <mask\r\n              id=\"mask3\"\r\n              width=\"11\"\r\n              height=\"19\"\r\n              x=\"17\"\r\n              y=\"14\"\r\n              maskUnits=\"userSpaceOnUse\"\r\n            >\r\n              <path\r\n                fill=\"#fff\"\r\n                fillRule=\"evenodd\"\r\n                d=\"M17.168 14.024l3.015 18.725 7.533-16.313-10.548-2.412z\"\r\n                clipRule=\"evenodd\"\r\n              ></path>\r\n            </mask>\r\n            <g mask=\"url(#mask3)\">\r\n              <path fill=\"#202020\" d=\"M25 26h-9.333v6H25v-6z\"></path>\r\n            </g>\r\n          </g>\r\n        </g>\r\n      </g>\r\n      <defs>\r\n        <filter\r\n          id=\"filter0_d\"\r\n          width=\"93.113\"\r\n          height=\"36.951\"\r\n          x=\"45.002\"\r\n          y=\"8.035\"\r\n          colorInterpolationFilters=\"sRGB\"\r\n          filterUnits=\"userSpaceOnUse\"\r\n        >\r\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\"></feFlood>\r\n          <feColorMatrix\r\n            in=\"SourceAlpha\"\r\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\r\n          ></feColorMatrix>\r\n          <feOffset dy=\"4\"></feOffset>\r\n          <feGaussianBlur stdDeviation=\"2\"></feGaussianBlur>\r\n          <feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"></feColorMatrix>\r\n          <feBlend\r\n            in2=\"BackgroundImageFix\"\r\n            result=\"effect1_dropShadow\"\r\n          ></feBlend>\r\n          <feBlend\r\n            in=\"SourceGraphic\"\r\n            in2=\"effect1_dropShadow\"\r\n            result=\"shape\"\r\n          ></feBlend>\r\n        </filter>\r\n        <filter\r\n          id=\"filter1_i\"\r\n          width=\"23.214\"\r\n          height=\"43.606\"\r\n          x=\"20\"\r\n          y=\"-1.594\"\r\n          colorInterpolationFilters=\"sRGB\"\r\n          filterUnits=\"userSpaceOnUse\"\r\n        >\r\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\"></feFlood>\r\n          <feBlend\r\n            in=\"SourceGraphic\"\r\n            in2=\"BackgroundImageFix\"\r\n            result=\"shape\"\r\n          ></feBlend>\r\n          <feColorMatrix\r\n            in=\"SourceAlpha\"\r\n            result=\"hardAlpha\"\r\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\r\n          ></feColorMatrix>\r\n          <feOffset dx=\"0.5\" dy=\"1.5\"></feOffset>\r\n          <feGaussianBlur stdDeviation=\"0.5\"></feGaussianBlur>\r\n          <feComposite\r\n            in2=\"hardAlpha\"\r\n            k2=\"-1\"\r\n            k3=\"1\"\r\n            operator=\"arithmetic\"\r\n          ></feComposite>\r\n          <feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0\"></feColorMatrix>\r\n          <feBlend in2=\"shape\" result=\"effect1_innerShadow\"></feBlend>\r\n        </filter>\r\n        <linearGradient\r\n          id=\"paint0_linear\"\r\n          x1=\"0\"\r\n          x2=\"0\"\r\n          y1=\"0\"\r\n          y2=\"40\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n        >\r\n          <stop stopColor=\"#2EA3DC\"></stop>\r\n          <stop offset=\"1\" stopColor=\"#1383BB\"></stop>\r\n        </linearGradient>\r\n        <linearGradient\r\n          id=\"paint1_linear\"\r\n          x1=\"15.067\"\r\n          x2=\"19.384\"\r\n          y1=\"23.374\"\r\n          y2=\"23.374\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n        >\r\n          <stop stopColor=\"#FBDEB5\"></stop>\r\n          <stop offset=\"1\" stopColor=\"#FEE0B9\"></stop>\r\n        </linearGradient>\r\n        <linearGradient\r\n          id=\"paint2_linear\"\r\n          x1=\"18.181\"\r\n          x2=\"24.317\"\r\n          y1=\"27.039\"\r\n          y2=\"27.039\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n        >\r\n          <stop stopColor=\"#EAC99D\"></stop>\r\n          <stop offset=\"1\" stopColor=\"#D1AD7B\"></stop>\r\n        </linearGradient>\r\n      </defs>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const LOGIN_STUDENT = gql`\r\n  mutation loginStudent($email: String!, $password: String!) {\r\n    loginStudent(email: $email, password: $password) {\r\n      token\r\n      student {\r\n        id\r\n        email\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOGIN_PRACTICE_SUPERVISER = gql`\r\n  mutation loginPracticeSuperviser($email: String!, $password: String!) {\r\n    loginPracticeSuperviser(email: $email, password: $password) {\r\n      token\r\n      practiceSuperviser {\r\n        id\r\n        email\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOGIN_COMPANY = gql`\r\n  mutation loginCompany($email: String!, $password: String!) {\r\n    loginCompany(email: $email, password: $password) {\r\n      token\r\n      company {\r\n        id\r\n        email\r\n        phone\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default { LOGIN_STUDENT, LOGIN_PRACTICE_SUPERVISER, LOGIN_COMPANY };\r\n","import React, { useState } from \"react\";\r\n\r\nconst useAuth = () => {\r\n  const [token, setTokenValue] = useState(localStorage.getItem(\"token\"));\r\n  const [userType, setUserTypeValue] = useState(\r\n    localStorage.getItem(\"userType\")\r\n  );\r\n  const setToken = (value) => {\r\n    localStorage.setItem(\"token\", value);\r\n    setTokenValue(value);\r\n  };\r\n\r\n  const setUserType = (value) => {\r\n    localStorage.setItem(\"userType\", value);\r\n    setUserTypeValue(value);\r\n  };\r\n\r\n  const removeToken = () => {\r\n    setTokenValue(undefined);\r\n    localStorage.removeItem(\"token\");\r\n  };\r\n\r\n  const removeUserType = () => {\r\n    setUserTypeValue(undefined);\r\n    localStorage.removeItem(\"userType\");\r\n  };\r\n\r\n  return {\r\n    token,\r\n    setToken,\r\n    userType,\r\n    setUserType,\r\n    removeToken,\r\n    removeUserType,\r\n  };\r\n};\r\n\r\nexport default useAuth;\r\n","import { useSnackbar } from \"notistack\";\r\n\r\nconst useSnackGraphql = (variant = \"error\") => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const enqueueError = (errors) => {\r\n    if (errors.graphQLErrors)\r\n      errors.graphQLErrors.map(({ message }) => {\r\n        enqueueSnackbar(message, { variant });\r\n      });\r\n  };\r\n\r\n  return [enqueueError, enqueueSnackbar];\r\n};\r\n\r\nexport default useSnackGraphql;\r\n","const USER_TYPES = {\r\n  student: \"student\",\r\n  practiceSuperviser: \"practice-superviser\",\r\n  company: \"company\",\r\n};\r\n\r\nexport default USER_TYPES;\r\n","import { atom } from \"recoil\";\r\n\r\nexport const studentAtom = atom({\r\n  key: \"studentAtom\",\r\n  default: null,\r\n});\r\n\r\nexport const companyAtom = atom({\r\n  key: \"companyAtom\",\r\n  default: null,\r\n});\r\n\r\nexport const practiceSuperviserAtom = atom({\r\n  key: \"practiceSuperviserAtom\",\r\n  default: null,\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport validator from \"validator\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport css from \"./Login.module.css\";\r\nimport Input from \"@components/Input\";\r\nimport Select from \"@components/Select\";\r\nimport Logo from \"@assets/Logo\";\r\nimport {\r\n  LOGIN_STUDENT,\r\n  LOGIN_PRACTICE_SUPERVISER,\r\n  LOGIN_COMPANY,\r\n} from \"./queries.js\";\r\nimport useAuth from \"@hooks/useAuth\";\r\nimport useSnackGraphql from \"@hooks/useSnackGraphql\";\r\nimport USER_TYPES from \"@config/userTypes\";\r\nimport {\r\n  studentAtom,\r\n  companyAtom,\r\n  practiceSuperviserAtom,\r\n} from \"@config/userRecoilAtoms\";\r\n\r\nconst Login = () => {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const { token, setToken, userType, setUserType } = useAuth();\r\n  const [showGraphqlErrors] = useSnackGraphql();\r\n  const [, setStudent] = useRecoilState(studentAtom);\r\n  const [, setCompany] = useRecoilState(companyAtom);\r\n  const [, setPracticeSupervisor] = useRecoilState(practiceSuperviserAtom);\r\n\r\n  const [loginStudent] = useMutation(LOGIN_STUDENT);\r\n  const [loginPracticeSuperviser] = useMutation(LOGIN_PRACTICE_SUPERVISER);\r\n  const [loginCompany] = useMutation(LOGIN_COMPANY);\r\n\r\n  if (token && userType) return <Redirect to=\"/\" />;\r\n\r\n  const onSubmit = (data) => {\r\n    setStudent(null);\r\n    setCompany(null);\r\n    setPracticeSupervisor(null);\r\n    switch (data.type) {\r\n      case USER_TYPES.student:\r\n        loginStudent({\r\n          variables: { email: data.email, password: data.password },\r\n        })\r\n          .then(async ({ data }) => {\r\n            const { loginStudent } = data;\r\n            if (loginStudent?.token) {\r\n              await setToken(loginStudent.token);\r\n              await setUserType(USER_TYPES.student);\r\n              setStudent(loginStudent.student);\r\n            }\r\n          })\r\n          .catch(showGraphqlErrors);\r\n        break;\r\n      case USER_TYPES.practiceSuperviser:\r\n        loginPracticeSuperviser({\r\n          variables: { email: data.email, password: data.password },\r\n        })\r\n          .then(async ({ data }) => {\r\n            const { loginPracticeSuperviser } = data;\r\n            if (loginPracticeSuperviser?.token) {\r\n              await setToken(loginPracticeSuperviser.token);\r\n              await setUserType(USER_TYPES.practiceSuperviser);\r\n              setPracticeSupervisor(loginPracticeSuperviser.practiceSuperviser);\r\n            }\r\n          })\r\n          .catch(showGraphqlErrors);\r\n        break;\r\n      case USER_TYPES.company:\r\n        loginCompany({\r\n          variables: { email: data.email, password: data.password },\r\n        })\r\n          .then(async ({ data }) => {\r\n            const { loginCompany } = data;\r\n            if (loginCompany?.token) {\r\n              await setToken(loginCompany.token);\r\n              await setUserType(USER_TYPES.company);\r\n              setCompany(loginCompany.company);\r\n            }\r\n          })\r\n          .catch(showGraphqlErrors);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  return (\r\n    <div className={css.page}>\r\n      <div className={css.container}>\r\n        <Logo />\r\n\r\n        <div className={css.content}>\r\n          <h1 className={css.title}>Zaloguj</h1>\r\n          <div className={css.form}>\r\n            <Input\r\n              name=\"email\"\r\n              label=\"Email:\"\r\n              bright\r\n              inputRef={register({\r\n                required: true,\r\n                validate: validator.isEmail,\r\n              })}\r\n            />\r\n            {errors.email && (\r\n              <Alert variant=\"filled\" severity=\"error\">\r\n                Adres email jest niepoprawny.\r\n              </Alert>\r\n            )}\r\n            <Input\r\n              name=\"password\"\r\n              label=\"Hasło:\"\r\n              type=\"password\"\r\n              bright\r\n              inputRef={register({ required: true, minLength: 8 })}\r\n            />\r\n            {errors.password && (\r\n              <Alert variant=\"filled\" severity=\"error\">\r\n                Hasło musi zawierać minimum 8 znaków.\r\n              </Alert>\r\n            )}\r\n\r\n            <Select\r\n              inputRef={register}\r\n              options={[\r\n                { label: \"Student\", value: USER_TYPES.student },\r\n                {\r\n                  label: \"Opiekun praktyk\",\r\n                  value: USER_TYPES.practiceSuperviser,\r\n                },\r\n                { label: \"Firma\", value: USER_TYPES.company },\r\n              ]}\r\n              label=\"Zaloguj jako:\"\r\n              name=\"type\"\r\n              bright\r\n              className={css.select}\r\n            />\r\n            <button\r\n              preset=\"bright\"\r\n              className={css.logIn}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              Zaloguj\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport css from \"./Container.module.css\";\r\nimport clsx from \"clsx\";\r\n\r\nconst Container = ({ children, className }) => {\r\n  return <div className={clsx(css.container, className)}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\n\r\nconst IconAccept = () => {\r\n  return (\r\n    <svg\r\n      width=\"15\"\r\n      height=\"13\"\r\n      viewBox=\"0 0 15 13\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M12.553 0.239426L4.90996 7.88246L2.43115 5.40364L0 7.83478L2.47881 10.3136L4.92584 12.7607L7.357 10.3295L15 2.68648L12.553 0.239426Z\"\r\n        fill=\"#2CCF50\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default IconAccept;\r\n","import React from \"react\";\r\n\r\nconst IconDecline = () => {\r\n  return (\r\n    <svg\r\n      width=\"15\"\r\n      height=\"15\"\r\n      viewBox=\"0 0 15 15\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M14.5312 2.47758L12.5222 0.46875L7.5 5.49117L2.47758 0.46875L0.46875 2.47758L5.49094 7.5L0.46875 12.5224L2.47758 14.5312L7.5 9.50883L12.5222 14.5312L14.5312 12.5224L9.50859 7.5L14.5312 2.47758Z\"\r\n        fill=\"#FB0404\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default IconDecline;\r\n","import React from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Container from \"@components/Container\";\r\nimport css from \"./Practice.module.css\";\r\nimport { IconAccept, IconDecline } from \"@icons\";\r\n\r\nconst Practice = ({\r\n  id,\r\n  company_name,\r\n  address,\r\n  city,\r\n  phone,\r\n  email,\r\n  from,\r\n  to,\r\n  accepted,\r\n  dictionaryUrl,\r\n}) => {\r\n  const history = useHistory();\r\n  return (\r\n    <Container className={css.container}>\r\n      <h2>{company_name}</h2>\r\n      <span>\r\n        <span>Email:</span> {email}\r\n      </span>\r\n      <span>\r\n        <span>Telefon:</span> {phone}\r\n      </span>\r\n      <span>\r\n        <span>Miejscowość:</span> {city}\r\n      </span>\r\n      <span>\r\n        <span>Adres:</span> {address}\r\n      </span>\r\n      <br />\r\n      <span>\r\n        <span>Okres wykonywania praktyki:</span> od{\" \"}\r\n        {dayjs(from).format(\"DD/MM/YYYY\")} do {dayjs(to).format(\"DD/MM/YYYY\")}\r\n      </span>\r\n      <span>\r\n        <span>Zgoda opiekuna praktyk: </span>\r\n        {accepted ? <IconAccept /> : <IconDecline />}\r\n      </span>\r\n      <div className={css.buttons}>\r\n        {accepted && (\r\n          <button onClick={() => history.push(`${dictionaryUrl}/${id}`)}>\r\n            Dziennik\r\n          </button>\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Practice;\r\n","import React from \"react\";\r\nimport css from \"./Page.module.css\";\r\n\r\nconst Page = ({ title, children, button }) => {\r\n  return (\r\n    <div className={css.container}>\r\n      <div className={css.header}>\r\n        <h1 className={css.title}>{title}</h1>\r\n        {button}\r\n      </div>\r\n      <div className={css.content}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport css from \"./LoadingSpinner.module.css\";\r\n\r\nconst LoadingSpinner = (props) => {\r\n  return <CircularProgress {...props} className={props.className} />;\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport css from \"./Modal.module.css\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\n\r\nconst CustomModal = ({\r\n  open,\r\n  setOpenModal,\r\n  children,\r\n  header,\r\n  buttons,\r\n  isLoading,\r\n}) => {\r\n  return (\r\n    open &&\r\n    ReactDOM.createPortal(\r\n      <div className={css.backdrop} onClick={() => setOpenModal(false)}>\r\n        <div className={css.modal} onClick={(e) => e.stopPropagation()}>\r\n          {header && (\r\n            <div className={css.header}>\r\n              <h2>{header}</h2>\r\n              <CloseIcon onClick={() => setOpenModal(false)} />\r\n            </div>\r\n          )}\r\n          <div className={css.content}>{children}</div>\r\n          <div className={css.footer}>\r\n            <div>{isLoading && <LoadingSpinner />}</div>\r\n            <div>{buttons}</div>\r\n          </div>\r\n        </div>\r\n      </div>,\r\n      document.body\r\n    )\r\n  );\r\n};\r\n\r\nexport default CustomModal;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_PRACTICE_AGREEMENT = gql`\r\n  mutation createPracticeAgreement(\r\n    $city: String!\r\n    $address: String!\r\n    $from: Date!\r\n    $to: Date!\r\n    $email: String!\r\n    $phone: String!\r\n    $company_name: String!\r\n  ) {\r\n    createPracticeAgreement(\r\n      city: $city\r\n      address: $address\r\n      from: $from\r\n      to: $to\r\n      phone: $phone\r\n      email: $email\r\n      company_name: $company_name\r\n    ) {\r\n      city\r\n      address\r\n      email\r\n      company_name\r\n      from\r\n      to\r\n      accepted\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport validator from \"validator\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport css from \"./ReportPracticeModal.module.css\";\r\nimport Modal from \"@components/Modal\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Input from \"@components/Input\";\r\nimport { companyAtom } from \"@config/userRecoilAtoms\";\r\nimport { CREATE_PRACTICE_AGREEMENT } from \"./queries.js\";\r\nimport useSnackGraphql from \"@hooks/useSnackGraphql\";\r\n\r\nconst ReportPracticeModal = (props) => {\r\n  const { setOpenModal, refetch } = props;\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const [createPracticeAgreement] = useMutation(CREATE_PRACTICE_AGREEMENT);\r\n  const [showGraphqlErrors, enqueueSnackbar] = useSnackGraphql();\r\n\r\n  const onSubmit = (data) => {\r\n    setIsLoading(true);\r\n    createPracticeAgreement({\r\n      variables: {\r\n        city: data.city,\r\n        address: data.address,\r\n        from: data.from,\r\n        to: data.to,\r\n        phone: data.phone,\r\n        email: data.email,\r\n        company_name: data.company_name,\r\n      },\r\n    })\r\n      .then(() => {\r\n        setIsLoading(false);\r\n        // refetch();\r\n        enqueueSnackbar(\"Praktyka zgłoszona pomyślnie\", { variant: \"success\" });\r\n        refetch();\r\n        setOpenModal(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        showGraphqlErrors(err);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      header=\"Zgłoś praktykę\"\r\n      isLoading={isLoading}\r\n      buttons={\r\n        <>\r\n          <button preset=\"bright\" onClick={() => setOpenModal(false)}>\r\n            Zamknij\r\n          </button>\r\n          <button onClick={handleSubmit(onSubmit)}>Wyślij zgłoszenie</button>\r\n        </>\r\n      }\r\n    >\r\n      <div className={css.container}>\r\n        <div className={css.content}>\r\n          <div className={css.inputGroup}>\r\n            <Input\r\n              label=\"Nazwa firmy*\"\r\n              labelOnTop\r\n              inputRef={register({ required: true })}\r\n              name=\"company_name\"\r\n              placeholder=\"Example z.o.o\"\r\n            />\r\n\r\n            <Input\r\n              label=\"Email*\"\r\n              labelOnTop\r\n              inputRef={register({\r\n                validate: (value) => (value ? validator.isEmail(value) : true),\r\n              })}\r\n              name=\"email\"\r\n              placeholder=\"jk@example.com\"\r\n            />\r\n\r\n            <Input\r\n              label=\"Telefon*\"\r\n              labelOnTop\r\n              inputRef={register({ required: true })}\r\n              name=\"phone\"\r\n              placeholder=\"678 890 ...\"\r\n            />\r\n            <Input\r\n              label=\"Miejscowość i kod pocztowy*\"\r\n              labelOnTop\r\n              inputRef={register({ required: true })}\r\n              name=\"city\"\r\n              placeholder=\"Olsztyn, 10-089\"\r\n            />\r\n            <Input\r\n              label=\"Adres*\"\r\n              labelOnTop\r\n              inputRef={register({ required: true })}\r\n              name=\"address\"\r\n              placeholder=\"Wyspiańskiego 18\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className={css.fromToWrapper}>\r\n            <label>Przedział czasowy</label>\r\n            <Input\r\n              type=\"date\"\r\n              label=\"Od*\"\r\n              inputRef={register({ required: true })}\r\n              name=\"from\"\r\n            />\r\n            <Input\r\n              type=\"date\"\r\n              label=\"Do*\"\r\n              inputRef={register({ required: true })}\r\n              name=\"to\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={css.errors}>\r\n        {errors.city && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Miejscowość i kod pocztowy są wymagane\r\n          </Alert>\r\n        )}\r\n        {errors.company_name && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Nazwa firmy jest wymagana\r\n          </Alert>\r\n        )}\r\n        {errors.address && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Adres jest wymagany\r\n          </Alert>\r\n        )}\r\n        {errors.phone && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Telefon jest wymagany\r\n          </Alert>\r\n        )}\r\n        {(errors.from || errors.to) && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Podaj poprawny przedział czasowy\r\n          </Alert>\r\n        )}\r\n        {errors.email && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Adres email jest niepoprawny\r\n          </Alert>\r\n        )}\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ReportPracticeModal;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const MY_PRACTICE_AGREEMENTS = gql`\r\n  query myPracticeAgreements {\r\n    myPracticeAgreements {\r\n      id\r\n      address\r\n      city\r\n      email\r\n      company_name\r\n      phone\r\n      from\r\n      to\r\n      accepted\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_JOURNAL = gql`\r\n  mutation createJournal($file: Upload!, $PracticeAgreementId: ID!) {\r\n    createJournal(file: $file, PracticeAgreementId: $PracticeAgreementId) {\r\n      accepted\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_JOURNAL = gql`\r\n  query getJournal($PracticeAgreementId: ID!) {\r\n    getJournal(PracticeAgreementId: $PracticeAgreementId) {\r\n      id\r\n      accepted\r\n    }\r\n  }\r\n`;\r\n","import React, { useRef } from \"react\";\r\nimport mergeRefs from \"react-merge-refs\";\r\n\r\nexport const FileUploadWrapper = ({\r\n  onFileSelect,\r\n  children,\r\n  inputRef,\r\n  name,\r\n  accept,\r\n}) => {\r\n  const fileInput = useRef(null);\r\n\r\n  const handleFileInput = (e) => {\r\n    onFileSelect && onFileSelect(e.target.files[0]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"file\"\r\n        onChange={handleFileInput}\r\n        ref={mergeRefs([fileInput, inputRef])}\r\n        style={{ display: \"none\" }}\r\n        name={name}\r\n        accept={accept}\r\n      />\r\n      {React.cloneElement(children, {\r\n        onClick: () => fileInput.current && fileInput.current.click(),\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploadWrapper;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useMutation, useLazyQuery } from \"@apollo/client\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport css from \"./Journal.module.css\";\r\nimport { CREATE_JOURNAL, GET_JOURNAL } from \"./queries\";\r\nimport useAuth from \"@hooks/useAuth\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport FileUploadWrapper from \"@components/FileUploadWrapper\";\r\nimport { IconAccept, IconDecline } from \"@icons\";\r\nimport useSnackGraphql from \"@hooks/useSnackGraphql\";\r\n\r\nconst Journal = () => {\r\n  const { token } = useAuth();\r\n  const [createJournal] = useMutation(CREATE_JOURNAL);\r\n  const { agreementId } = useParams();\r\n  const [getJournal, { data, loading, refetch }] = useLazyQuery(GET_JOURNAL);\r\n  const [file, setFile] = useState();\r\n  const [enqueueError] = useSnackGraphql();\r\n\r\n  useEffect(() => {\r\n    if (agreementId)\r\n      getJournal({ variables: { PracticeAgreementId: agreementId } });\r\n  }, [agreementId]);\r\n\r\n  if (loading) return <LoadingSpinner />;\r\n  console.log(data);\r\n  const journalId = data?.getJournal?.id;\r\n  return (\r\n    <div className={css.container}>\r\n      {journalId && (\r\n        <span>\r\n          <span>Zatwierdzone przez opiekuna prakty:</span>\r\n          {data?.getJournal?.accepted ? <IconAccept /> : <IconDecline />}\r\n        </span>\r\n      )}\r\n\r\n      <div className={css.wrapper}>\r\n        {journalId && (\r\n          <a href={`/uploads/${journalId}/?token=${token}`}>\r\n            <button preset=\"bright\">Dziennik</button>\r\n          </a>\r\n        )}\r\n        {(!journalId || !data?.getJournal?.accepted) && (\r\n          <div className={css.fileHandler}>\r\n            <FileUploadWrapper onFileSelect={(file) => setFile(file)}>\r\n              <button>Przeglądaj</button>\r\n            </FileUploadWrapper>\r\n            <span>{file?.name}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {(!journalId || !data?.getJournal?.accepted) && (\r\n        <>\r\n          {console.log(\"file\", file)}\r\n          <button\r\n            onClick={() => {\r\n              console.log(file);\r\n              file &&\r\n                createJournal({\r\n                  variables: { file, PracticeAgreementId: agreementId },\r\n                })\r\n                  .then((result) => {\r\n                    if (result) {\r\n                      refetch();\r\n                    }\r\n                  })\r\n                  .catch(enqueueError);\r\n            }}\r\n          >\r\n            Wyślij\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Journal;\r\n","import React, { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { Route, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport Practice from \"@components/Practice\";\r\nimport css from \"./MyPractice.module.css\";\r\nimport Page from \"@components/Page\";\r\nimport ReportPracticeModal from \"@components/ReportPracticeModal\";\r\nimport { MY_PRACTICE_AGREEMENTS } from \"./queries\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport Journal from \"./Journal\";\r\n\r\nconst MyPractice = () => {\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const { data, loading, error, refetch } = useQuery(MY_PRACTICE_AGREEMENTS);\r\n  const match = useRouteMatch();\r\n  if (loading) return <LoadingSpinner />;\r\n  return (\r\n    <>\r\n      <Route exact path={`${match.path}/`}>\r\n        <Page\r\n          title=\"Moja praktyka\"\r\n          button={\r\n            <>\r\n              <div>\r\n                <button onClick={() => setOpenModal(true)}>\r\n                  Zgłoś praktykę\r\n                </button>\r\n              </div>\r\n            </>\r\n          }\r\n        >\r\n          {data.myPracticeAgreements.map((practice) => (\r\n            <Practice\r\n              key={practice.id}\r\n              {...practice}\r\n              dictionaryUrl={`${match.path}/dictionary`}\r\n            />\r\n          ))}\r\n        </Page>\r\n        {openModal && (\r\n          <ReportPracticeModal\r\n            open={openModal}\r\n            setOpenModal={setOpenModal}\r\n            refetch={refetch}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path={`${match.path}/dictionary/:agreementId`}>\r\n        <Page title=\"Dziennik\">\r\n          <Journal />\r\n        </Page>\r\n      </Route>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPractice;\r\n","import React from \"react\";\r\nimport css from \"./ConfirmModal.module.css\";\r\nimport Modal from \"@components/Modal\";\r\n\r\nconst ConfirmModal = (props) => {\r\n  const { children, onConfirm, onDecline } = props;\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      buttons={\r\n        <>\r\n          <button preset=\"bright\" onClick={onDecline}>\r\n            Nie\r\n          </button>\r\n          <button onClick={onConfirm}>Tak</button>\r\n        </>\r\n      }\r\n    >\r\n      <p className={css.text}>{children}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ConfirmModal;\r\n","import React from \"react\";\r\nimport css from \"./Textarea.module.css\";\r\nimport clsx from \"clsx\";\r\n\r\nconst Textarea = ({\r\n  id,\r\n  name,\r\n  onChange,\r\n  inputRef,\r\n  value,\r\n  placeholder,\r\n  labelOnTop,\r\n  label,\r\n  className,\r\n  bright,\r\n  defaultValue,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={clsx(css.container, className, labelOnTop && css.labelOnTop)}\r\n    >\r\n      {label && <label className={clsx(bright && css.bright)}>{label}</label>}\r\n      <textarea\r\n        id={id}\r\n        name={name}\r\n        onChange={onChange}\r\n        ref={inputRef}\r\n        placeholder={placeholder}\r\n        defaultValue={defaultValue}\r\n      ></textarea>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Textarea;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const EDIT_ANNOUNCEMENT = gql`\r\n  mutation editPracticeAnnouncement(\r\n    $id: ID!\r\n    $header: String\r\n    $slots: Int\r\n    $technologies: String\r\n    $description: String\r\n    $from: Date\r\n    $to: Date\r\n    $email: String\r\n    $phone: String\r\n    $company_name: String\r\n  ) {\r\n    editPracticeAnnouncement(\r\n      id: $id\r\n      header: $header\r\n      slots: $slots\r\n      technologies: $technologies\r\n      description: $description\r\n      from: $from\r\n      to: $to\r\n      phone: $phone\r\n      email: $email\r\n      company_name: $company_name\r\n    ) {\r\n      id\r\n      header\r\n      slots\r\n      description\r\n      technologies\r\n      from\r\n      to\r\n      phone\r\n      email\r\n      company_name\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport validator from \"validator\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport dayjs from \"dayjs\";\r\n\r\nimport css from \"./EditAnnouncementModal.module.css\";\r\nimport Input from \"@components/Input\";\r\nimport Textarea from \"@components/Textarea\";\r\nimport Modal from \"@components/Modal\";\r\nimport { EDIT_ANNOUNCEMENT } from \"./queries.js\";\r\nimport useSnackGraphql from \"@hooks/useSnackGraphql\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport { companyAtom } from \"@config/userRecoilAtoms\";\r\n\r\nconst EditAnnouncementModal = (props) => {\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const [showGraphqlErrors, enqueueSnackbar] = useSnackGraphql();\r\n  const [editAnnouncement] = useMutation(EDIT_ANNOUNCEMENT);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const company = useRecoilValue(companyAtom);\r\n\r\n  const { setOpenModal, refetch, announcement } = props;\r\n  const fromDate = dayjs(announcement.from).format(\"YYYY-MM-DD\");\r\n  const toDate = dayjs(announcement.to).format(\"YYYY-MM-DD\");\r\n\r\n  const onSubmit = (data) => {\r\n    let uniqueData = {};\r\n    uniqueData.id = announcement.id;\r\n    if (data.header !== announcement.header) uniqueData.header = data.header;\r\n    if (data.slots !== announcement.slots)\r\n      uniqueData.slots = parseInt(data.slots);\r\n    if (data.technologies !== announcement.technologies)\r\n      uniqueData.technologies = data.technologies;\r\n    if (data.description !== announcement.description)\r\n      uniqueData.description = data.description;\r\n    if (data.from !== fromDate) uniqueData.from = data.from;\r\n    if (data.to !== toDate) uniqueData.to = data.to;\r\n    if (data.phone !== announcement.phone) uniqueData.phone = data.phone;\r\n    if (data.email !== announcement.email) uniqueData.email = data.email;\r\n    if (data.company_name !== announcement.company_name)\r\n      uniqueData.company_name = data.company_name;\r\n\r\n    setIsLoading(true);\r\n    editAnnouncement({\r\n      variables: uniqueData,\r\n    })\r\n      .then(() => {\r\n        setIsLoading(false);\r\n        refetch();\r\n        enqueueSnackbar(\"Ogłoszenie edytowano pomyślnie\", {\r\n          variant: \"success\",\r\n        });\r\n        setOpenModal(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        showGraphqlErrors(err);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      header=\"Edytuj ogłoszenie\"\r\n      isLoading={isLoading}\r\n      buttons={\r\n        <>\r\n          <button preset=\"bright\" onClick={() => setOpenModal(false)}>\r\n            Zamknij\r\n          </button>\r\n          <button onClick={handleSubmit(onSubmit)}>Zapisz ogłoszenie</button>{\" \"}\r\n        </>\r\n      }\r\n    >\r\n      <div className={css.container}>\r\n        <div className={css.content}>\r\n          <div className={css.inputGroup}>\r\n            <Input\r\n              inputRef={register({ required: true })}\r\n              label=\"Nagłówek*\"\r\n              labelOnTop\r\n              name=\"header\"\r\n              placeholder=\"Praktyki na stanowisku...\"\r\n              defaultValue={announcement.header}\r\n            />\r\n\r\n            {company ? (\r\n              <div>\r\n                <label>Nazwa firmy</label>\r\n                <br />\r\n                <span>{company.name}</span>\r\n              </div>\r\n            ) : (\r\n              <Input\r\n                label=\"Nazwa firmy*\"\r\n                labelOnTop\r\n                inputRef={register({ required: true })}\r\n                name=\"company_name\"\r\n                placeholder=\"Example z.o.o\"\r\n                defaultValue={announcement.company_name}\r\n              />\r\n            )}\r\n            <Input\r\n              label=\"Miejsca*\"\r\n              type=\"number\"\r\n              labelOnTop\r\n              inputRef={register({ required: true })}\r\n              name=\"slots\"\r\n              defaultValue={announcement.slots}\r\n            />\r\n            <Input\r\n              label=\"Technologie*\"\r\n              labelOnTop\r\n              inputRef={register({ required: true })}\r\n              name=\"technologies\"\r\n              placeholder=\"Java, C++, c#\"\r\n              defaultValue={announcement.technologies}\r\n            />\r\n            {company ? (\r\n              <div>\r\n                <label>Email</label>\r\n                <br />\r\n                <span>{company.email}</span>\r\n              </div>\r\n            ) : (\r\n              <Input\r\n                label=\"Email\"\r\n                labelOnTop\r\n                inputRef={register({\r\n                  validate: (value) =>\r\n                    value ? validator.isEmail(value) : true,\r\n                })}\r\n                name=\"email\"\r\n                placeholder=\"jk@example.com\"\r\n                defaultValue={announcement.email}\r\n              />\r\n            )}\r\n            {company?.phone ? (\r\n              <div>\r\n                <label>Phone</label>\r\n                <br />\r\n                <span>{company.phone}</span>\r\n              </div>\r\n            ) : (\r\n              <Input\r\n                label=\"Telefon\"\r\n                labelOnTop\r\n                inputRef={register}\r\n                name=\"phone\"\r\n                placeholder=\"678 890 ...\"\r\n                defaultValue={announcement.phone}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <Textarea\r\n              label=\"Opis\"\r\n              name=\"description\"\r\n              labelOnTop\r\n              inputRef={register}\r\n              defaultValue={announcement.description}\r\n            />\r\n          </div>\r\n          <div className={css.fromToWrapper}>\r\n            <label>Przedział czasowy</label>\r\n            <Input\r\n              type=\"date\"\r\n              label=\"Od*\"\r\n              inputRef={register({ required: true })}\r\n              name=\"from\"\r\n              defaultValue={fromDate}\r\n            />\r\n            <Input\r\n              type=\"date\"\r\n              label=\"Do*\"\r\n              inputRef={register({ required: true })}\r\n              name=\"to\"\r\n              defaultValue={toDate}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={css.errors}>\r\n        {errors.header && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Nagłówek jest wymagany\r\n          </Alert>\r\n        )}\r\n        {errors.company_name && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Nazwa firmy jest wymagana\r\n          </Alert>\r\n        )}\r\n        {errors.slots && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Miejsca są wymagane\r\n          </Alert>\r\n        )}\r\n        {errors.technologies && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Technologie są wymagane\r\n          </Alert>\r\n        )}\r\n        {(errors.from || errors.to) && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Podaj poprawny przedział czasowy\r\n          </Alert>\r\n        )}\r\n        {errors.email && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Adres email jest niepoprawny\r\n          </Alert>\r\n        )}\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditAnnouncementModal;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const DELETE_PRACTICE_ANNOUNCEMENT = gql`\r\n  mutation deletePracticeAnnouncement($id: ID!) {\r\n    deletePracticeAnnouncement(id: $id)\r\n  }\r\n`;\r\n\r\nexport const CONFIRM_PRACTICE_ANNOUNCEMENT = gql`\r\n  mutation confirmPracticeAnnouncement($id: ID!) {\r\n    confirmPracticeAnnouncement(id: $id) {\r\n      id\r\n      header\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport css from \"./Announcement.module.css\";\r\nimport Container from \"@components/Container\";\r\nimport useAuth from \"@hooks/useAuth\";\r\nimport USER_TYPES from \"@config/userTypes\";\r\nimport ConfirmModal from \"@components/ConfirmModal\";\r\nimport EditAnnouncementModal from \"@components/EditAnnouncementModal\";\r\nimport {\r\n  DELETE_PRACTICE_ANNOUNCEMENT,\r\n  CONFIRM_PRACTICE_ANNOUNCEMENT,\r\n} from \"./queries\";\r\nimport { companyAtom } from \"@config/userRecoilAtoms\";\r\n\r\nconst Announcement = ({\r\n  id,\r\n  header,\r\n  slots,\r\n  from,\r\n  to,\r\n  technologies,\r\n  description,\r\n  accepted,\r\n  email,\r\n  phone,\r\n  company_name,\r\n  CompanyId,\r\n  announcements,\r\n  setAnnouncements,\r\n  refetch,\r\n}) => {\r\n  const { userType } = useAuth();\r\n  const [openDeleteModal, setOpenDeleteModal] = useState(false);\r\n  const [openEditModal, setOpenEditModal] = useState(false);\r\n  const [company] = useRecoilState(companyAtom);\r\n  const [confirmPracticeAnnouncement] = useMutation(\r\n    CONFIRM_PRACTICE_ANNOUNCEMENT\r\n  );\r\n  const [deletePracticeAnnouncement] = useMutation(\r\n    DELETE_PRACTICE_ANNOUNCEMENT\r\n  );\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleDelete = async () => {\r\n    const deleted = await deletePracticeAnnouncement({ variables: { id } });\r\n    if (deleted) {\r\n      enqueueSnackbar(\"Usunięto pomyślnie\", { variant: \"success\" });\r\n      setOpenDeleteModal(false);\r\n      setAnnouncements(\r\n        announcements.filter((announcement) => announcement.id !== id)\r\n      );\r\n    } else {\r\n      enqueueSnackbar(\"Wystąpił problem\", { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    confirmPracticeAnnouncement({ variables: { id } }).then((data) => {\r\n      if (data) {\r\n        enqueueSnackbar(\"Zatwierdzono pomyślnie\", { variant: \"success\" });\r\n        setAnnouncements(\r\n          announcements.map((announcement) => {\r\n            if (announcement.id === id)\r\n              return { ...announcement, accepted: true };\r\n            else return announcement;\r\n          })\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container className={css.container}>\r\n      <h2>{header}</h2>\r\n      <span>\r\n        <span>Nazwa firmy: </span>\r\n        {company_name}\r\n      </span>\r\n\r\n      <span>\r\n        <span>Miejsca:</span> {slots}\r\n      </span>\r\n      <span>\r\n        <span>Od:</span> {dayjs(from).format(\"DD/MM/YYYY\")} <span>do: </span>\r\n        {dayjs(to).format(\"DD/MM/YYYY\")}\r\n      </span>\r\n      {email && (\r\n        <span>\r\n          <span>Email:</span> {email}\r\n        </span>\r\n      )}\r\n      {phone && (\r\n        <span>\r\n          <span>Telefon:</span> {phone}\r\n        </span>\r\n      )}\r\n      <span>\r\n        <span>Technologie:</span> {technologies}\r\n      </span>\r\n      {CompanyId &&\r\n        CompanyId === company?.id &&\r\n        userType === USER_TYPES.company && (\r\n          <span>\r\n            <span>Zatwierdzone:</span> {accepted ? \"Tak\" : \"Nie\"}\r\n          </span>\r\n        )}\r\n      <p>{description}</p>\r\n      <div className={css.buttons}>\r\n        {/* {userType === USER_TYPES.student && <button>Złóż podanie</button>} */}\r\n        {userType === USER_TYPES.practiceSuperviser && accepted === false && (\r\n          <button onClick={handleConfirm}>Zatwierdź</button>\r\n        )}\r\n        {((userType === USER_TYPES.company &&\r\n          CompanyId &&\r\n          CompanyId === company?.id) ||\r\n          userType === USER_TYPES.practiceSuperviser) && (\r\n          <button onClick={() => setOpenEditModal(true)}>Edytuj</button>\r\n        )}\r\n        {(userType === USER_TYPES.practiceSuperviser ||\r\n          (CompanyId &&\r\n            CompanyId === company?.id &&\r\n            userType === USER_TYPES.company)) && (\r\n          <button preset=\"red\" onClick={() => setOpenDeleteModal(true)}>\r\n            Usuń\r\n          </button>\r\n        )}\r\n      </div>\r\n      {openDeleteModal && (\r\n        <ConfirmModal\r\n          open={openDeleteModal}\r\n          setOpenModal={setOpenDeleteModal}\r\n          onDecline={() => setOpenDeleteModal(false)}\r\n          onConfirm={handleDelete}\r\n        >\r\n          Czy na pewno chcesz usunąć te ogłoszenie?\r\n          <br />\r\n          Tej operacji nie da się cofnąć.\r\n        </ConfirmModal>\r\n      )}\r\n      {openEditModal && (\r\n        <EditAnnouncementModal\r\n          open={openEditModal}\r\n          setOpenModal={setOpenEditModal}\r\n          announcement={{\r\n            id,\r\n            header,\r\n            slots,\r\n            from,\r\n            to,\r\n            technologies,\r\n            description,\r\n            accepted,\r\n            email,\r\n            phone,\r\n            company_name,\r\n            CompanyId,\r\n          }}\r\n          refetch={refetch}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Announcement;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const ANNOUNCEMENTS = gql`\r\n  query practiceAnnouncements {\r\n    practiceAnnouncements {\r\n      header\r\n      slots\r\n      technologies\r\n      description\r\n      to\r\n      from\r\n      accepted\r\n      phone\r\n      email\r\n      company_name\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport Announcement from \"@components/Announcement\";\r\nimport Page from \"@components/Page\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { ANNOUNCEMENTS } from \"./queries\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport Modal from \"@components/Modal\";\r\n\r\nconst AnnouncementPage = () => {\r\n  const { loading, error, data, refetch } = useQuery(ANNOUNCEMENTS);\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  if (loading) return <LoadingSpinner />;\r\n  if (error) return \"error\";\r\n  return (\r\n    <>\r\n      <Page\r\n        title=\"Ogłoszenia praktyk\"\r\n        // button={\r\n        //   <button onClick={() => setOpenModal(true)}>Dodaj ogłoszenie</button>\r\n        // }\r\n      >\r\n        {data.practiceAnnouncements.map((announcement, index) => {\r\n          return <Announcement key={index} {...announcement} />;\r\n        })}\r\n      </Page>\r\n\r\n      {openModal && (\r\n        <Modal open={openModal} setOpenModal={setOpenModal} refetch={refetch} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnnouncementPage;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_STUDENT = gql`\r\n  query meStudent {\r\n    meStudent {\r\n      email\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport MyPractice from \"./MyPractice\";\r\nimport AnnouncementPage from \"./AnnouncementPage\";\r\nimport { studentAtom } from \"@config/userRecoilAtoms\";\r\nimport { GET_STUDENT } from \"./queries.js\";\r\n\r\nconst Student = () => {\r\n  const [student, setStudent] = useRecoilState(studentAtom);\r\n  const [getStudent, { data }] = useLazyQuery(GET_STUDENT);\r\n\r\n  useEffect(() => {\r\n    if (!student) {\r\n      getStudent();\r\n    }\r\n  }, [student, getStudent]);\r\n\r\n  useEffect(() => {\r\n    if (data) setStudent(data.meStudent);\r\n  }, [data, setStudent]);\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <AnnouncementPage />\r\n        </Route>\r\n        <Route path=\"/mypractice\">\r\n          <MyPractice />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Student;\r\n","import { useState } from \"react\";\r\n\r\nfunction useLocalStorage(key, initialValue = \"\") {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = (value) => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport useAuth from \"@hooks/useAuth\";\r\n\r\nconst PrivateRoute = ({ children, userType, ...rest }) => {\r\n  const { userType: userTypeStorage } = useAuth();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        userTypeStorage === userType ? children : null\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport useAuth from \"@hooks/useAuth\";\r\n\r\nconst clearUserData = (location, removeToken, removeUserType) => {\r\n  removeToken();\r\n  removeUserType();\r\n  return (\r\n    <Redirect\r\n      to={{\r\n        pathname: \"/login\",\r\n        state: { from: location },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst ProtectedRoute = ({ children, ...rest }) => {\r\n  const { userType, removeToken, removeUserType } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        userType\r\n          ? children\r\n          : clearUserData(location, removeToken, removeUserType)\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const ANNOUNCEMENTS = gql`\r\n  query practiceAnnouncements {\r\n    practiceAnnouncements {\r\n      id\r\n      header\r\n      slots\r\n      technologies\r\n      description\r\n      to\r\n      from\r\n      accepted\r\n      email\r\n      phone\r\n      company_name\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const ADD_ANNOUNCEMENT = gql`\r\n  mutation createPracticeAnnouncement(\r\n    $header: String!\r\n    $slots: Int!\r\n    $technologies: String!\r\n    $description: String\r\n    $from: Date!\r\n    $to: Date!\r\n    $email: String\r\n    $phone: String\r\n    $company_name: String\r\n  ) {\r\n    createPracticeAnnouncement(\r\n      header: $header\r\n      slots: $slots\r\n      technologies: $technologies\r\n      description: $description\r\n      from: $from\r\n      to: $to\r\n      phone: $phone\r\n      email: $email\r\n      company_name: $company_name\r\n    ) {\r\n      header\r\n      slots\r\n      description\r\n      technologies\r\n      from\r\n      to\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport validator from \"validator\";\r\nimport { useRecoilValue } from \"recoil\";\r\n\r\nimport css from \"./AddAnnouncementModal.module.css\";\r\nimport Input from \"@components/Input\";\r\nimport Textarea from \"@components/Textarea\";\r\nimport Modal from \"@components/Modal\";\r\nimport { ADD_ANNOUNCEMENT } from \"./queries.js\";\r\nimport useSnackGraphql from \"@hooks/useSnackGraphql\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport { companyAtom } from \"@config/userRecoilAtoms\";\r\n\r\nconst AddAnnouncementModal = (props) => {\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const [showGraphqlErrors, enqueueSnackbar] = useSnackGraphql();\r\n  const [addAnnouncement] = useMutation(ADD_ANNOUNCEMENT);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const company = useRecoilValue(companyAtom);\r\n\r\n  const { setOpenModal, refetch } = props;\r\n\r\n  const onSubmit = (data) => {\r\n    setIsLoading(true);\r\n    addAnnouncement({\r\n      variables: {\r\n        header: data.header,\r\n        slots: data.slots ? parseInt(data.slots) : 0,\r\n        technologies: data.technologies,\r\n        description: data.description,\r\n        from: data.from,\r\n        to: data.to,\r\n        phone: company?.phone ?? data.phone,\r\n        email: company ? company.email : data.email,\r\n        company_name: company ? company.name : data.company_name,\r\n      },\r\n    })\r\n      .then(() => {\r\n        setIsLoading(false);\r\n        refetch();\r\n        enqueueSnackbar(\"Ogłoszenie dodano pomyślnie\", { variant: \"success\" });\r\n        setOpenModal(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        showGraphqlErrors(err);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      header=\"Dodaj ogłoszenie\"\r\n      isLoading={isLoading}\r\n      buttons={\r\n        <>\r\n          <button preset=\"bright\" onClick={() => setOpenModal(false)}>\r\n            Zamknij\r\n          </button>\r\n          <button onClick={handleSubmit(onSubmit)}>Dodaj ogłoszenie</button>{\" \"}\r\n        </>\r\n      }\r\n    >\r\n      <div className={css.container}>\r\n        <div className={css.content}>\r\n          <div className={css.inputGroup}>\r\n            <Input\r\n              inputRef={register({ required: true })}\r\n              label=\"Nagłówek*\"\r\n              labelOnTop\r\n              name=\"header\"\r\n              placeholder=\"Praktyki na stanowisku...\"\r\n            />\r\n\r\n            {company ? (\r\n              <div>\r\n                <label>Nazwa firmy</label>\r\n                <br />\r\n                <span>{company.name}</span>\r\n              </div>\r\n            ) : (\r\n              <Input\r\n                label=\"Nazwa firmy*\"\r\n                labelOnTop\r\n                inputRef={register({ required: true })}\r\n                name=\"company_name\"\r\n                placeholder=\"Example z.o.o\"\r\n              />\r\n            )}\r\n            <Input\r\n              label=\"Miejsca*\"\r\n              type=\"number\"\r\n              labelOnTop\r\n              inputRef={register({ required: true })}\r\n              name=\"slots\"\r\n              defaultValue={1}\r\n            />\r\n            <Input\r\n              label=\"Technologie*\"\r\n              labelOnTop\r\n              inputRef={register({ required: true })}\r\n              name=\"technologies\"\r\n              placeholder=\"Java, C++, c#\"\r\n            />\r\n            {company ? (\r\n              <div>\r\n                <label>Email</label>\r\n                <br />\r\n                <span>{company.email}</span>\r\n              </div>\r\n            ) : (\r\n              <Input\r\n                label=\"Email\"\r\n                labelOnTop\r\n                inputRef={register({\r\n                  validate: (value) =>\r\n                    value ? validator.isEmail(value) : true,\r\n                })}\r\n                name=\"email\"\r\n                placeholder=\"jk@example.com\"\r\n              />\r\n            )}\r\n            {company?.phone ? (\r\n              <div>\r\n                <label>Phone</label>\r\n                <br />\r\n                <span>{company.phone}</span>\r\n              </div>\r\n            ) : (\r\n              <Input\r\n                label=\"Telefon\"\r\n                labelOnTop\r\n                inputRef={register}\r\n                name=\"phone\"\r\n                placeholder=\"678 890 ...\"\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <Textarea\r\n              label=\"Opis\"\r\n              name=\"description\"\r\n              labelOnTop\r\n              inputRef={register}\r\n            />\r\n          </div>\r\n          <div className={css.fromToWrapper}>\r\n            <label>Przedział czasowy</label>\r\n            <Input\r\n              type=\"date\"\r\n              label=\"Od*\"\r\n              inputRef={register({ required: true })}\r\n              name=\"from\"\r\n            />\r\n            <Input\r\n              type=\"date\"\r\n              label=\"Do*\"\r\n              inputRef={register({ required: true })}\r\n              name=\"to\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={css.errors}>\r\n        {errors.header && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Nagłówek jest wymagany\r\n          </Alert>\r\n        )}\r\n        {errors.company_name && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Nazwa firmy jest wymagana\r\n          </Alert>\r\n        )}\r\n        {errors.slots && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Miejsca są wymagane\r\n          </Alert>\r\n        )}\r\n        {errors.technologies && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Technologie są wymagane\r\n          </Alert>\r\n        )}\r\n        {(errors.from || errors.to) && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Podaj poprawny przedział czasowy\r\n          </Alert>\r\n        )}\r\n        {errors.email && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Adres email jest niepoprawny\r\n          </Alert>\r\n        )}\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddAnnouncementModal;\r\n","import React from \"react\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nimport css from \"./Tabs.module.css\";\r\n\r\nexport const CustomTab = (props) => {\r\n  return (\r\n    <Tab {...props} className={css.tab}>\r\n      {props.children}\r\n    </Tab>\r\n  );\r\n};\r\n\r\nexport const CustomTabs = (props) => {\r\n  return (\r\n    <Tabs {...props} className={css.tabs}>\r\n      {props.children}\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nCustomTabs.Tab = CustomTab;\r\n\r\nexport default CustomTabs;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\nimport { ANNOUNCEMENTS } from \"./queries\";\r\nimport Page from \"@components/Page\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport Announcement from \"@components/Announcement\";\r\nimport AddAnnouncementModal from \"@components/AddAnnouncementModal\";\r\nimport Tabs from \"@components/Tabs\";\r\nimport css from \"./AnnouncementPage.module.css\";\r\n\r\nconst AnnouncementPage = () => {\r\n  const { loading, error, data, refetch } = useQuery(ANNOUNCEMENTS);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [announcements, setAnnouncements] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (data) setAnnouncements(data.practiceAnnouncements);\r\n  }, [data]);\r\n\r\n  if (loading) return <LoadingSpinner />;\r\n  if (error) return \"error\";\r\n  return (\r\n    <>\r\n      <Page\r\n        title=\"Ogłoszenia praktyk\"\r\n        button={\r\n          <button onClick={() => setOpenModal(true)}>Dodaj ogłoszenie</button>\r\n        }\r\n      >\r\n        <div className={css.tabs}>\r\n          <Tabs\r\n            value={tabValue}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            onChange={(event, newValue) => setTabValue(newValue)}\r\n          >\r\n            <Tabs.Tab label=\"Zatwierdzone\" />\r\n            <Tabs.Tab label=\"Oczekujące\" />\r\n          </Tabs>\r\n        </div>\r\n        {announcements.map((announcement, index) => {\r\n          if (tabValue === 0 && announcement.accepted)\r\n            return (\r\n              <Announcement\r\n                key={index}\r\n                {...announcement}\r\n                announcements={announcements}\r\n                setAnnouncements={setAnnouncements}\r\n                refetch={refetch}\r\n              />\r\n            );\r\n          if (tabValue === 1 && !announcement.accepted)\r\n            return (\r\n              <Announcement\r\n                key={index}\r\n                {...announcement}\r\n                announcements={announcements}\r\n                setAnnouncements={setAnnouncements}\r\n                refetch={refetch}\r\n              />\r\n            );\r\n          else return null;\r\n        })}\r\n      </Page>\r\n      {openModal && (\r\n        <AddAnnouncementModal\r\n          open={openModal}\r\n          setOpenModal={setOpenModal}\r\n          refetch={refetch}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnnouncementPage;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const AGREEMENTS = gql`\r\n  query agreements {\r\n    agreements {\r\n      id\r\n      address\r\n      city\r\n      email\r\n      company_name\r\n      phone\r\n      from\r\n      to\r\n      accepted\r\n      Student {\r\n        id\r\n        index_number\r\n        first_name\r\n        last_name\r\n        email\r\n        color\r\n      }\r\n      InternshipJournal {\r\n        id\r\n        accepted\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const DELETE_PRACTICE_AGREEMENT = gql`\r\n  mutation deletePracticeAgreement($id: ID!) {\r\n    deletePracticeAgreement(id: $id)\r\n  }\r\n`;\r\n\r\nexport const CONFIRM_PRACTICE_AGREEMENT = gql`\r\n  mutation confirmPracticeAgreement($id: ID!) {\r\n    confirmPracticeAgreement(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CONFIRM_JOURNAL = gql`\r\n  mutation confirmJournal($id: ID!) {\r\n    confirmJournal(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nimport css from \"./Agreement.module.css\";\r\nimport Container from \"@components/Container\";\r\nimport ConfirmModal from \"@components/ConfirmModal\";\r\nimport {\r\n  CONFIRM_PRACTICE_AGREEMENT,\r\n  DELETE_PRACTICE_AGREEMENT,\r\n  CONFIRM_JOURNAL,\r\n} from \"./queries\";\r\nimport useAuth from \"@hooks/useAuth\";\r\nimport { IconAccept } from \"@icons\";\r\n\r\nconst Agreement = ({\r\n  id,\r\n  company_name,\r\n  city,\r\n  address,\r\n  email,\r\n  phone,\r\n  Student,\r\n  from,\r\n  to,\r\n  color,\r\n  accepted,\r\n  agreements,\r\n  setAgreements,\r\n  InternshipJournal,\r\n  refetch,\r\n}) => {\r\n  const [confirmPracticeAgreement] = useMutation(CONFIRM_PRACTICE_AGREEMENT);\r\n  const [deletePracticeAgreement] = useMutation(DELETE_PRACTICE_AGREEMENT);\r\n  const [confirmJournal] = useMutation(CONFIRM_JOURNAL);\r\n  const { token } = useAuth();\r\n\r\n  const [openDeleteModal, setOpenDeleteModal] = useState(false);\r\n  const [openConfirmModal, setOpenConfirmModal] = useState(false);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleConfirm = () => {\r\n    confirmPracticeAgreement({ variables: { id } }).then((data) => {\r\n      if (data) {\r\n        enqueueSnackbar(\"Zatwierdzono pomyślnie\", { variant: \"success\" });\r\n        setAgreements(\r\n          agreements.map((agreement) => {\r\n            if (agreement.id === id) return { ...agreement, accepted: true };\r\n            else return agreement;\r\n          })\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    const deleted = await deletePracticeAgreement({ variables: { id } });\r\n    if (deleted) {\r\n      enqueueSnackbar(\"Usunięto pomyślnie\", { variant: \"success\" });\r\n      setOpenDeleteModal(false);\r\n      setAgreements(agreements.filter((agreement) => agreement.id !== id));\r\n    } else {\r\n      enqueueSnackbar(\"Wystąpił problem\", { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  const handleConfirmJournal = () => {\r\n    confirmJournal({ variables: { id: InternshipJournal.id } }).then((data) => {\r\n      if (data) {\r\n        setOpenConfirmModal(false);\r\n        refetch();\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className={css.container}>\r\n        <div className={css.avatar}>\r\n          {\" \"}\r\n          <Avatar style={{ backgroundColor: Student.color }}>\r\n            {Student.first_name.charAt(0)}\r\n            {Student.last_name.charAt(0)}\r\n          </Avatar>\r\n          <h2>{`${Student.first_name} ${Student.last_name}`}</h2>\r\n        </div>\r\n\r\n        <span>\r\n          <span>Okres wykonywania praktyki:</span> Od{\" \"}\r\n          {dayjs(from).format(\"DD/MM/YYYY\")} do {dayjs(to).format(\"DD/MM/YYYY\")}\r\n        </span>\r\n        <span>\r\n          <span>Numer indeksu: </span> {Student.index_number}\r\n        </span>\r\n        <span>\r\n          <span>Email:</span> {Student.email}\r\n        </span>\r\n        <h3>Dane firmy</h3>\r\n        <span>\r\n          <span>Nazwa firmy: </span>\r\n          {company_name}\r\n        </span>\r\n        <span>\r\n          <span>Email: </span>\r\n          {email}\r\n        </span>\r\n        <span>\r\n          <span>Telefon: </span>\r\n          {phone}\r\n        </span>\r\n        <span>\r\n          <span>Miejscowość: </span>\r\n          {city}\r\n        </span>\r\n        <span>\r\n          <span>Adres: </span>\r\n          {address}\r\n        </span>\r\n        <br />\r\n        {InternshipJournal?.accepted && (\r\n          <span>\r\n            Dziennik zatwierdzony <IconAccept />\r\n          </span>\r\n        )}\r\n        <div className={css.buttons}>\r\n          {!accepted && <button onClick={handleConfirm}>Zatwierdź</button>}\r\n          <button preset=\"red\" onClick={() => setOpenDeleteModal(true)}>\r\n            Usuń\r\n          </button>\r\n\r\n          {InternshipJournal && (\r\n            <>\r\n              <a href={`uploads/${InternshipJournal.id}/?token=${token}`}>\r\n                <button preset=\"bright\">Dziennik</button>\r\n              </a>\r\n              {!InternshipJournal.accepted && (\r\n                <button onClick={() => setOpenConfirmModal(true)}>\r\n                  Zatwierdź dziennik\r\n                </button>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </Container>\r\n      {openDeleteModal && (\r\n        <ConfirmModal\r\n          open={openDeleteModal}\r\n          setOpenModal={setOpenDeleteModal}\r\n          onDecline={() => setOpenDeleteModal(false)}\r\n          onConfirm={handleDelete}\r\n        >\r\n          Czy na pewno chcesz usunąć tą umowe?\r\n          <br />\r\n          Tej operacji nie da się cofnąć.\r\n        </ConfirmModal>\r\n      )}\r\n      {openConfirmModal && (\r\n        <ConfirmModal\r\n          open={openConfirmModal}\r\n          setOpenModal={setOpenConfirmModal}\r\n          onDecline={() => setOpenConfirmModal(false)}\r\n          onConfirm={handleConfirmJournal}\r\n        >\r\n          Czy na pewno chcesz zatwierdzić dziennik?\r\n          <br />\r\n          Tej operacji nie da się cofnąć.\r\n        </ConfirmModal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Agreement;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nimport Tabs from \"@components/Tabs\";\r\nimport useAuth from \"@hooks/useAuth\";\r\nimport USER_TYPES from \"@config/userTypes\";\r\nimport Page from \"@components/Page\";\r\nimport { AGREEMENTS } from \"./queries\";\r\nimport css from \"./AgreementPage.module.css\";\r\nimport Agreement from \"@components/Agreement\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\n\r\nconst AgreementPage = () => {\r\n  const { userType } = useAuth();\r\n  const { loading, error, data, refetch } = useQuery(AGREEMENTS);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [agreements, setAgreements] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (data) setAgreements(data.agreements);\r\n  }, [data]);\r\n\r\n  if (loading) return <LoadingSpinner />;\r\n  //   if (error) return \"error\";\r\n  if (userType !== USER_TYPES.practiceSuperviser) return <Redirect to=\"/\" />;\r\n  return (\r\n    <>\r\n      <Page title=\"Umowy\">\r\n        <div className={css.tabs}>\r\n          <Tabs\r\n            value={tabValue}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            onChange={(event, newValue) => setTabValue(newValue)}\r\n          >\r\n            <Tabs.Tab label=\"Zatwierdzone\" />\r\n            <Tabs.Tab label=\"Oczekujące\" />\r\n          </Tabs>\r\n        </div>\r\n        <div className={css.agreements}>\r\n          {tabValue === 0 && (\r\n            <>\r\n              {agreements.map(\r\n                (agreement) =>\r\n                  agreement.accepted && (\r\n                    <Agreement\r\n                      key={agreement.id}\r\n                      {...agreement}\r\n                      agreements={agreements}\r\n                      setAgreements={setAgreements}\r\n                      refetch={refetch}\r\n                    />\r\n                  )\r\n              )}\r\n            </>\r\n          )}\r\n          {tabValue === 1 && (\r\n            <>\r\n              {agreements.map(\r\n                (agreement) =>\r\n                  !agreement.accepted && (\r\n                    <Agreement\r\n                      key={agreement.id}\r\n                      {...agreement}\r\n                      agreements={agreements}\r\n                      setAgreements={setAgreements}\r\n                      refetch={refetch}\r\n                    />\r\n                  )\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n        {/*}\r\n        {tabValue === 1 && <Companies />} */}\r\n      </Page>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AgreementPage;\r\n","import React from \"react\";\r\n\r\nimport css from \"./Student.module.css\";\r\nimport Container from \"@components/Container\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst Student = ({ first_name, last_name, index_number, email, color }) => {\r\n  return (\r\n    <Container className={css.container}>\r\n      <div className={css.avatar}>\r\n        <Avatar style={{ backgroundColor: color }}>\r\n          {first_name.charAt(0)}\r\n          {last_name.charAt(0)}\r\n        </Avatar>\r\n        <h3>{`${first_name} ${last_name}`}</h3>\r\n      </div>\r\n      <span>\r\n        <span>Email:</span> {email}\r\n      </span>\r\n      <span>\r\n        <span>Numer indeksu:</span> {index_number}\r\n      </span>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Student;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_STUDENTS = gql`\r\n  query students {\r\n    students {\r\n      id\r\n      index_number\r\n      email\r\n      first_name\r\n      last_name\r\n      color\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nimport Student from \"@components/Student\";\r\nimport css from \"./Students.module.css\";\r\nimport { GET_STUDENTS } from \"./queries\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\n\r\nconst Students = () => {\r\n  const { loading, error, data } = useQuery(GET_STUDENTS);\r\n\r\n  if (loading) return <LoadingSpinner />;\r\n  if (error) return \"error\";\r\n  return (\r\n    <div className={css.studentsList}>\r\n      {data.students.map(\r\n        ({ first_name, last_name, email, index_number, color, id }) => (\r\n          <Student\r\n            key={id}\r\n            first_name={first_name}\r\n            last_name={last_name}\r\n            email={email}\r\n            index_number={index_number}\r\n            color={color}\r\n          />\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Students;\r\n","import React from \"react\";\r\nimport css from \"./CompanyAvatar.module.css\";\r\n\r\nconst CompanyAvatar = ({ children, color }) => {\r\n  return (\r\n    <div className={css.companyAvatar} style={{ backgroundColor: color }}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyAvatar;\r\n","import React from \"react\";\r\n\r\nimport css from \"./Student.module.css\";\r\nimport Container from \"@components/Container\";\r\nimport CompanyAvatar from \"@components/CompanyAvatar\";\r\n\r\nconst Student = ({\r\n  id,\r\n  name,\r\n  city,\r\n  address,\r\n  email,\r\n  first_name,\r\n  last_name,\r\n  color,\r\n}) => {\r\n  return (\r\n    <Container className={css.container}>\r\n      <div className={css.avatar}>\r\n        <CompanyAvatar color={color}>\r\n          {name.charAt(0)}-{first_name.charAt(0)}\r\n          {last_name.charAt(0)}\r\n        </CompanyAvatar>\r\n        <h3>{name}</h3>\r\n      </div>\r\n      <span>\r\n        <span>Przedstawiciel:</span> {`${first_name} ${last_name}`}\r\n      </span>\r\n      <span>\r\n        <span>Email:</span> {email}\r\n      </span>\r\n      <span>\r\n        <span>Miejscowość:</span> {city}\r\n      </span>\r\n      <span>\r\n        <span>Adres:</span> {address}\r\n      </span>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Student;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_COMPANIES = gql`\r\n  query companies {\r\n    companies {\r\n      id\r\n      name\r\n      city\r\n      address\r\n      email\r\n      first_name\r\n      last_name\r\n      color\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nimport Company from \"@components/Company\";\r\nimport css from \"./Companies.module.css\";\r\nimport { GET_COMPANIES } from \"./queries\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\n\r\nconst Companies = () => {\r\n  const { loading, error, data } = useQuery(GET_COMPANIES);\r\n\r\n  if (loading) return <LoadingSpinner />;\r\n  if (error) return \"error\";\r\n  return (\r\n    <div className={css.companiesList}>\r\n      {data.companies.map(\r\n        ({ id, name, city, address, email, first_name, last_name, color }) => (\r\n          <Company\r\n            key={id}\r\n            first_name={first_name}\r\n            last_name={last_name}\r\n            email={email}\r\n            address={address}\r\n            city={city}\r\n            name={name}\r\n            color={color}\r\n          />\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Companies;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_INVITE = gql`\r\n  mutation createInvite($email: String!, $userType: String!) {\r\n    createInvite(email: $email, userType: $userType) {\r\n      email\r\n      userType\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport validator from \"validator\";\r\n\r\nimport css from \"./AddUserModal.module.css\";\r\nimport Input from \"@components/Input\";\r\nimport Textarea from \"@components/Textarea\";\r\nimport Modal from \"@components/Modal\";\r\n// import { ADD_STUDENT } from \"./queries.js\";\r\nimport useSnackGraphql from \"@hooks/useSnackGraphql\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport Select from \"@components/Select\";\r\nimport { CREATE_INVITE } from \"./queries\";\r\nimport USER_TYPES from \"@config/userTypes\";\r\n\r\nconst AddAnnouncementModal = (props) => {\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const [showGraphqlErrors, enqueueSnackbar] = useSnackGraphql();\r\n  const [createInvite] = useMutation(CREATE_INVITE);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { setOpenModal } = props;\r\n\r\n  const onSubmit = (data) => {\r\n    setIsLoading(true);\r\n    createInvite({\r\n      variables: {\r\n        email: data.email,\r\n        userType: data.userType,\r\n      },\r\n    })\r\n      .then((data) => {\r\n        if (data)\r\n          enqueueSnackbar(\"Zaproszenie wysłano pomyślnie\", {\r\n            variant: \"success\",\r\n          });\r\n        setIsLoading(false);\r\n        setOpenModal(false);\r\n      })\r\n      .catch((err) => {\r\n        showGraphqlErrors(err);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      header=\"Dodaj użytkownika\"\r\n      isLoading={isLoading}\r\n      buttons={\r\n        <>\r\n          <button preset=\"bright\" onClick={() => setOpenModal(false)}>\r\n            Zamknij\r\n          </button>\r\n\r\n          <button onClick={handleSubmit(onSubmit)}>Wyślij zaproszenie</button>\r\n        </>\r\n      }\r\n    >\r\n      <div className={css.container}>\r\n        <div className={css.content}>\r\n          <div className={css.inputGroup}>\r\n            <Select\r\n              inputRef={register}\r\n              options={[\r\n                { label: \"Student\", value: USER_TYPES.student },\r\n                {\r\n                  label: \"Opiekun praktyk\",\r\n                  value: USER_TYPES.practiceSuperviser,\r\n                },\r\n                { label: \"Firma\", value: USER_TYPES.company },\r\n              ]}\r\n              label=\"Typ użytkownika*\"\r\n              name=\"userType\"\r\n              labelOnTop\r\n            />\r\n            <Input\r\n              inputRef={register({\r\n                required: true,\r\n                validate: validator.isEmail,\r\n              })}\r\n              label=\"Adres email*\"\r\n              labelOnTop\r\n              name=\"email\"\r\n              placeholder=\"jk@example.com\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={css.errors}>\r\n        {errors.email && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            Adres email jest niepoprawny\r\n          </Alert>\r\n        )}\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddAnnouncementModal;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport Tabs from \"@components/Tabs\";\r\nimport useAuth from \"@hooks/useAuth\";\r\nimport USER_TYPES from \"@config/userTypes\";\r\nimport Page from \"@components/Page\";\r\nimport Students from \"./Students\";\r\nimport Companies from \"./Companies\";\r\nimport css from \"./UsersPage.module.css\";\r\nimport AddUserModal from \"@components/AddUserModal\";\r\n\r\nconst UsersPage = () => {\r\n  const { userType } = useAuth();\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const [tabValue, setTabValue] = useState(0);\r\n  if (userType !== USER_TYPES.practiceSuperviser) return <Redirect to=\"/\" />;\r\n  return (\r\n    <>\r\n      <Page\r\n        title=\"Użytkownicy\"\r\n        button={\r\n          <button onClick={() => setOpenModal(true)}>Dodaj użytkownika</button>\r\n        }\r\n      >\r\n        <div className={css.tabs}>\r\n          <Tabs\r\n            value={tabValue}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            onChange={(event, newValue) => setTabValue(newValue)}\r\n          >\r\n            <Tabs.Tab label=\"Studenci\" />\r\n            <Tabs.Tab label=\"Firmy\" />\r\n          </Tabs>\r\n        </div>\r\n        {tabValue === 0 && <Students />}\r\n        {tabValue === 1 && <Companies />}\r\n      </Page>\r\n      {openModal && (\r\n        <AddUserModal open={openModal} setOpenModal={setOpenModal} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UsersPage;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_PRACTICE_SUPERVISER = gql`\r\n  query mePracticeSuperviser {\r\n    mePracticeSuperviser {\r\n      email\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport AnnouncementPage from \"./AnnouncementPage\";\r\nimport AgreementPage from \"./AgreementPage\";\r\nimport UsersPage from \"./UsersPage\";\r\nimport { practiceSuperviserAtom } from \"@config/userRecoilAtoms\";\r\nimport { GET_PRACTICE_SUPERVISER } from \"./queries.js\";\r\n\r\nconst PracticeSuperviser = () => {\r\n  const [practiceSuperviser, setPracticeSuperviser] = useRecoilState(\r\n    practiceSuperviserAtom\r\n  );\r\n  const [getPracticeSuperviser, { data }] = useLazyQuery(\r\n    GET_PRACTICE_SUPERVISER\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!practiceSuperviser) {\r\n      getPracticeSuperviser();\r\n    }\r\n  }, [practiceSuperviser, getPracticeSuperviser]);\r\n\r\n  useEffect(() => {\r\n    if (data) setPracticeSuperviser(data.mePracticeSuperviser);\r\n  }, [data, setPracticeSuperviser]);\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <AnnouncementPage />\r\n        </Route>\r\n        <Route exact path=\"/users\">\r\n          <UsersPage />\r\n        </Route>\r\n        <Route exact path=\"/agreements\">\r\n          <AgreementPage />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PracticeSuperviser;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const ANNOUNCEMENTS = gql`\r\n  query practiceAnnouncements {\r\n    practiceAnnouncements {\r\n      id\r\n      header\r\n      slots\r\n      technologies\r\n      description\r\n      to\r\n      from\r\n      accepted\r\n      phone\r\n      email\r\n      company_name\r\n      CompanyId\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport { ANNOUNCEMENTS } from \"./queries\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport AddAnnouncementModal from \"@components/AddAnnouncementModal\";\r\nimport Tabs from \"@components/Tabs\";\r\nimport css from \"./AnnouncementPage.module.css\";\r\nimport Announcement from \"@components/Announcement\";\r\nimport Page from \"@components/Page\";\r\nimport { companyAtom } from \"@config/userRecoilAtoms\";\r\n\r\nconst AnnouncementPage = () => {\r\n  const { loading, error, data, refetch } = useQuery(ANNOUNCEMENTS);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [announcements, setAnnouncements] = useState([]);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [company] = useRecoilState(companyAtom);\r\n\r\n  useEffect(() => {\r\n    if (data) setAnnouncements(data.practiceAnnouncements);\r\n  }, [data]);\r\n\r\n  if (loading) return <LoadingSpinner />;\r\n  if (error) return \"error\";\r\n  return (\r\n    <>\r\n      <Page\r\n        title=\"Ogłoszenia praktyk\"\r\n        button={\r\n          <button onClick={() => setOpenModal(true)}>Dodaj ogłoszenie</button>\r\n        }\r\n      >\r\n        <div className={css.tabs}>\r\n          <Tabs\r\n            value={tabValue}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            onChange={(event, newValue) => setTabValue(newValue)}\r\n          >\r\n            <Tabs.Tab label=\"Wszystkie ogłoszenia\" />\r\n            <Tabs.Tab label=\"Moje ogłoszenia\" />\r\n          </Tabs>\r\n        </div>\r\n        {announcements.map((announcement, index) => {\r\n          if (tabValue === 0)\r\n            return (\r\n              <Announcement\r\n                refetch={refetch}\r\n                key={index}\r\n                {...announcement}\r\n                announcements={announcements}\r\n                setAnnouncements={setAnnouncements}\r\n              />\r\n            );\r\n          if (tabValue === 1 && company?.id === announcement.CompanyId)\r\n            return (\r\n              <Announcement\r\n                refetch={refetch}\r\n                key={index}\r\n                {...announcement}\r\n                announcements={announcements}\r\n                setAnnouncements={setAnnouncements}\r\n              />\r\n            );\r\n          else return null;\r\n        })}\r\n      </Page>\r\n      {openModal && (\r\n        <AddAnnouncementModal\r\n          open={openModal}\r\n          setOpenModal={setOpenModal}\r\n          refetch={refetch}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnnouncementPage;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_COMPANY = gql`\r\n  query meCompany {\r\n    meCompany {\r\n      id\r\n      email\r\n      phone\r\n      name\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\n\r\nimport css from \"./Company.module.css\";\r\nimport AnnouncementPage from \"./AnnouncementPage\";\r\nimport { companyAtom } from \"@config/userRecoilAtoms\";\r\nimport { GET_COMPANY } from \"./queries.js\";\r\n\r\nconst Company = () => {\r\n  const [company, setCompany] = useRecoilState(companyAtom);\r\n  const [getCompany, { data }] = useLazyQuery(GET_COMPANY);\r\n\r\n  useEffect(() => {\r\n    if (!company) {\r\n      getCompany();\r\n    }\r\n  }, [company, getCompany]);\r\n\r\n  useEffect(() => {\r\n    if (data) setCompany(data.meCompany);\r\n  }, [data, setCompany]);\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <AnnouncementPage />\r\n        </Route>\r\n        {/* <Route exact path=\"/reportpractice\">\r\n              <ReportPractice />\r\n            </Route>\r\n            <Route exact path=\"/agreement\">\r\n              <AgreementPage />\r\n            </Route> */}\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Company;\r\n","import React, { useState } from \"react\";\r\nimport css from \"./ActionMenu.module.css\";\r\n\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport const Item = React.forwardRef(({ onClick, children }, ref) => {\r\n  return <MenuItem onClick={onClick}>{children}</MenuItem>;\r\n});\r\n\r\nexport const ActionMenu = React.forwardRef(\r\n  ({ children, closeMenu }, anchorEl) => {\r\n    return (\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={closeMenu}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n        transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n      >\r\n        {children}\r\n      </Menu>\r\n    );\r\n  }\r\n);\r\n\r\nexport const useMenu = () => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const openMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const closeMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return [anchorEl, openMenu, closeMenu];\r\n};\r\n\r\nActionMenu.Item = Item;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport css from \"./Navbar.module.css\";\r\nimport Logo from \"@assets/Logo.jsx\";\r\nimport { ActionMenu, useMenu } from \"@components/ActionMenu\";\r\nimport {\r\n  practiceSuperviserAtom,\r\n  companyAtom,\r\n  studentAtom,\r\n} from \"../../config/userRecoilAtoms\";\r\n\r\nconst Navbar = () => {\r\n  const [anchorEl, openMenu, closeMenu] = useMenu();\r\n  const [practiceSuperviser] = useRecoilState(practiceSuperviserAtom);\r\n  const [company] = useRecoilState(companyAtom);\r\n  const [student] = useRecoilState(studentAtom);\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <div>\r\n        <Link to=\"/\" className={css.logo}>\r\n          <Logo />\r\n        </Link>\r\n\r\n        <div className={css.menu}>\r\n          <Link to=\"/\">Ogłoszenia praktyk</Link>\r\n          {practiceSuperviser && (\r\n            <>\r\n              <Link to=\"/users\">Użytkownicy</Link>\r\n              <Link to=\"/agreements\">Umowy</Link>\r\n            </>\r\n          )}\r\n          {student && <Link to=\"/mypractice\">Moja praktyka</Link>}\r\n          {/* <Link to=\"/agreement\">Umowy</Link> */}\r\n        </div>\r\n      </div>\r\n      <div className={css.menu}>\r\n        <a onClick={openMenu} className={css.user}>\r\n          {practiceSuperviser && practiceSuperviser.email}\r\n          {company && company.email}\r\n          {student && student.email}\r\n        </a>\r\n        <ActionMenu ref={anchorEl} closeMenu={closeMenu}>\r\n          {/* <ActionMenu.Item onClick={closeMenu}>Profil</ActionMenu.Item> */}\r\n          <ActionMenu.Item\r\n            onClick={() => {\r\n              closeMenu();\r\n              history.push(\"/logout\");\r\n            }}\r\n          >\r\n            Wyloguj\r\n          </ActionMenu.Item>\r\n        </ActionMenu>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nimport Navbar from \"@components/Navbar\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport useAuth from \"@hooks/useAuth\";\r\nimport { withApollo } from \"@apollo/client/react/hoc\";\r\n\r\nconst Logout = ({ client }) => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"userType\");\r\n  client.clearStore();\r\n  return <Redirect to=\"/login\" push={true} />;\r\n};\r\n\r\nexport default withApollo(Logout);\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const CONFIRM_INVITATION_TOKEN = gql`\r\n  mutation confirmInvitationToken($token: String!) {\r\n    confirmInvitationToken(token: $token) {\r\n      email\r\n      userType\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REGISTER_COMPANY = gql`\r\n  mutation registerCompany(\r\n    $token: String!\r\n    $first_name: String!\r\n    $last_name: String!\r\n    $password: String!\r\n    $name: String!\r\n    $city: String!\r\n    $address: String!\r\n    $phone: String\r\n    $confirm_password: String!\r\n  ) {\r\n    registerCompany(\r\n      token: $token\r\n      first_name: $first_name\r\n      last_name: $last_name\r\n      password: $password\r\n      name: $name\r\n      city: $city\r\n      phone: $phone\r\n      confirm_password: $confirm_password\r\n      address: $address\r\n    ) {\r\n      token\r\n      company {\r\n        id\r\n        email\r\n        first_name\r\n        last_name\r\n        color\r\n        name\r\n        city\r\n        address\r\n        phone\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REGISTER_STUDENT = gql`\r\n  mutation registerStudent(\r\n    $token: String!\r\n    $first_name: String!\r\n    $last_name: String!\r\n    $password: String!\r\n    $confirm_password: String!\r\n    $index_number: Int!\r\n  ) {\r\n    registerStudent(\r\n      token: $token\r\n      first_name: $first_name\r\n      last_name: $last_name\r\n      password: $password\r\n      confirm_password: $confirm_password\r\n      index_number: $index_number\r\n    ) {\r\n      token\r\n      student {\r\n        id\r\n        email\r\n        first_name\r\n        last_name\r\n        color\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REGISTER_PRACTICE_SUPERVISER = gql`\r\n  mutation registerPracticeSuperviser(\r\n    $token: String!\r\n    $first_name: String!\r\n    $last_name: String!\r\n    $password: String!\r\n    $confirm_password: String!\r\n  ) {\r\n    registerPracticeSuperviser(\r\n      token: $token\r\n      first_name: $first_name\r\n      last_name: $last_name\r\n      password: $password\r\n      confirm_password: $confirm_password\r\n    ) {\r\n      token\r\n      practiceSuperviser {\r\n        id\r\n        email\r\n        first_name\r\n        last_name\r\n        color\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Logo from \"@assets/Logo\";\r\nimport css from \"./Statement.module.css\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\n\r\nconst Statement = ({ children, title, isLoading }) => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className={css.outerContainer}>\r\n      <div className={css.container}>\r\n        <div className={css.header}>\r\n          <h2>{title}</h2>\r\n          <Logo onClick={() => history.push(\"/\")} />\r\n        </div>\r\n        <div className={css.content}>\r\n          <p>{children}</p>\r\n          {isLoading && <LoadingSpinner />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statement;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, Redirect, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport css from \"./Invitation.module.css\";\r\nimport LoadingSpinner from \"@components/LoadingSpinner\";\r\nimport {\r\n  CONFIRM_INVITATION_TOKEN,\r\n  REGISTER_COMPANY,\r\n  REGISTER_PRACTICE_SUPERVISER,\r\n  REGISTER_STUDENT,\r\n} from \"./queries\";\r\nimport useSnackGraphql from \"@hooks/useSnackGraphql\";\r\nimport Input from \"@components/Input\";\r\nimport USER_TYPES from \"@config/userTypes\";\r\nimport Logo from \"@assets/Logo\";\r\nimport Statement from \"@components/Statement\";\r\nimport useAuth from \"@hooks/useAuth\";\r\n\r\nconst Invitation = () => {\r\n  const { token } = useParams();\r\n  const history = useHistory();\r\n  const [getInvitationConfirm, { loading }] = useMutation(\r\n    CONFIRM_INVITATION_TOKEN\r\n  );\r\n  const [invitationError, setInvitationError] = useState(false);\r\n  const [registerStudent] = useMutation(REGISTER_STUDENT);\r\n  const [registerCompany] = useMutation(REGISTER_COMPANY);\r\n  const [registerPracticeSuperviser] = useMutation(\r\n    REGISTER_PRACTICE_SUPERVISER\r\n  );\r\n  const [invitationData, setInvitationData] = useState(null);\r\n  const [registerSuccess, setRegisterSuccess] = useState(false);\r\n  const [enqueueError, enqueueSnackbar] = useSnackGraphql();\r\n  const { register, handleSubmit, watch, errors } = useForm();\r\n  const { removeToken, removeUserType } = useAuth();\r\n\r\n  const succesRegister = () => {\r\n    enqueueSnackbar(\"Zarejestrowano pomyślnie\", {\r\n      variant: \"success\",\r\n    });\r\n\r\n    setRegisterSuccess(true);\r\n\r\n    setTimeout(() => {\r\n      removeToken();\r\n      removeUserType();\r\n      history.push(\"/login\");\r\n    }, 5000);\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    if (invitationData) {\r\n      const { userType } = invitationData;\r\n      switch (userType) {\r\n        case USER_TYPES.student:\r\n          registerStudent({\r\n            variables: {\r\n              ...data,\r\n              index_number: parseInt(data.index_number),\r\n              token,\r\n            },\r\n          })\r\n            .then((data) => {\r\n              data && succesRegister();\r\n            })\r\n            .catch((error) => {\r\n              enqueueError(error);\r\n            });\r\n          break;\r\n        case USER_TYPES.company:\r\n          registerCompany({ variables: { ...data, token } })\r\n            .then((data) => {\r\n              data && succesRegister();\r\n            })\r\n            .catch((error) => {\r\n              enqueueError(error);\r\n            });\r\n          break;\r\n        case USER_TYPES.practiceSuperviser:\r\n          registerPracticeSuperviser({ variables: { ...data, token } })\r\n            .then((data) => {\r\n              data && succesRegister();\r\n            })\r\n            .catch((error) => {\r\n              enqueueError(error);\r\n            });\r\n          break;\r\n        default:\r\n          console.log(\"UserType error\");\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      getInvitationConfirm({ variables: { token } })\r\n        .then(({ data }) => {\r\n          console.log(data);\r\n          if (data.confirmInvitationToken) {\r\n            setInvitationData(data.confirmInvitationToken);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setInvitationError(true);\r\n          enqueueError(err);\r\n        });\r\n    }\r\n  }, [token]);\r\n\r\n  if (loading) return <LoadingSpinner />;\r\n  if (registerSuccess) {\r\n    return (\r\n      <>\r\n        <Statement title=\"Zarejestrowano pomyślnie\" isLoading={true}>\r\n          Zarejestrowano pomyślnie. <br />\r\n          za chwilę nastąpi przekierowanie do strony logowania.\r\n        </Statement>\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (invitationError) {\r\n    return (\r\n      <Statement title=\"Wystąpił błąd\">\r\n        Link z zaproszeniem wygasł, lub został wykorzystany, skontaktuj się z\r\n        opiekunem praktyk.\r\n      </Statement>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={css.outerContainer}>\r\n      <div className={css.container}>\r\n        <div className={css.header}>\r\n          <h2>Stwórz konto</h2>\r\n          <Logo />\r\n        </div>\r\n        <div className={css.content}>\r\n          <div>\r\n            <label>Adres email</label>\r\n            <br />\r\n            <span>{invitationData?.email}</span>\r\n            <Input\r\n              name=\"first_name\"\r\n              inputRef={register({ required: \"Musisz podać imię\" })}\r\n              labelOnTop\r\n              label=\"Imię\"\r\n            />\r\n            {errors.first_name && (\r\n              <Alert variant=\"filled\" severity=\"error\">\r\n                {errors.first_name.message}\r\n              </Alert>\r\n            )}\r\n            <Input\r\n              name=\"last_name\"\r\n              inputRef={register({ required: \"Musisz podać nazwisko\" })}\r\n              labelOnTop\r\n              label=\"Nazwisko\"\r\n            />\r\n            {errors.last_name && (\r\n              <Alert variant=\"filled\" severity=\"error\">\r\n                {errors.last_name.message}\r\n              </Alert>\r\n            )}\r\n            <Input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              inputRef={register({\r\n                required: \"Musisz podać hasło\",\r\n                minLength: {\r\n                  value: 8,\r\n                  message: \"Hasło musi mieć przynajmniej 8 znaków\",\r\n                },\r\n              })}\r\n              labelOnTop\r\n              label=\"Hasło\"\r\n            />\r\n            {errors.password && (\r\n              <Alert variant=\"filled\" severity=\"error\">\r\n                {errors.password.message}\r\n              </Alert>\r\n            )}\r\n            <Input\r\n              name=\"confirm_password\"\r\n              type=\"password\"\r\n              inputRef={register({\r\n                validate: (value) =>\r\n                  value === watch(\"password\") || \"Hasła się nie zgadzają\",\r\n              })}\r\n              labelOnTop\r\n              label=\"Powtórz hasło\"\r\n            />\r\n            {errors.confirm_password && (\r\n              <Alert variant=\"filled\" severity=\"error\">\r\n                {errors.confirm_password.message}\r\n              </Alert>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <label>Typ konta</label>\r\n            <br />\r\n            {invitationData?.userType === USER_TYPES.student && (\r\n              <>\r\n                <span>Student</span>\r\n                <Input\r\n                  name=\"index_number\"\r\n                  inputRef={register({\r\n                    required: \"Musisz podać numer indeksu\",\r\n                  })}\r\n                  labelOnTop\r\n                  label=\"Numer indeksu*\"\r\n                />\r\n                {errors.index_number && (\r\n                  <Alert variant=\"filled\" severity=\"error\">\r\n                    {errors.index_number.message}\r\n                  </Alert>\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            {invitationData?.userType === USER_TYPES.company && (\r\n              <>\r\n                <span>Firma</span>\r\n                <Input\r\n                  name=\"name\"\r\n                  inputRef={register({\r\n                    required: \"Musisz podać nazwę firmy\",\r\n                  })}\r\n                  labelOnTop\r\n                  label=\"Nazwa firmy*\"\r\n                />\r\n                {errors.name && (\r\n                  <Alert variant=\"filled\" severity=\"error\">\r\n                    {errors.name.message}\r\n                  </Alert>\r\n                )}\r\n                <Input\r\n                  name=\"city\"\r\n                  inputRef={register({\r\n                    required: \"Musisz podać miejscowość i kod pocztowy\",\r\n                  })}\r\n                  labelOnTop\r\n                  label=\"Miejscowość i kod pocztowy*\"\r\n                />\r\n                {errors.city && (\r\n                  <Alert variant=\"filled\" severity=\"error\">\r\n                    {errors.city.message}\r\n                  </Alert>\r\n                )}\r\n                <Input\r\n                  name=\"address\"\r\n                  inputRef={register({\r\n                    required: \"Musisz podać adres\",\r\n                  })}\r\n                  labelOnTop\r\n                  label=\"Adres*\"\r\n                />\r\n                {errors.address && (\r\n                  <Alert variant=\"filled\" severity=\"error\">\r\n                    {errors.address.message}\r\n                  </Alert>\r\n                )}\r\n                <Input\r\n                  name=\"phone\"\r\n                  inputRef={register}\r\n                  labelOnTop\r\n                  label=\"Telefon\"\r\n                />\r\n              </>\r\n            )}\r\n            {invitationData?.userType === USER_TYPES.practiceSuperviser && (\r\n              <>\r\n                <span>Opiekun praktyk</span>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className={css.footer}>\r\n          <button onClick={handleSubmit(onSubmit)}>Stwórz konto</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Invitation;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Login from \"@bundles/Login\";\r\nimport Student from \"@bundles/Student\";\r\nimport \"../styles/globals.css\";\r\nimport useLocalStorage from \"@hooks/useLocalStorage\";\r\nimport PrivateRoute from \"../routes/PrivateRoute\";\r\nimport ProtectedRoute from \"../routes/ProtectedRoute\";\r\nimport PracticeSuperviser from \"./PracticeSuperviser\";\r\nimport Company from \"./Company\";\r\nimport Layout from \"@components/Layout\";\r\nimport Logout from \"./Logout\";\r\nimport USER_TYPES from \"@config/userTypes\";\r\nimport Invitation from \"@bundles/Invitation\";\r\nimport Background from \"@assets/Background.jpg\";\r\n\r\nconst Application = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n\r\n        <Route path=\"/logout\">\r\n          <Logout />\r\n        </Route>\r\n        <Route path=\"/invitation/:token\">\r\n          <Invitation />\r\n        </Route>\r\n\r\n        <ProtectedRoute path=\"/\">\r\n          <Layout>\r\n            <PrivateRoute userType={USER_TYPES.student}>\r\n              <Student />\r\n            </PrivateRoute>\r\n            <PrivateRoute userType={USER_TYPES.practiceSuperviser}>\r\n              <PracticeSuperviser />\r\n            </PrivateRoute>\r\n            <PrivateRoute userType={USER_TYPES.company}>\r\n              <Company />\r\n            </PrivateRoute>\r\n          </Layout>\r\n        </ProtectedRoute>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Application;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n  ApolloProvider,\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  HttpLink,\r\n  from,\r\n  ApolloLink,\r\n} from \"@apollo/client\";\r\nimport { onError } from \"@apollo/client/link/error\";\r\nimport { SnackbarProvider } from \"notistack\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nimport Application from \"@bundles\";\r\n\r\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\r\n  if (graphQLErrors)\r\n    graphQLErrors.map(({ message, locations, path, extensions }) => {\r\n      console.log(\r\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\r\n      );\r\n      if (extensions.code === \"UNAUTHENTICATED\") {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"userType\");\r\n        window.location.reload();\r\n      }\r\n    });\r\n  if (networkError) console.log(`[Network error]: ${networkError}`);\r\n});\r\n\r\nconsole.log(process.env.NODE_ENV);\r\n\r\nconst authMiddleware = new ApolloLink((operation, forward) => {\r\n  // add the authorization to the headers\r\n  const token = localStorage.getItem(\"token\");\r\n  operation.setContext({\r\n    headers: {\r\n      authorization: token?.replace(/['\"]+/g, \"\") || \"\",\r\n    },\r\n  });\r\n\r\n  return forward(operation);\r\n});\r\n\r\nconst additiveLink = from([\r\n  errorLink,\r\n  authMiddleware,\r\n  // new HttpLink({\r\n  //   uri:\r\n  // process.env.NODE_ENV === \"development\"\r\n  //   ? \"http://localhost:4001/graphql\"\r\n  //   : \"https://sep-praca-dyplomowa.herokuapp.com/graphql\",\r\n  // }),\r\n  createUploadLink({\r\n    uri:\r\n      process.env.NODE_ENV === \"development\"\r\n        ? \"http://localhost:4001/graphql\"\r\n        : \"https://sep-praca-dyplomowa.herokuapp.com/graphql\",\r\n  }),\r\n]);\r\n\r\nconst client = new ApolloClient({\r\n  link: additiveLink,\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <RecoilRoot>\r\n    <SnackbarProvider maxSnack={3}>\r\n      <React.StrictMode>\r\n        <ApolloProvider client={client}>\r\n          <Application />\r\n        </ApolloProvider>\r\n      </React.StrictMode>\r\n    </SnackbarProvider>\r\n  </RecoilRoot>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__1nz1X\",\"content\":\"Login_content__2clW6\",\"form\":\"Login_form__1zFVh\",\"title\":\"Login_title__19yIg\",\"logIn\":\"Login_logIn__1fntK\",\"page\":\"Login_page__ZL9j9\"};"],"sourceRoot":""}